Default row names c1, c2 ... being created.
151
Tried aggregator 1 time.
LP Presolve eliminated 100 rows and 17 columns.
Aggregator did 2 substitutions.
Reduced LP has 98 rows, 132 columns, and 313 nonzeros.
Presolve time = 0.00 sec. (0.13 ticks)
Initializing dual steep norms . . .

Iteration log . . .
Iteration:     1   Dual objective     =            96.000000
Iteration:    62   Dual objective     =           643.000000
Default row names c1, c2 ... being created.
Initial point: [('x2', 1.0), ('x3', 1.0), ('x4', 1.0), ('x5', 1.0), ('x6', 1.0), ('x10', 1.0), ('x13', 1.0), ('x14', 1.0), ('x18', 0.5), ('x19', 0.5), ('x22', 0.5), ('x23', 1.0), ('x24', 0.5), ('x25', 0.5), ('x26', 1.0), ('x27', 0.5), ('x30', 0.5), ('x33', 1.0), ('x34', 1.0), ('x35', 0.5), ('x36', 0.5), ('x39', 0.5), ('x40', 0.5), ('x43', 1.0), ('x44', 1.0), ('x46', 0.5), ('x47', 0.5), ('x49', 1.0), ('x51', 1.0), ('x52', 0.5), ('x53', 1.0), ('z1,2', 1.0), ('z7,4', 1.0), ('z8,5', 1.0), ('z9,6', 1.0), ('z11,1', 1.0), ('z12,3', 1.0), ('z15,7', 0.5), ('z15,8', 0.5), ('z16,8', 0.5), ('z16,9', 0.5), ('z17,10', 1.0), ('z18,11', 0.5), ('z19,11', 0.5), ('z20,12', 1.0), ('z21,14', 0.5), ('z21,7', 0.5), ('z22,9', 0.5), ('z25,14', 0.5), ('z27,16', 0.5), ('z28,16', 0.5), ('z28,17', 0.5), ('z29,17', 0.5), ('z29,18', 0.5), ('z30,18', 0.5), ('z32,15', 1.0), ('z36,21', 0.5), ('z37,22', 1.0), ('z38,23', 1.0), ('z39,24', 0.5), ('z40,24', 0.5), ('z41,26', 1.0), ('z42,28', 0.5), ('z42,21', 0.5), ('z45,25', 1.0), ('z46,27', 0.5), ('z47,28', 0.5), ('z48,29', 1.0), ('z50,30', 1.0), ('z52,27', 0.5)]
Finding a cutting plane...
Found incumbent of value 0.000000 after 0.00 sec. (0.01 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 1 rows and 115 columns.
Reduced MIP has 71 rows, 227 columns, and 380 nonzeros.
Reduced MIP has 0 binaries, 71 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.24 ticks)
Tried aggregator 1 time.
Reduced MIP has 71 rows, 227 columns, and 380 nonzeros.
Reduced MIP has 0 binaries, 71 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.18 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.00 sec. (0.20 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      196.0000              --- 
      0     0        0.9900    23        0.0000        0.9900       88     --- 
      0     0        0.9900     9        0.0000      Cuts: 69      111     --- 
      0     0        0.9900     5        0.0000   MIRcuts: 17      118     --- 
      0     0        0.9900     4        0.0000    MIRcuts: 7      121     --- 
      0     0        0.9900     5        0.0000    MIRcuts: 6      123     --- 
      0     2        0.9900     5        0.0000        0.9900      123     --- 
Elapsed time = 0.02 sec. (6.75 ticks, tree = 0.01 MB, solutions = 1)
*   547+  268                            0.5000        0.9900            98.00%

Mixed integer rounding cuts applied:  66
Gomory fractional cuts applied:  21

Root node processing (before b&c):
  Real time             =    0.02 sec. (6.68 ticks)
Parallel b&c, 4 threads:
  Real time             =    0.04 sec. (22.09 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.06 sec. (28.77 ticks)
Variables that need flooring, and amount to floor: [('x1', 0.9699999999999793), ('x7', 0.9899999999999793), ('x8', 0.98), ('x9', 0.99), ('x11', 0.98), ('x12', 0.97), ('x15', 0.4849999999999999), ('x16', 0.4849999999999999), ('x17', 0.4849999999999999), ('x20', 0.4849999999999999), ('x21', 0.24249999999999972), ('x28', 0.4850000000000003), ('x29', 0.4849999999999999), ('x32', 0.7275), ('x37', 0.7474999999999792), ('x38', 0.9699999999999793), ('x41', 0.5050000000000001), ('x42', 0.2424999999999793), ('x45', 0.7475), ('x48', 0.7274999999999792), ('x50', 0.9699999999999998), ('z1,31', 0.99), ('z2,4', 0.010000000000020659), ('z2,31', 0.020000000000020668), ('z3,6', 0.010000000000020659), ('z3,31', 0.02000000000002078), ('z4,1', 0.020000000000000018), ('z4,31', 0.020000000000000018), ('z5,1', 0.020000000000000018), ('z5,2', 0.030000000000000027), ('z6,2', 0.030000000000020788), ('z6,3', 0.030000000000020788), ('z7,3', 0.020000000000000018), ('z8,4', 0.99), ('z9,5', 0.010000000000000009), ('z10,6', 0.01000000000002077), ('z10,31', 0.02000000000002078), ('z11,8', 0.495), ('z13,12', 0.030000000000000027), ('z13,5', 0.020000000000000018), ('z14,7', 0.7575), ('z14,31', 0.26249999999999996), ('z17,9', 0.485), ('z18,10', 0.5150000000000001), ('z19,12', 0.515), ('z20,31', 0.99), ('z22,16', 0.515), ('z23,18', 0.4849999999999999), ('z23,11', 0.485), ('z25,13', 0.505), ('z26,14', 0.7575), ('z26,15', 0.27249999999999996), ('z27,15', 0.030000000000000027), ('z30,31', 0.5050000000000001), ('z32,22', 0.98), ('z33,17', 0.030000000000000027), ('z36,20', 0.5049999999999999), ('z37,21', 0.5050000000000001), ('z38,22', 0.98), ('z39,23', 0.030000000000000027), ('z40,31', 0.020000000000000018), ('z41,19', 0.010000000000000009), ('z43,30', 0.030000000000020788), ('z43,23', 0.030000000000020788), ('z44,25', 0.25249999999999995), ('z44,31', 0.26249999999999996), ('z46,26', 0.25249999999999995), ('z47,27', 0.24249999999999994), ('z48,28', 0.4850000000000001), ('z49,29', 0.030000000000020788), ('z49,30', 0.030000000000020788), ('z50,31', 0.99), ('z51,25', 0.010000000000000009), ('z51,31', 0.020000000000000018), ('z52,31', 0.26249999999999996), ('z53,29', 0.27249999999999996), ('z53,31', 0.26249999999999996)]
Found cutting plane:  [('x1', 1), ('x2', 1), ('x3', 2), ('x4', 2), ('x5', 2), ('x6', 2), ('x7', 1), ('x8', 1), ('x9', 1), ('x10', 1), ('x11', 1), ('x12', 1), ('x13', 2), ('x14', 2), ('x15', 1), ('x16', 1), ('x17', 1), ('x18', 1), ('x19', 2), ('x20', 1), ('x21', 2), ('x22', 2), ('x23', 2), ('x25', 2), ('x26', 2), ('x27', 2), ('x28', 2), ('x29', 1), ('x30', 2), ('x32', 2), ('x33', 2), ('x36', 1), ('x37', 1), ('x38', 2), ('x39', 2), ('x40', 2), ('x41', 1), ('x42', 2), ('x43', 2), ('x44', 2), ('x45', 1), ('x46', 1), ('x47', 2), ('x48', 2), ('x49', 1), ('x50', 2), ('x51', 2), ('x52', 1), ('x53', 2), ('z1,2', -1), ('z1,31', -1), ('z2,31', -1), ('z3,6', 1), ('z5,2', -1), ('z6,2', -1), ('z6,3', -1), ('z7,3', -1), ('z7,4', 1), ('z9,6', 1), ('z10,31', -1), ('z12,10', -1), ('z12,3', -1), ('z13,12', -1), ('z17,10', -1), ('z18,10', -2), ('z18,11', -1), ('z19,12', -1), ('z20,12', -1), ('z20,31', -1), ('z21,7', 1), ('z22,9', 1), ('z23,18', 1), ('z26,14', -1), ('z28,16', 1), ('z29,17', -1), ('z30,18', 1), ('z32,22', 1), ('z32,15', 1), ('z33,17', -1), ('z36,20', -1), ('z36,21', -1), ('z37,21', -1), ('z37,22', 1), ('z38,22', 1), ('z38,23', 1), ('z41,26', 1), ('z44,25', 1), ('z45,25', 1), ('z45,26', 1), ('z46,27', -1), ('z48,29', 1), ('z49,29', -1), ('z49,30', -1), ('z50,30', 1), ('z51,25', 1), ('z52,27', -1), ('z52,31', -1)]
Found cutting plane: <= 43.0
Linear combination is: 
0.010000000000000009 * [('x1', -1), ('z1,2', -1), ('z1,31', -1)])+
0.9799999999999793 * [('x2', -1), ('z2,4', -1), ('z2,31', -1)])+
0.02000000000002078 * [('x3', 1), ('z3,6', 1), ('z3,31', 1)])+
0.020000000000000018 * [('x4', 1), ('z4,1', 1), ('z4,31', 1)])+
0.020000000000000018 * [('x5', 1), ('z5,1', 1), ('z5,2', 1)])+
0.02000000000002078 * [('x6', 1), ('z6,2', 1), ('z6,3', 1)])+
0.010000000000000009 * [('x7', 1), ('z7,3', 1), ('z7,4', 1)])+
0.010000000000000009 * [('x9', 1), ('z9,5', 1), ('z9,6', 1)])+
0.9799999999999792 * [('x10', -1), ('z10,6', -1), ('z10,31', -1)])+
0.010000000000000009 * [('x12', -1), ('z12,10', -1), ('z12,3', -1)])+
0.020000000000000018 * [('x13', 1), ('z13,12', 1), ('z13,5', 1)])+
0.26249999999999996 * [('x14', 1), ('z14,7', 1), ('z14,31', 1)])+
0.495 * [('x15', -1), ('z15,7', -1), ('z15,8', -1)])+
0.495 * [('x16', -1), ('z16,8', -1), ('z16,9', -1)])+
0.010000000000000009 * [('x17', -1), ('z17,9', -1), ('z17,10', -1)])+
0.495 * [('x18', -1), ('z18,10', -1), ('z18,11', -1)])+
0.505 * [('x19', 1), ('z19,11', 1), ('z19,12', 1)])+
0.010000000000000009 * [('x20', -1), ('z20,12', -1), ('z20,31', -1)])+
0.505 * [('x21', 1), ('z21,14', 1), ('z21,7', 1)])+
0.505 * [('x22', 1), ('z22,16', 1), ('z22,9', 1)])+
0.99 * [('x23', 1), ('z23,18', 1), ('z23,11', 1)])+
0.505 * [('x25', 1), ('z25,13', 1), ('z25,14', 1)])+
0.26249999999999996 * [('x26', 1), ('z26,14', 1), ('z26,15', 1)])+
0.020000000000000018 * [('x27', 1), ('z27,15', 1), ('z27,16', 1)])+
0.99 * [('x28', 1), ('z28,16', 1), ('z28,17', 1)])+
0.010000000000000009 * [('x29', -1), ('z29,17', -1), ('z29,18', -1)])+
0.5050000000000001 * [('x30', 1), ('z30,18', 1), ('z30,31', 1)])+
0.99 * [('x32', 1), ('z32,22', 1), ('z32,15', 1)])+
0.020000000000000018 * [('x33', 1), ('z33,24', 1), ('z33,17', 1)])+
0.4950000000000001 * [('x36', -1), ('z36,20', -1), ('z36,21', -1)])+
0.010000000000000009 * [('x37', 1), ('z37,21', 1), ('z37,22', 1)])+
0.99 * [('x38', 1), ('z38,22', 1), ('z38,23', 1)])+
0.020000000000000018 * [('x39', 1), ('z39,23', 1), ('z39,24', 1)])+
0.020000000000000018 * [('x40', 1), ('z40,24', 1), ('z40,31', 1)])+
0.010000000000000009 * [('x41', 1), ('z41,26', 1), ('z41,19', 1)])+
0.5049999999999999 * [('x42', 1), ('z42,28', 1), ('z42,21', 1)])+
0.02000000000002078 * [('x43', 1), ('z43,30', 1), ('z43,23', 1)])+
0.26249999999999996 * [('x44', 1), ('z44,25', 1), ('z44,31', 1)])+
0.010000000000000009 * [('x45', 1), ('z45,25', 1), ('z45,26', 1)])+
0.7375 * [('x46', -1), ('z46,26', -1), ('z46,27', -1)])+
0.5049999999999999 * [('x47', 1), ('z47,27', 1), ('z47,28', 1)])+
0.99 * [('x48', 1), ('z48,28', 1), ('z48,29', 1)])+
0.9799999999999792 * [('x49', -1), ('z49,29', -1), ('z49,30', -1)])+
0.99 * [('x50', 1), ('z50,30', 1), ('z50,31', 1)])+
0.020000000000000018 * [('x51', 1), ('z51,25', 1), ('z51,31', 1)])+
0.7375 * [('x52', -1), ('z52,27', -1), ('z52,31', -1)])+
0.26249999999999996 * [('x53', 1), ('z53,29', 1), ('z53,31', 1)])+
0.99 * [('z1,2', -1), ('z5,2', -1), ('z6,2', -1)])+
0.99 * [('z6,3', -1), ('z7,3', -1), ('z12,3', -1)])+
0.99 * [('z2,4', 1), ('z7,4', 1), ('z8,4', 1)])+
0.99 * [('z3,6', 1), ('z9,6', 1), ('z10,6', 1)])+
0.495 * [('z14,7', 1), ('z15,7', 1), ('z21,7', 1)])+
0.495 * [('z11,8', 1), ('z15,8', 1), ('z16,8', 1)])+
0.495 * [('z16,9', 1), ('z17,9', 1), ('z22,9', 1)])+
0.99 * [('z12,10', -1), ('z17,10', -1), ('z18,10', -1)])+
0.505 * [('z18,11', -1), ('z19,11', -1), ('z23,11', -1)])+
0.99 * [('z13,12', -1), ('z19,12', -1), ('z20,12', -1)])+
0.505 * [('z21,14', -1), ('z25,14', -1), ('z26,14', -1)])+
0.010000000000000009 * [('z26,15', 1), ('z27,15', 1), ('z32,15', 1)])+
0.010000000000000009 * [('z22,16', 1), ('z27,16', 1), ('z28,16', 1)])+
0.99 * [('z28,17', -1), ('z29,17', -1), ('z33,17', -1)])+
0.4949999999999999 * [('z23,18', 1), ('z29,18', 1), ('z30,18', 1)])+
0.5049999999999999 * [('z36,21', -1), ('z37,21', -1), ('z42,21', -1)])+
0.99 * [('z32,22', 1), ('z37,22', 1), ('z38,22', 1)])+
0.010000000000000009 * [('z38,23', 1), ('z39,23', 1), ('z43,23', 1)])+
0.020000000000000018 * [('z33,24', -1), ('z39,24', -1), ('z40,24', -1)])+
0.99 * [('z44,25', 1), ('z45,25', 1), ('z51,25', 1)])+
0.99 * [('z41,26', 1), ('z45,26', 1), ('z46,26', 1)])+
0.26249999999999996 * [('z46,27', -1), ('z47,27', -1), ('z52,27', -1)])+
0.5049999999999999 * [('z42,28', -1), ('z47,28', -1), ('z48,28', -1)])+
0.010000000000000009 * [('z48,29', 1), ('z49,29', 1), ('z53,29', 1)])+
0.010000000000000009 * [('z43,30', 1), ('z49,30', 1), ('z50,30', 1)])+
0.99 * [('x1', 1), ('x4', 1), ('x5', 1)])+
0.9899999999999792 * [('x1', 1), ('x2', 1), ('x6', 1), ('x7', 1)])+
0.99 * [('x2', 1), ('x3', 1), ('x8', 1), ('x9', 1)])+
0.9899999999999792 * [('x3', 1), ('x10', 1)])+
0.99 * [('x4', 1), ('x11', 1), ('x14', 1), ('x15', 1)])+
0.99 * [('x5', 1), ('x6', 1), ('x11', 1), ('x12', 1), ('x16', 1), ('x17', 1)])+
0.99 * [('x7', 1), ('x8', 1), ('x12', 1), ('x13', 1), ('x18', 1), ('x19', 1)])+
0.99 * [('x9', 1), ('x10', 1), ('x13', 1), ('x20', 1)])+
0.7475 * [('x14', 1), ('x21', 1), ('x24', 1), ('x25', 1)])+
0.99 * [('x15', 1), ('x16', 1), ('x21', 1), ('x22', 1), ('x26', 1), ('x27', 1)])+
0.505 * [('x17', 1), ('x18', 1), ('x22', 1), ('x23', 1), ('x28', 1), ('x29', 1)])+
0.505 * [('x19', 1), ('x20', 1), ('x23', 1), ('x30', 1)])+
0.7475 * [('x24', -1), ('x31', -1), ('x34', -1), ('x35', -1)])+
0.7475 * [('x25', 1), ('x26', 1), ('x31', 1), ('x32', 1), ('x36', 1), ('x37', 1)])+
0.99 * [('x27', 1), ('x28', 1), ('x32', 1), ('x33', 1), ('x38', 1), ('x39', 1)])+
0.99 * [('x29', 1), ('x30', 1), ('x33', 1), ('x40', 1)])+
0.7475 * [('x34', 1), ('x41', 1), ('x44', 1), ('x45', 1)])+
0.7475 * [('x35', 1), ('x36', 1), ('x41', 1), ('x42', 1), ('x46', 1), ('x47', 1)])+
0.9899999999999792 * [('x37', 1), ('x38', 1), ('x42', 1), ('x43', 1), ('x48', 1), ('x49', 1)])+
0.99 * [('x39', 1), ('x40', 1), ('x43', 1), ('x50', 1)])+
0.99 * [('x44', 1), ('x51', 1)])+
0.99 * [('x45', 1), ('x46', 1), ('x51', 1), ('x52', 1)])+
0.7475 * [('x47', 1), ('x48', 1), ('x52', 1), ('x53', 1)])+
0.99 * [('x49', 1), ('x50', 1), ('x53', 1)])Default row names c1, c2 ... being created.

Violation: 0.5

Iteration log . . .
Iteration:     1   Dual objective     =           643.000000
New point to separate:  [('x2', 1.0), ('x3', 1.0), ('x4', 1.0), ('x5', 1.0), ('x6', 1.0), ('x10', 1.0), ('x13', 1.0), ('x14', 1.0), ('x18', 0.5), ('x19', 0.5), ('x22', 0.5), ('x23', 1.0), ('x24', 0.75), ('x25', 0.25), ('x26', 1.0), ('x27', 0.5), ('x30', 0.5), ('x33', 1.0), ('x34', 1.0), ('x35', 0.25), ('x36', 0.75), ('x39', 0.5), ('x40', 0.5), ('x43', 1.0), ('x44', 1.0), ('x46', 0.5), ('x47', 0.5), ('x49', 1.0), ('x51', 1.0), ('x52', 0.5), ('x53', 1.0), ('z1,2', 1.0), ('z7,4', 1.0), ('z8,5', 1.0), ('z9,6', 1.0), ('z11,1', 1.0), ('z12,3', 1.0), ('z15,7', 0.25), ('z15,8', 0.75), ('z16,8', 0.25), ('z16,9', 0.75), ('z17,10', 1.0), ('z18,11', 0.5), ('z19,11', 0.5), ('z20,12', 1.0), ('z21,14', 0.25), ('z21,7', 0.75), ('z22,16', 0.25), ('z22,9', 0.25), ('z25,14', 0.75), ('z27,15', 0.25), ('z27,16', 0.25), ('z28,16', 0.5), ('z28,17', 0.5), ('z29,17', 0.5), ('z29,18', 0.5), ('z30,18', 0.5), ('z32,22', 0.25), ('z32,15', 0.75), ('z36,21', 0.25), ('z37,21', 0.25), ('z37,22', 0.75), ('z38,23', 1.0), ('z39,24', 0.5), ('z40,24', 0.5), ('z41,26', 1.0), ('z42,28', 0.5), ('z42,21', 0.5), ('z45,25', 1.0), ('z46,27', 0.5), ('z47,28', 0.5), ('z48,29', 1.0), ('z50,30', 1.0), ('z52,27', 0.5)]
Objective value:  643.0
Default row names c1, c2 ... being created.
Finding a cutting plane...
Found incumbent of value 0.000000 after 0.00 sec. (0.01 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 1 rows and 114 columns.
Reduced MIP has 75 rows, 237 columns, and 400 nonzeros.
Reduced MIP has 0 binaries, 75 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.25 ticks)
Tried aggregator 1 time.
Reduced MIP has 75 rows, 237 columns, and 400 nonzeros.
Reduced MIP has 0 binaries, 75 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.19 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.00 sec. (0.20 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      196.0000              --- 
      0     0        0.9900    24        0.0000        0.9900       90     --- 
      0     0        0.9900     5        0.0000      Cuts: 72      111     --- 
      0     0        0.9900     6        0.0000   MIRcuts: 10      115     --- 
      0     0        0.9900     7        0.0000   MIRcuts: 10      120     --- 
      0     2        0.9900     7        0.0000        0.9900      120     --- 
Elapsed time = 0.02 sec. (6.24 ticks, tree = 0.01 MB, solutions = 1)
*   458+  348                            0.2500        0.9900           296.00%
*   691   428      integral     0        0.5000        0.9900     1350   98.00%
   4593  3278        0.9900    17        0.5000        0.9900    12973   98.00%
   6493  1017        0.9625     5        0.5000        0.9900    15116   98.00%
  13286  4339        0.9744     2        0.5000        0.9900    29186   98.00%
  25915 10302        0.9475     3        0.5000        0.9900    63236   98.00%
  35255 15791        0.9900     1        0.5000        0.9900    98200   98.00%
  46828 20150        0.8613     3        0.5000        0.9900   125085   98.00%
  61501 24769        0.9900     2        0.5000        0.9900   158084   98.00%
  75943 31154        0.9675     2        0.5000        0.9900   200487   98.00%
  90672 38552        0.9510     2        0.5000        0.9900   248464   98.00%

Mixed integer rounding cuts applied:  3
Gomory fractional cuts applied:  20

Root node processing (before b&c):
  Real time             =    0.01 sec. (6.17 ticks)
Parallel b&c, 4 threads:
  Real time             =    6.07 sec. (2521.71 ticks)
  Sync time (average)   =    0.26 sec.
  Wait time (average)   =    0.11 sec.
                          ------------
Total (root+branch&cut) =    6.08 sec. (2527.88 ticks)
Variables that need flooring, and amount to floor: [('x1', 0.99), ('x7', 0.98), ('x8', 0.99), ('x9', 0.98), ('x11', 0.97), ('x12', 0.99), ('x15', 0.9700000000000002), ('x16', 0.9700000000000002), ('x17', 0.99), ('x21', 0.4850000000000003), ('x28', 0.99), ('x29', 0.020000000000000018), ('x32', 0.5149999999999999), ('x37', 0.5349999999999999), ('x38', 0.020000000000000018), ('x41', 0.019999999999999796), ('x42', 0.5150000000000001), ('x45', 0.4849999999999999), ('x48', 0.5149999999999999), ('x50', 0.97), ('z1,31', 0.010000000000000009), ('z2,4', 0.020000000000000018), ('z2,31', 0.020000000000000018), ('z3,6', 0.020000000000000018), ('z3,31', 0.020000000000000018), ('z4,1', 0.030000000000000027), ('z4,31', 0.020000000000000018), ('z5,1', 0.030000000000000027), ('z5,2', 0.010000000000000009), ('z6,2', 0.010000000000000009), ('z6,3', 0.010000000000000009), ('z7,3', 0.99), ('z8,4', 0.010000000000000009), ('z9,5', 0.99), ('z10,6', 0.020000000000000018), ('z10,31', 0.020000000000000018), ('z11,8', 0.9999999999999998), ('z12,10', 0.020000000000000018), ('z13,12', 0.030000000000000027), ('z13,5', 0.010000000000000009), ('z14,7', 0.5149999999999999), ('z14,31', 0.5050000000000001), ('z17,9', 0.019999999999999796), ('z18,10', 0.030000000000000027), ('z20,31', 0.99), ('z23,18', 0.98), ('z25,13', 0.9900000000000002), ('z26,14', 0.5149999999999999), ('z26,15', 0.4850000000000001), ('z30,31', 0.010000000000000009), ('z33,17', 0.98), ('z36,20', 0.9900000000000002), ('z39,23', 0.010000000000000009), ('z40,31', 0.99), ('z41,19', 0.010000000000000009), ('z43,30', 0.98), ('z43,23', 0.98), ('z44,31', 0.99), ('z45,26', 0.98), ('z46,26', 0.4950000000000001), ('z47,27', 0.4850000000000001), ('z48,28', 0.9999999999999998), ('z49,29', 0.020000000000000018), ('z50,31', 0.010000000000000009), ('z51,25', 0.5149999999999999), ('z51,31', 0.5049999999999999), ('z52,31', 0.5050000000000001), ('z53,29', 0.5350000000000001), ('z53,31', 0.5250000000000001)]
Found cutting plane:  [('x2', 2), ('x3', 2), ('x4', 2), ('x5', 2), ('x6', 2), ('x7', 1), ('x9', 1), ('x10', 2), ('x11', 1), ('x12', 1), ('x13', 2), ('x14', 1), ('x15', 2), ('x16', 2), ('x18', 2), ('x19', 2), ('x20', 1), ('x21', 2), ('x22', 2), ('x23', 2), ('x24', 1), ('x25', 1), ('x26', 2), ('x27', 2), ('x28', 1), ('x29', 1), ('x30', -1), ('x31', 1), ('x32', 1), ('x33', 2), ('x34', 1), ('x37', -1), ('x38', 1), ('x39', 2), ('x40', 2), ('x41', -1), ('x42', -1), ('x43', 2), ('x44', 2), ('x45', 2), ('x46', 1), ('x47', 1), ('x48', 1), ('x51', 2), ('x52', 2), ('x53', 2), ('z1,2', -1), ('z1,31', -1), ('z4,1', -1), ('z5,1', -1), ('z6,3', 1), ('z8,4', -1), ('z8,5', -1), ('z9,5', -1), ('z11,8', -1), ('z11,1', -1), ('z12,10', -1), ('z12,3', 1), ('z13,12', -1), ('z14,7', -1), ('z14,31', -1), ('z15,7', 1), ('z15,8', 1), ('z16,8', 1), ('z17,9', -2), ('z17,10', -2), ('z18,10', -1), ('z19,11', 1), ('z20,12', -1), ('z20,31', -1), ('z21,14', 1), ('z21,7', 1), ('z22,9', -1), ('z23,18', 1), ('z23,11', 1), ('z25,13', -1), ('z26,15', 1), ('z27,15', 1), ('z28,17', 1), ('z29,17', 1), ('z29,18', 1), ('z30,31', -1), ('z32,22', 1), ('z32,15', 1), ('z33,24', 1), ('z33,17', 1), ('z36,20', -1), ('z37,21', -1), ('z38,22', 1), ('z38,23', 1), ('z39,23', 1), ('z40,24', 1), ('z41,26', -1), ('z41,19', -1), ('z43,23', 1), ('z44,25', 1), ('z45,25', 1), ('z47,28', 1), ('z48,29', 1), ('z49,29', -1), ('z49,30', -1), ('z50,30', -1), ('z50,31', -1)]
Found cutting plane: <= 40.0
Linear combination is: 
0.99 * [('x1', -1), ('z1,2', -1), ('z1,31', -1)])+
0.020000000000000018 * [('x2', 1), ('z2,4', 1), ('z2,31', 1)])+
0.020000000000000018 * [('x3', 1), ('z3,6', 1), ('z3,31', 1)])+
0.020000000000000018 * [('x4', 1), ('z4,1', 1), ('z4,31', 1)])+
0.020000000000000018 * [('x5', 1), ('z5,1', 1), ('z5,2', 1)])+
0.020000000000000018 * [('x6', 1), ('z6,2', 1), ('z6,3', 1)])+
0.99 * [('x8', -1), ('z8,4', -1), ('z8,5', -1)])+
0.020000000000000018 * [('x10', 1), ('z10,6', 1), ('z10,31', 1)])+
0.010000000000000009 * [('x11', -1), ('z11,8', -1), ('z11,1', -1)])+
0.010000000000000009 * [('x12', 1), ('z12,10', 1), ('z12,3', 1)])+
0.020000000000000018 * [('x13', 1), ('z13,12', 1), ('z13,5', 1)])+
0.4949999999999999 * [('x14', -1), ('z14,7', -1), ('z14,31', -1)])+
0.9900000000000002 * [('x15', 1), ('z15,7', 1), ('z15,8', 1)])+
0.9900000000000002 * [('x16', 1), ('z16,8', 1), ('z16,9', 1)])+
0.99 * [('x17', -1), ('z17,9', -1), ('z17,10', -1)])+
0.020000000000000018 * [('x18', 1), ('z18,10', 1), ('z18,11', 1)])+
0.99 * [('x19', 1), ('z19,11', 1), ('z19,12', 1)])+
0.010000000000000009 * [('x20', -1), ('z20,12', -1), ('z20,31', -1)])+
0.9900000000000002 * [('x21', 1), ('z21,14', 1), ('z21,7', 1)])+
0.020000000000000018 * [('x22', 1), ('z22,16', 1), ('z22,9', 1)])+
0.99 * [('x23', 1), ('z23,18', 1), ('z23,11', 1)])+
0.009999999999999787 * [('x25', -1), ('z25,13', -1), ('z25,14', -1)])+
0.5050000000000001 * [('x26', 1), ('z26,14', 1), ('z26,15', 1)])+
0.020000000000000018 * [('x27', 1), ('z27,15', 1), ('z27,16', 1)])+
0.010000000000000009 * [('x28', 1), ('z28,16', 1), ('z28,17', 1)])+
0.010000000000000009 * [('x29', 1), ('z29,17', 1), ('z29,18', 1)])+
0.99 * [('x30', -1), ('z30,18', -1), ('z30,31', -1)])+
0.020000000000000018 * [('x32', 1), ('z32,22', 1), ('z32,15', 1)])+
0.99 * [('x33', 1), ('z33,24', 1), ('z33,17', 1)])+
0.009999999999999787 * [('x36', -1), ('z36,20', -1), ('z36,21', -1)])+
0.99 * [('x37', -1), ('z37,21', -1), ('z37,22', -1)])+
0.010000000000000009 * [('x38', 1), ('z38,22', 1), ('z38,23', 1)])+
0.020000000000000018 * [('x39', 1), ('z39,23', 1), ('z39,24', 1)])+
0.99 * [('x40', 1), ('z40,24', 1), ('z40,31', 1)])+
0.99 * [('x41', -1), ('z41,26', -1), ('z41,19', -1)])+
0.009999999999999787 * [('x42', -1), ('z42,28', -1), ('z42,21', -1)])+
0.99 * [('x43', 1), ('z43,30', 1), ('z43,23', 1)])+
0.99 * [('x44', 1), ('z44,25', 1), ('z44,31', 1)])+
0.99 * [('x45', 1), ('z45,25', 1), ('z45,26', 1)])+
0.5050000000000001 * [('x46', 1), ('z46,26', 1), ('z46,27', 1)])+
0.9900000000000002 * [('x47', 1), ('z47,27', 1), ('z47,28', 1)])+
0.99 * [('x48', 1), ('z48,28', 1), ('z48,29', 1)])+
0.99 * [('x49', -1), ('z49,29', -1), ('z49,30', -1)])+
0.99 * [('x50', -1), ('z50,30', -1), ('z50,31', -1)])+
0.5049999999999999 * [('x51', 1), ('z51,25', 1), ('z51,31', 1)])+
0.5050000000000001 * [('x52', 1), ('z52,27', 1), ('z52,31', 1)])+
0.5250000000000001 * [('x53', 1), ('z53,29', 1), ('z53,31', 1)])+
0.99 * [('z4,1', -1), ('z5,1', -1), ('z11,1', -1)])+
0.010000000000000009 * [('z1,2', -1), ('z5,2', -1), ('z6,2', -1)])+
0.99 * [('z6,3', 1), ('z7,3', 1), ('z12,3', 1)])+
0.010000000000000009 * [('z8,5', -1), ('z9,5', -1), ('z13,5', -1)])+
0.009999999999999787 * [('z14,7', 1), ('z15,7', 1), ('z21,7', 1)])+
0.009999999999999787 * [('z11,8', 1), ('z15,8', 1), ('z16,8', 1)])+
0.9900000000000002 * [('z16,9', -1), ('z17,9', -1), ('z22,9', -1)])+
0.99 * [('z12,10', -1), ('z17,10', -1), ('z18,10', -1)])+
0.010000000000000009 * [('z18,11', 1), ('z19,11', 1), ('z23,11', 1)])+
0.99 * [('z13,12', -1), ('z19,12', -1), ('z20,12', -1)])+
0.009999999999999787 * [('z21,14', 1), ('z25,14', 1), ('z26,14', 1)])+
0.98 * [('z26,15', 1), ('z27,15', 1), ('z32,15', 1)])+
0.010000000000000009 * [('z22,16', -1), ('z27,16', -1), ('z28,16', -1)])+
0.99 * [('z28,17', 1), ('z29,17', 1), ('z33,17', 1)])+
0.99 * [('z23,18', 1), ('z29,18', 1), ('z30,18', 1)])+
0.009999999999999787 * [('z36,21', 1), ('z37,21', 1), ('z42,21', 1)])+
0.99 * [('z32,22', 1), ('z37,22', 1), ('z38,22', 1)])+
0.99 * [('z38,23', 1), ('z39,23', 1), ('z43,23', 1)])+
0.010000000000000009 * [('z33,24', 1), ('z39,24', 1), ('z40,24', 1)])+
0.010000000000000009 * [('z44,25', 1), ('z45,25', 1), ('z51,25', 1)])+
0.010000000000000009 * [('z41,26', -1), ('z45,26', -1), ('z46,26', -1)])+
0.5050000000000001 * [('z46,27', -1), ('z47,27', -1), ('z52,27', -1)])+
0.009999999999999787 * [('z42,28', 1), ('z47,28', 1), ('z48,28', 1)])+
0.010000000000000009 * [('z48,29', 1), ('z49,29', 1), ('z53,29', 1)])+
0.010000000000000009 * [('z43,30', -1), ('z49,30', -1), ('z50,30', -1)])+
0.99 * [('x1', 1), ('x4', 1), ('x5', 1)])+
0.99 * [('x1', 1), ('x2', 1), ('x6', 1), ('x7', 1)])+
0.99 * [('x2', 1), ('x3', 1), ('x8', 1), ('x9', 1)])+
0.99 * [('x3', 1), ('x10', 1)])+
0.99 * [('x4', 1), ('x11', 1), ('x14', 1), ('x15', 1)])+
0.99 * [('x5', 1), ('x6', 1), ('x11', 1), ('x12', 1), ('x16', 1), ('x17', 1)])+
0.99 * [('x7', 1), ('x8', 1), ('x12', 1), ('x13', 1), ('x18', 1), ('x19', 1)])+
0.99 * [('x9', 1), ('x10', 1), ('x13', 1), ('x20', 1)])+
0.5049999999999999 * [('x14', 1), ('x21', 1), ('x24', 1), ('x25', 1)])+
0.99 * [('x15', 1), ('x16', 1), ('x21', 1), ('x22', 1), ('x26', 1), ('x27', 1)])+
0.99 * [('x17', 1), ('x18', 1), ('x22', 1), ('x23', 1), ('x28', 1), ('x29', 1)])+
0.020000000000000018 * [('x19', 1), ('x20', 1), ('x23', 1), ('x30', 1)])+
0.4950000000000001 * [('x24', 1), ('x31', 1), ('x34', 1), ('x35', 1)])+
0.5049999999999999 * [('x25', 1), ('x26', 1), ('x31', 1), ('x32', 1), ('x36', 1), ('x37', 1)])+
0.99 * [('x27', 1), ('x28', 1), ('x32', 1), ('x33', 1), ('x38', 1), ('x39', 1)])+
0.020000000000000018 * [('x29', 1), ('x30', 1), ('x33', 1), ('x40', 1)])+
0.5049999999999999 * [('x34', 1), ('x41', 1), ('x44', 1), ('x45', 1)])+
0.4950000000000001 * [('x35', -1), ('x36', -1), ('x41', -1), ('x42', -1), ('x46', -1), ('x47', -1)])+
0.020000000000000018 * [('x37', 1), ('x38', 1), ('x42', 1), ('x43', 1), ('x48', 1), ('x49', 1)])+
0.99 * [('x39', 1), ('x40', 1), ('x43', 1), ('x50', 1)])+
0.5050000000000001 * [('x44', 1), ('x51', 1)])+
0.99 * [('x45', 1), ('x46', 1), ('x51', 1), ('x52', 1)])+
0.5049999999999999 * [('x47', 1), ('x48', 1), ('x52', 1), ('x53', 1)])+
0.97 * [('x49', 1), ('x50', 1), ('x53', 1)])Default row names c1, c2 ... being created.

Violation: 0.5

Iteration log . . .
Iteration:     1   Dual objective     =           643.000000
New point to separate:  [('x2', 1.0), ('x3', 1.0), ('x4', 1.0), ('x5', 1.0), ('x6', 1.0), ('x10', 1.0), ('x13', 1.0), ('x14', 1.0), ('x18', 0.6666666666666667), ('x19', 0.33333333333333326), ('x22', 0.3333333333333333), ('x23', 1.0), ('x24', 0.6666666666666667), ('x25', 0.3333333333333333), ('x26', 1.0), ('x27', 0.6666666666666667), ('x30', 0.6666666666666667), ('x33', 1.0), ('x34', 1.0), ('x35', 0.33333333333333326), ('x36', 0.6666666666666667), ('x39', 0.33333333333333326), ('x40', 0.33333333333333326), ('x42', 0.3333333333333335), ('x43', 1.0), ('x44', 1.0), ('x46', 0.33333333333333337), ('x47', 0.33333333333333337), ('x49', 0.6666666666666665), ('x50', 0.3333333333333335), ('x51', 1.0), ('x52', 0.6666666666666666), ('x53', 1.0), ('z1,2', 1.0), ('z7,4', 1.0), ('z8,5', 1.0), ('z9,6', 1.0), ('z11,1', 1.0), ('z12,3', 1.0), ('z15,7', 0.3333333333333333), ('z15,8', 0.6666666666666667), ('z16,8', 0.3333333333333333), ('z16,9', 0.6666666666666667), ('z17,10', 1.0), ('z18,11', 0.33333333333333326), ('z19,11', 0.6666666666666667), ('z20,12', 1.0), ('z21,14', 0.3333333333333333), ('z21,7', 0.6666666666666667), ('z22,16', 0.3333333333333334), ('z22,9', 0.3333333333333333), ('z25,14', 0.6666666666666667), ('z27,16', 0.33333333333333326), ('z28,16', 0.33333333333333326), ('z28,17', 0.6666666666666667), ('z29,17', 0.33333333333333326), ('z29,18', 0.6666666666666667), ('z30,18', 0.33333333333333326), ('z32,15', 1.0), ('z36,21', 0.33333333333333326), ('z37,21', 0.3333333333333335), ('z37,22', 0.6666666666666665), ('z38,22', 0.3333333333333335), ('z38,23', 0.6666666666666665), ('z39,23', 0.3333333333333335), ('z39,24', 0.33333333333333326), ('z40,24', 0.6666666666666667), ('z41,26', 1.0), ('z42,28', 0.33333333333333326), ('z42,21', 0.33333333333333326), ('z45,25', 1.0), ('z46,27', 0.6666666666666666), ('z47,28', 0.6666666666666667), ('z48,29', 1.0), ('z49,30', 0.3333333333333335), ('z50,30', 0.6666666666666665), ('z52,27', 0.33333333333333337)]
Objective value:  643.0
Default row names c1, c2 ... being created.
Finding a cutting plane...
Found incumbent of value 0.000000 after 0.00 sec. (0.01 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 1 rows and 114 columns.
Reduced MIP has 78 rows, 244 columns, and 416 nonzeros.
Reduced MIP has 0 binaries, 78 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.29 ticks)
Tried aggregator 1 time.
Reduced MIP has 78 rows, 244 columns, and 416 nonzeros.
Reduced MIP has 0 binaries, 78 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.20 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.00 sec. (0.22 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      196.0000              --- 
      0     0        0.9900    26        0.0000        0.9900      100     --- 
      0     0        0.9900    10        0.0000      Cuts: 78      124     --- 
      0     0        0.9900     9        0.0000   MIRcuts: 20      132     --- 
      0     0        0.9900     3        0.0000   MIRcuts: 13      139     --- 
      0     0        0.9900     4        0.0000    MIRcuts: 4      140     --- 
      0     2        0.9900     4        0.0000        0.9900      140     --- 
Elapsed time = 0.02 sec. (6.81 ticks, tree = 0.01 MB, solutions = 1)
*    10+    1                            0.3333        0.9900           197.00%
   5577  4459        0.9900    25        0.3333        0.9900    13563  197.00%
   7277   915        0.9700     4        0.3333        0.9900    15745  197.00%
  12509  4255        0.9233     7        0.3333        0.9900    26386  197.00%
  26022 12302        0.9827     6        0.3333        0.9900    55863  197.00%
  37999 22009        0.9533     6        0.3333        0.9900    98256  197.00%
  52516 28465        0.9233     7        0.3333        0.9900   128897  197.00%
  67302 38155        0.9767     8        0.3333        0.9900   172294  197.00%
  81051 48216        0.9833     5        0.3333        0.9900   212893  197.00%
  93365 55080        0.9267     6        0.3333        0.9900   245210  197.00%

Mixed integer rounding cuts applied:  14
Gomory fractional cuts applied:  18

Root node processing (before b&c):
  Real time             =    0.02 sec. (6.72 ticks)
Parallel b&c, 4 threads:
  Real time             =    5.98 sec. (2502.29 ticks)
  Sync time (average)   =    0.23 sec.
  Wait time (average)   =    0.04 sec.
                          ------------
Total (root+branch&cut) =    6.00 sec. (2509.02 ticks)
Variables that need flooring, and amount to floor: [('x1', 0.99), ('x7', 0.99), ('x8', 0.97), ('x9', 0.97), ('x11', 0.97), ('x12', 0.97), ('x15', 0.4849999999999999), ('x16', 0.4849999999999999), ('x17', 0.5049999999999999), ('x20', 0.5049999999999999), ('x21', 0.5150000000000001), ('x32', 0.9699999999999998), ('x41', 0.2325000000000037), ('x45', 0.2325000000000037), ('x48', 0.99), ('z1,31', 0.010000000000000009), ('z2,4', 0.010000000000000009), ('z2,31', 0.020000000000000018), ('z3,6', 0.030000000000000027), ('z3,31', 0.020000000000000018), ('z4,1', 0.030000000000000027), ('z4,31', 0.020000000000000018), ('z5,1', 0.030000000000000027), ('z5,2', 0.010000000000000009), ('z6,2', 0.010000000000000009), ('z6,3', 0.030000000000000027), ('z7,3', 0.020000000000000018), ('z8,4', 0.98), ('z10,6', 0.030000000000000027), ('z10,31', 0.020000000000000018), ('z12,10', 0.98), ('z13,12', 0.010000000000000009), ('z13,5', 0.030000000000000027), ('z14,31', 0.99), ('z17,9', 0.020000000000000018), ('z18,10', 0.4950000000000001), ('z19,12', 0.4950000000000001), ('z20,31', 0.010000000000000009), ('z23,18', 0.4849999999999999), ('z23,11', 0.485), ('z25,13', 0.99), ('z26,14', 0.515), ('z26,15', 0.515), ('z27,15', 0.515), ('z30,31', 0.5050000000000001), ('z32,22', 0.97), ('z33,17', 0.5149999999999999), ('z36,20', 0.020000000000000018), ('z40,31', 0.020000000000000018), ('z41,19', 0.010000000000000009), ('z44,25', 0.98), ('z44,31', 0.99), ('z46,26', 0.010000000000000009), ('z48,28', 0.97), ('z49,29', 0.030000000000000027), ('z50,31', 0.020000000000000018), ('z51,25', 0.010000000000000009), ('z51,31', 0.020000000000000018), ('z52,31', 0.020000000000000018), ('z53,29', 0.010000000000000009)]
Found cutting plane:  [('x2', 1), ('x3', 2), ('x4', 2), ('x5', 1), ('x6', 2), ('x7', 1), ('x8', 1), ('x9', 1), ('x10', 2), ('x11', 1), ('x12', 1), ('x13', 2), ('x14', 2), ('x15', 2), ('x16', 2), ('x17', 1), ('x18', 2), ('x19', 2), ('x20', 1), ('x21', 1), ('x22', 1), ('x23', 2), ('x25', 2), ('x26', 2), ('x27', 2), ('x28', 2), ('x29', 2), ('x30', 2), ('x31', 1), ('x32', 2), ('x33', 2), ('x35', 1), ('x36', 2), ('x37', 2), ('x38', 2), ('x39', 2), ('x40', 2), ('x41', 1), ('x42', 2), ('x43', 2), ('x44', 2), ('x45', 1), ('x46', 2), ('x49', 2), ('x50', 2), ('x51', 2), ('z1,2', -1), ('z1,31', -1), ('z2,31', -1), ('z3,6', -1), ('z4,1', -1), ('z5,1', -2), ('z5,2', -1), ('z6,3', -1), ('z7,3', -1), ('z7,4', 1), ('z8,5', -1), ('z9,5', -1), ('z9,6', -1), ('z10,6', -1), ('z11,1', -1), ('z12,3', -1), ('z13,12', 1), ('z13,5', -1), ('z15,8', 1), ('z16,8', 1), ('z16,9', 1), ('z17,10', 1), ('z18,10', 1), ('z19,12', 1), ('z20,12', 1), ('z26,14', -1), ('z27,16', 1), ('z28,16', 1), ('z28,17', 1), ('z29,17', 1), ('z32,22', 1), ('z32,15', 1), ('z37,22', 1), ('z38,22', 1), ('z38,23', 1), ('z39,23', 1), ('z41,26', 1), ('z43,23', 1), ('z44,25', 1), ('z45,25', 1), ('z45,26', 1), ('z46,26', 1), ('z48,29', 1), ('z51,25', 1)]
Found cutting plane: <= 45.0
Linear combination is: 
0.99 * [('x1', -1), ('z1,2', -1), ('z1,31', -1)])+
0.98 * [('x2', -1), ('z2,4', -1), ('z2,31', -1)])+
0.020000000000000018 * [('x3', 1), ('z3,6', 1), ('z3,31', 1)])+
0.020000000000000018 * [('x4', 1), ('z4,1', 1), ('z4,31', 1)])+
0.98 * [('x5', -1), ('z5,1', -1), ('z5,2', -1)])+
0.020000000000000018 * [('x6', 1), ('z6,2', 1), ('z6,3', 1)])+
0.010000000000000009 * [('x7', 1), ('z7,3', 1), ('z7,4', 1)])+
0.010000000000000009 * [('x8', -1), ('z8,4', -1), ('z8,5', -1)])+
0.010000000000000009 * [('x9', -1), ('z9,5', -1), ('z9,6', -1)])+
0.020000000000000018 * [('x10', 1), ('z10,6', 1), ('z10,31', 1)])+
0.010000000000000009 * [('x11', -1), ('z11,8', -1), ('z11,1', -1)])+
0.010000000000000009 * [('x12', -1), ('z12,10', -1), ('z12,3', -1)])+
0.020000000000000018 * [('x13', 1), ('z13,12', 1), ('z13,5', 1)])+
0.99 * [('x14', 1), ('z14,7', 1), ('z14,31', 1)])+
0.99 * [('x15', 1), ('z15,7', 1), ('z15,8', 1)])+
0.99 * [('x16', 1), ('z16,8', 1), ('z16,9', 1)])+
0.010000000000000009 * [('x17', 1), ('z17,9', 1), ('z17,10', 1)])+
0.505 * [('x18', 1), ('z18,10', 1), ('z18,11', 1)])+
0.505 * [('x19', 1), ('z19,11', 1), ('z19,12', 1)])+
0.010000000000000009 * [('x20', 1), ('z20,12', 1), ('z20,31', 1)])+
0.99 * [('x21', 1), ('z21,14', 1), ('z21,7', 1)])+
0.010000000000000009 * [('x22', -1), ('z22,16', -1), ('z22,9', -1)])+
0.99 * [('x23', 1), ('z23,18', 1), ('z23,11', 1)])+
0.99 * [('x25', 1), ('z25,13', 1), ('z25,14', 1)])+
0.505 * [('x26', 1), ('z26,14', 1), ('z26,15', 1)])+
0.505 * [('x27', 1), ('z27,15', 1), ('z27,16', 1)])+
0.505 * [('x28', 1), ('z28,16', 1), ('z28,17', 1)])+
0.5050000000000001 * [('x29', 1), ('z29,17', 1), ('z29,18', 1)])+
0.5050000000000001 * [('x30', 1), ('z30,18', 1), ('z30,31', 1)])+
0.99 * [('x32', 1), ('z32,22', 1), ('z32,15', 1)])+
0.020000000000000018 * [('x33', 1), ('z33,24', 1), ('z33,17', 1)])+
0.020000000000000018 * [('x36', 1), ('z36,20', 1), ('z36,21', 1)])+
0.020000000000000018 * [('x37', 1), ('z37,21', 1), ('z37,22', 1)])+
0.020000000000000018 * [('x38', 1), ('z38,22', 1), ('z38,23', 1)])+
0.020000000000000018 * [('x39', 1), ('z39,23', 1), ('z39,24', 1)])+
0.020000000000000018 * [('x40', 1), ('z40,24', 1), ('z40,31', 1)])+
0.010000000000000009 * [('x41', 1), ('z41,26', 1), ('z41,19', 1)])+
0.020000000000000018 * [('x42', 1), ('z42,28', 1), ('z42,21', 1)])+
0.020000000000000018 * [('x43', 1), ('z43,30', 1), ('z43,23', 1)])+
0.99 * [('x44', 1), ('z44,25', 1), ('z44,31', 1)])+
0.010000000000000009 * [('x45', 1), ('z45,25', 1), ('z45,26', 1)])+
0.020000000000000018 * [('x46', 1), ('z46,26', 1), ('z46,27', 1)])+
0.020000000000000018 * [('x47', 1), ('z47,27', 1), ('z47,28', 1)])+
0.99 * [('x48', 1), ('z48,28', 1), ('z48,29', 1)])+
0.020000000000000018 * [('x49', 1), ('z49,29', 1), ('z49,30', 1)])+
0.020000000000000018 * [('x50', 1), ('z50,30', 1), ('z50,31', 1)])+
0.020000000000000018 * [('x51', 1), ('z51,25', 1), ('z51,31', 1)])+
0.020000000000000018 * [('x52', 1), ('z52,27', 1), ('z52,31', 1)])+
0.99 * [('z4,1', -1), ('z5,1', -1), ('z11,1', -1)])+
0.010000000000000009 * [('z1,2', -1), ('z5,2', -1), ('z6,2', -1)])+
0.99 * [('z6,3', -1), ('z7,3', -1), ('z12,3', -1)])+
0.99 * [('z2,4', 1), ('z7,4', 1), ('z8,4', 1)])+
0.99 * [('z8,5', -1), ('z9,5', -1), ('z13,5', -1)])+
0.99 * [('z3,6', -1), ('z9,6', -1), ('z10,6', -1)])+
0.99 * [('z14,7', -1), ('z15,7', -1), ('z21,7', -1)])+
0.010000000000000009 * [('z11,8', 1), ('z15,8', 1), ('z16,8', 1)])+
0.010000000000000009 * [('z16,9', 1), ('z17,9', 1), ('z22,9', 1)])+
0.99 * [('z12,10', 1), ('z17,10', 1), ('z18,10', 1)])+
0.505 * [('z18,11', -1), ('z19,11', -1), ('z23,11', -1)])+
0.99 * [('z13,12', 1), ('z19,12', 1), ('z20,12', 1)])+
0.99 * [('z21,14', -1), ('z25,14', -1), ('z26,14', -1)])+
0.010000000000000009 * [('z26,15', 1), ('z27,15', 1), ('z32,15', 1)])+
0.495 * [('z22,16', 1), ('z27,16', 1), ('z28,16', 1)])+
0.4949999999999999 * [('z28,17', 1), ('z29,17', 1), ('z33,17', 1)])+
0.5050000000000001 * [('z23,18', -1), ('z29,18', -1), ('z30,18', -1)])+
0.020000000000000018 * [('z36,21', -1), ('z37,21', -1), ('z42,21', -1)])+
0.98 * [('z32,22', 1), ('z37,22', 1), ('z38,22', 1)])+
0.98 * [('z38,23', 1), ('z39,23', 1), ('z43,23', 1)])+
0.020000000000000018 * [('z33,24', -1), ('z39,24', -1), ('z40,24', -1)])+
0.99 * [('z44,25', 1), ('z45,25', 1), ('z51,25', 1)])+
0.99 * [('z41,26', 1), ('z45,26', 1), ('z46,26', 1)])+
0.020000000000000018 * [('z46,27', -1), ('z47,27', -1), ('z52,27', -1)])+
0.020000000000000018 * [('z42,28', -1), ('z47,28', -1), ('z48,28', -1)])+
0.010000000000000009 * [('z48,29', 1), ('z49,29', 1), ('z53,29', 1)])+
0.020000000000000018 * [('z43,30', -1), ('z49,30', -1), ('z50,30', -1)])+
0.99 * [('x1', 1), ('x4', 1), ('x5', 1)])+
0.99 * [('x1', 1), ('x2', 1), ('x6', 1), ('x7', 1)])+
0.99 * [('x2', 1), ('x3', 1), ('x8', 1), ('x9', 1)])+
0.99 * [('x3', 1), ('x10', 1)])+
0.99 * [('x4', 1), ('x11', 1), ('x14', 1), ('x15', 1)])+
0.99 * [('x5', 1), ('x6', 1), ('x11', 1), ('x12', 1), ('x16', 1), ('x17', 1)])+
0.99 * [('x7', 1), ('x8', 1), ('x12', 1), ('x13', 1), ('x18', 1), ('x19', 1)])+
0.99 * [('x9', 1), ('x10', 1), ('x13', 1), ('x20', 1)])+
0.020000000000000018 * [('x14', 1), ('x21', 1), ('x24', 1), ('x25', 1)])+
0.505 * [('x15', 1), ('x16', 1), ('x21', 1), ('x22', 1), ('x26', 1), ('x27', 1)])+
0.505 * [('x17', 1), ('x18', 1), ('x22', 1), ('x23', 1), ('x28', 1), ('x29', 1)])+
0.505 * [('x19', 1), ('x20', 1), ('x23', 1), ('x30', 1)])+
0.010000000000000009 * [('x24', 1), ('x31', 1), ('x34', 1), ('x35', 1)])+
0.99 * [('x25', 1), ('x26', 1), ('x31', 1), ('x32', 1), ('x36', 1), ('x37', 1)])+
0.99 * [('x27', 1), ('x28', 1), ('x32', 1), ('x33', 1), ('x38', 1), ('x39', 1)])+
0.99 * [('x29', 1), ('x30', 1), ('x33', 1), ('x40', 1)])+
0.2325000000000037 * [('x34', 1), ('x41', 1), ('x44', 1), ('x45', 1)])+
0.99 * [('x35', 1), ('x36', 1), ('x41', 1), ('x42', 1), ('x46', 1), ('x47', 1)])+
0.99 * [('x37', 1), ('x38', 1), ('x42', 1), ('x43', 1), ('x48', 1), ('x49', 1)])+
0.99 * [('x39', 1), ('x40', 1), ('x43', 1), ('x50', 1)])+
0.99 * [('x44', 1), ('x51', 1)])+
0.99 * [('x45', 1), ('x46', 1), ('x51', 1), ('x52', 1)])+
0.99 * [('x47', -1), ('x48', -1), ('x52', -1), ('x53', -1)])+
0.99 * [('x49', 1), ('x50', 1), ('x53', 1)])Default row names c1, c2 ... being created.

Violation: 0.3333333333333286

Iteration log . . .
Iteration:     1   Dual objective     =           643.000000
New point to separate:  [('x2', 1.0), ('x3', 1.0), ('x4', 1.0), ('x5', 1.0), ('x6', 1.0), ('x10', 1.0), ('x13', 1.0), ('x14', 1.0), ('x18', 1.0), ('x23', 1.0), ('x24', 1.0), ('x26', 1.0), ('x27', 1.0), ('x30', 1.0), ('x33', 1.0), ('x34', 1.0), ('x36', 1.0), ('x42', 1.0), ('x43', 1.0), ('x44', 1.0), ('x50', 1.0), ('x51', 1.0), ('x52', 1.0), ('x53', 1.0), ('z1,2', 1.0), ('z7,4', 1.0), ('z8,5', 1.0), ('z9,6', 1.0), ('z11,1', 1.0), ('z12,3', 1.0), ('z15,8', 1.0), ('z16,9', 1.0), ('z17,10', 1.0), ('z19,11', 1.0), ('z20,12', 1.0), ('z21,7', 1.0), ('z22,16', 1.0), ('z25,14', 1.0), ('z28,17', 1.0), ('z29,18', 1.0), ('z32,15', 1.0), ('z37,21', 1.0), ('z38,22', 1.0), ('z39,23', 1.0), ('z40,24', 1.0), ('z41,26', 1.0), ('z45,25', 1.0), ('z46,27', 1.0), ('z47,28', 1.0), ('z48,29', 1.0), ('z49,30', 1.0)]
Objective value:  643.0
Default row names c1, c2 ... being created.
Finding a cutting plane...
Found incumbent of value 0.000000 after 0.00 sec. (0.01 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 1 rows and 130 columns.
Reduced MIP has 52 rows, 177 columns, and 274 nonzeros.
Reduced MIP has 0 binaries, 52 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.22 ticks)
Tried aggregator 1 time.
Reduced MIP has 52 rows, 177 columns, and 274 nonzeros.
Reduced MIP has 0 binaries, 52 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.14 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.00 sec. (0.14 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      196.0000              --- 
      0     0        0.9900    20        0.0000        0.9900       52     --- 
      0     0        cutoff              0.0000        0.9900       52     --- 
Elapsed time = 0.00 sec. (0.72 ticks, tree = 0.01 MB, solutions = 1)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.72 ticks)
Parallel b&c, 4 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.72 ticks)
Variables that need flooring, and amount to floor: []
Done
