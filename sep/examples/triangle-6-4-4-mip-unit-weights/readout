Default row names c1, c2 ... being created.
155
Tried aggregator 1 time.
LP Presolve eliminated 104 rows and 0 columns.
Aggregator did 3 substitutions.
Reduced LP has 101 rows, 152 columns, and 339 nonzeros.
Presolve time = 0.00 sec. (0.13 ticks)
Initializing dual steep norms . . .

Iteration log . . .
Iteration:     1   Dual objective     =             6.000000
Iteration:    62   Dual objective     =            43.000000
Iteration:   124   Dual objective     =            53.000000
Default row names c1, c2 ... being created.
Initial point: [('x1', 1.0), ('x2', 1.0), ('x3', 1.0), ('x5', 1.0), ('x10', 1.0), ('x11', 1.0), ('x13', 1.0), ('x14', 0.5), ('x15', 0.5), ('x19', 1.0), ('x21', 0.5), ('x22', 1.0), ('x25', 1.0), ('x28', 1.0), ('x30', 1.0), ('x33', 0.5), ('x34', 1.0), ('x35', 1.0), ('x37', 1.0), ('x39', 0.5), ('x40', 0.5), ('x42', 1.0), ('x44', 1.0), ('x50', 1.0), ('x51', 1.0), ('x52', 1.0), ('x53', 1.0), ('z4,1', 1.0), ('z6,2', 1.0), ('z7,3', 1.0), ('z8,4', 1.0), ('z9,5', 1.0), ('z12,10', 1.0), ('z14,7', 0.5), ('z15,7', 0.5), ('z16,8', 1.0), ('z17,9', 1.0), ('z18,11', 1.0), ('z20,12', 1.0), ('z21,14', 0.5), ('z23,18', 1.0), ('z24,13', 1.0), ('z26,14', 0.5), ('z26,15', 0.5), ('z27,16', 1.0), ('z29,17', 1.0), ('z31,20', 1.0), ('z32,22', 0.5), ('z32,15', 0.5), ('z33,24', 0.5), ('z36,21', 1.0), ('z38,22', 0.5), ('z38,23', 0.5), ('z39,23', 0.5), ('z40,24', 0.5), ('z41,19', 1.0), ('z43,30', 1.0), ('z45,25', 1.0), ('z46,26', 1.0), ('z47,27', 1.0), ('z48,28', 1.0), ('z49,29', 1.0)]
Finding a cutting plane...
Found incumbent of value 0.000000 after 0.00 sec. (0.01 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 1 rows and 127 columns.
Reduced MIP has 63 rows, 207 columns, and 333 nonzeros.
Reduced MIP has 0 binaries, 63 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.22 ticks)
Tried aggregator 1 time.
Reduced MIP has 63 rows, 207 columns, and 333 nonzeros.
Reduced MIP has 0 binaries, 63 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.16 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.00 sec. (0.19 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      202.0000              --- 
      0     0        0.9900    24        0.0000        0.9900       69     --- 
      0     0        0.9900     4        0.0000      Cuts: 72       92     --- 
      0     0        0.9900     3        0.0000    MIRcuts: 8       95     --- 
*     0+    0                            0.5000        0.9900            98.00%
      0     0        cutoff              0.5000        0.9900       95   98.00%
Elapsed time = 0.03 sec. (2.32 ticks, tree = 0.01 MB, solutions = 2)

Mixed integer rounding cuts applied:  50
Gomory fractional cuts applied:  22

Root node processing (before b&c):
  Real time             =    0.03 sec. (2.34 ticks)
Parallel b&c, 4 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.03 sec. (2.34 ticks)
Variables that need flooring, and amount to floor: [('x4', 0.99), ('x6', 0.97), ('x7', 0.9699999999999998), ('x8', 0.020000000000000018), ('x9', 0.050000000000000044), ('x12', 0.97), ('x16', 0.495), ('x17', 0.97), ('x18', 0.97), ('x23', 0.99), ('x24', 0.4950000000000001), ('x26', 0.4950000000000001), ('x27', 0.4950000000000001), ('x29', 0.9699999999999998), ('x31', 0.99), ('x32', 0.99), ('x36', 0.9699999999999998), ('x41', 0.9699999999999998), ('x43', 0.9699999999999998), ('x45', 0.9699999999999998), ('x46', 0.9699999999999998), ('x47', 0.99), ('x48', 0.99), ('x49', 0.99), ('z1,2', 0.030000000000000027), ('z1,31', 0.020000000000000018), ('z2,4', 0.98), ('z2,31', 0.99), ('z4,31', 0.010000000000000009), ('z5,1', 0.010000000000000009), ('z5,2', 0.030000000000000027), ('z7,4', 0.98), ('z9,6', 0.010000000000000009), ('z11,8', 0.010000000000000009), ('z11,1', 0.010000000000000009), ('z13,5', 0.98), ('z14,31', 0.515), ('z15,8', 0.505), ('z16,9', 0.020000000000000018), ('z19,11', 0.030000000000000027), ('z19,12', 0.030000000000000027), ('z20,31', 0.99), ('z21,7', 0.495), ('z22,16', 0.5049999999999999), ('z22,9', 0.525), ('z23,11', 0.020000000000000018), ('z24,31', 0.010000000000000009), ('z25,13', 0.5049999999999999), ('z25,14', 0.5049999999999999), ('z28,16', 0.010000000000000009), ('z28,17', 0.030000000000000027), ('z29,18', 0.98), ('z30,18', 0.010000000000000009), ('z30,31', 0.020000000000000018), ('z33,17', 0.030000000000000027), ('z34,19', 0.030000000000000027), ('z34,31', 0.020000000000000018), ('z35,19', 0.030000000000000027), ('z35,20', 0.010000000000000009), ('z36,20', 0.98), ('z37,21', 0.030000000000000027), ('z37,22', 0.030000000000000027), ('z40,31', 0.020000000000000018), ('z42,28', 0.010000000000000009), ('z42,21', 0.030000000000000027), ('z43,23', 0.97), ('z44,25', 0.030000000000000027), ('z44,31', 0.020000000000000018), ('z46,27', 0.98), ('z49,30', 0.020000000000000018), ('z50,30', 0.030000000000000027), ('z50,31', 0.020000000000000018), ('z51,25', 0.030000000000000027), ('z51,31', 0.020000000000000018), ('z52,27', 0.010000000000000009), ('z52,31', 0.020000000000000018), ('z53,29', 0.010000000000000009), ('z53,31', 0.020000000000000018)]
Found cutting plane:  [('x1', 1), ('x2', 2), ('x3', 1), ('x5', 2), ('x6', 1), ('x7', 2), ('x8', 1), ('x9', -1), ('x11', 1), ('x12', 1), ('x13', 1), ('x14', 2), ('x15', 2), ('x17', 1), ('x18', 1), ('x19', 2), ('x21', 1), ('x22', 2), ('x24', 1), ('x25', 2), ('x26', 1), ('x27', 1), ('x28', 2), ('x29', 2), ('x30', 2), ('x31', 1), ('x32', 1), ('x33', 2), ('x34', 1), ('x35', 2), ('x36', 2), ('x37', 2), ('x38', 2), ('x39', 2), ('x40', 2), ('x41', 2), ('x42', 1), ('x43', 2), ('x44', 2), ('x45', 2), ('x46', 2), ('x47', 1), ('x48', 1), ('x50', 2), ('x51', 2), ('x52', 2), ('x53', 1), ('z1,2', -2), ('z1,31', -1), ('z2,4', 1), ('z4,1', -1), ('z4,31', -1), ('z5,2', -1), ('z6,2', -1), ('z7,3', 1), ('z7,4', 1), ('z8,4', 1), ('z8,5', 1), ('z9,5', 1), ('z11,8', -1), ('z11,1', -1), ('z12,10', -1), ('z13,5', 1), ('z16,8', -1), ('z16,9', -2), ('z17,9', -1), ('z17,10', -1), ('z18,10', -1), ('z18,11', -1), ('z19,11', -1), ('z19,12', -1), ('z20,12', -1), ('z20,31', -1), ('z21,14', 1), ('z21,7', -1), ('z22,16', 1), ('z22,9', -1), ('z23,18', -1), ('z23,11', -2), ('z24,13', 1), ('z25,13', 1), ('z25,14', 1), ('z26,14', 1), ('z27,16', 1), ('z28,16', 1), ('z29,17', 1), ('z31,20', 1), ('z31,13', 1), ('z32,22', -1), ('z34,19', -1), ('z34,31', -1), ('z35,20', 1), ('z36,20', 1), ('z36,21', 1), ('z37,22', -1), ('z38,22', -1), ('z41,26', 1), ('z41,19', 1), ('z42,21', -1), ('z43,30', 1), ('z45,25', 1), ('z45,26', 1), ('z46,26', 1), ('z46,27', 1), ('z47,27', 1), ('z47,28', 1), ('z48,28', 1), ('z49,29', -1), ('z49,30', -1), ('z52,27', 1), ('z53,29', -1), ('z53,31', -1)]
Found cutting plane: <= 43.0
Linear combination is: 
0.98 * [('x1', -1), ('z1,2', -1), ('z1,31', -1)])+
0.99 * [('x2', 1), ('z2,4', 1), ('z2,31', 1)])+
0.99 * [('x4', -1), ('z4,1', -1), ('z4,31', -1)])+
0.020000000000000018 * [('x5', 1), ('z5,1', 1), ('z5,2', 1)])+
0.010000000000000009 * [('x6', -1), ('z6,2', -1), ('z6,3', -1)])+
0.99 * [('x7', 1), ('z7,3', 1), ('z7,4', 1)])+
0.010000000000000009 * [('x8', 1), ('z8,4', 1), ('z8,5', 1)])+
0.010000000000000009 * [('x9', 1), ('z9,5', 1), ('z9,6', 1)])+
0.98 * [('x11', -1), ('z11,8', -1), ('z11,1', -1)])+
0.010000000000000009 * [('x12', -1), ('z12,10', -1), ('z12,3', -1)])+
0.99 * [('x13', 1), ('z13,12', 1), ('z13,5', 1)])+
0.515 * [('x14', 1), ('z14,7', 1), ('z14,31', 1)])+
0.515 * [('x15', 1), ('z15,7', 1), ('z15,8', 1)])+
0.99 * [('x16', -1), ('z16,8', -1), ('z16,9', -1)])+
0.010000000000000009 * [('x17', -1), ('z17,9', -1), ('z17,10', -1)])+
0.010000000000000009 * [('x18', -1), ('z18,10', -1), ('z18,11', -1)])+
0.020000000000000018 * [('x19', 1), ('z19,11', 1), ('z19,12', 1)])+
0.010000000000000009 * [('x20', -1), ('z20,12', -1), ('z20,31', -1)])+
0.010000000000000009 * [('x21', 1), ('z21,14', 1), ('z21,7', 1)])+
0.515 * [('x22', 1), ('z22,16', 1), ('z22,9', 1)])+
0.99 * [('x23', -1), ('z23,18', -1), ('z23,11', -1)])+
0.010000000000000009 * [('x24', 1), ('z24,13', 1), ('z24,31', 1)])+
0.515 * [('x25', 1), ('z25,13', 1), ('z25,14', 1)])+
0.010000000000000009 * [('x26', 1), ('z26,14', 1), ('z26,15', 1)])+
0.010000000000000009 * [('x27', 1), ('z27,15', 1), ('z27,16', 1)])+
0.020000000000000018 * [('x28', 1), ('z28,16', 1), ('z28,17', 1)])+
0.99 * [('x29', 1), ('z29,17', 1), ('z29,18', 1)])+
0.020000000000000018 * [('x30', 1), ('z30,18', 1), ('z30,31', 1)])+
0.010000000000000009 * [('x31', 1), ('z31,20', 1), ('z31,13', 1)])+
0.010000000000000009 * [('x32', 1), ('z32,22', 1), ('z32,15', 1)])+
0.020000000000000018 * [('x33', 1), ('z33,24', 1), ('z33,17', 1)])+
0.98 * [('x34', -1), ('z34,19', -1), ('z34,31', -1)])+
0.020000000000000018 * [('x35', 1), ('z35,19', 1), ('z35,20', 1)])+
0.99 * [('x36', 1), ('z36,20', 1), ('z36,21', 1)])+
0.020000000000000018 * [('x37', 1), ('z37,21', 1), ('z37,22', 1)])+
0.020000000000000018 * [('x38', 1), ('z38,22', 1), ('z38,23', 1)])+
0.020000000000000018 * [('x39', 1), ('z39,23', 1), ('z39,24', 1)])+
0.020000000000000018 * [('x40', 1), ('z40,24', 1), ('z40,31', 1)])+
0.99 * [('x41', 1), ('z41,26', 1), ('z41,19', 1)])+
0.98 * [('x42', -1), ('z42,28', -1), ('z42,21', -1)])+
0.99 * [('x43', 1), ('z43,30', 1), ('z43,23', 1)])+
0.020000000000000018 * [('x44', 1), ('z44,25', 1), ('z44,31', 1)])+
0.99 * [('x45', 1), ('z45,25', 1), ('z45,26', 1)])+
0.99 * [('x46', 1), ('z46,26', 1), ('z46,27', 1)])+
0.010000000000000009 * [('x47', 1), ('z47,27', 1), ('z47,28', 1)])+
0.010000000000000009 * [('x48', 1), ('z48,28', 1), ('z48,29', 1)])+
0.99 * [('x49', -1), ('z49,29', -1), ('z49,30', -1)])+
0.020000000000000018 * [('x50', 1), ('z50,30', 1), ('z50,31', 1)])+
0.020000000000000018 * [('x51', 1), ('z51,25', 1), ('z51,31', 1)])+
0.020000000000000018 * [('x52', 1), ('z52,27', 1), ('z52,31', 1)])+
0.98 * [('x53', -1), ('z53,29', -1), ('z53,31', -1)])+
0.010000000000000009 * [('z4,1', -1), ('z5,1', -1), ('z11,1', -1)])+
0.99 * [('z1,2', -1), ('z5,2', -1), ('z6,2', -1)])+
0.010000000000000009 * [('z6,3', 1), ('z7,3', 1), ('z12,3', 1)])+
0.99 * [('z2,4', 1), ('z7,4', 1), ('z8,4', 1)])+
0.99 * [('z8,5', 1), ('z9,5', 1), ('z13,5', 1)])+
0.515 * [('z14,7', -1), ('z15,7', -1), ('z21,7', -1)])+
0.010000000000000009 * [('z11,8', -1), ('z15,8', -1), ('z16,8', -1)])+
0.99 * [('z16,9', -1), ('z17,9', -1), ('z22,9', -1)])+
0.99 * [('z12,10', -1), ('z17,10', -1), ('z18,10', -1)])+
0.99 * [('z18,11', -1), ('z19,11', -1), ('z23,11', -1)])+
0.99 * [('z13,12', -1), ('z19,12', -1), ('z20,12', -1)])+
0.99 * [('z24,13', 1), ('z25,13', 1), ('z31,13', 1)])+
0.99 * [('z21,14', 1), ('z25,14', 1), ('z26,14', 1)])+
0.010000000000000009 * [('z26,15', -1), ('z27,15', -1), ('z32,15', -1)])+
0.99 * [('z22,16', 1), ('z27,16', 1), ('z28,16', 1)])+
0.010000000000000009 * [('z28,17', 1), ('z29,17', 1), ('z33,17', 1)])+
0.010000000000000009 * [('z23,18', -1), ('z29,18', -1), ('z30,18', -1)])+
0.010000000000000009 * [('z34,19', 1), ('z35,19', 1), ('z41,19', 1)])+
0.99 * [('z31,20', 1), ('z35,20', 1), ('z36,20', 1)])+
0.010000000000000009 * [('z36,21', 1), ('z37,21', 1), ('z42,21', 1)])+
0.99 * [('z32,22', -1), ('z37,22', -1), ('z38,22', -1)])+
0.020000000000000018 * [('z38,23', -1), ('z39,23', -1), ('z43,23', -1)])+
0.020000000000000018 * [('z33,24', -1), ('z39,24', -1), ('z40,24', -1)])+
0.010000000000000009 * [('z44,25', 1), ('z45,25', 1), ('z51,25', 1)])+
0.010000000000000009 * [('z41,26', 1), ('z45,26', 1), ('z46,26', 1)])+
0.99 * [('z46,27', 1), ('z47,27', 1), ('z52,27', 1)])+
0.99 * [('z42,28', 1), ('z47,28', 1), ('z48,28', 1)])+
0.010000000000000009 * [('z48,29', -1), ('z49,29', -1), ('z53,29', -1)])+
0.010000000000000009 * [('z43,30', 1), ('z49,30', 1), ('z50,30', 1)])+
0.99 * [('x1', 1), ('x4', 1), ('x5', 1)])+
0.99 * [('x1', 1), ('x2', 1), ('x6', 1), ('x7', 1)])+
0.020000000000000018 * [('x2', 1), ('x3', 1), ('x8', 1), ('x9', 1)])+
0.98 * [('x3', 1), ('x10', 1)])+
0.99 * [('x4', 1), ('x11', 1), ('x14', 1), ('x15', 1)])+
0.99 * [('x5', 1), ('x6', 1), ('x11', 1), ('x12', 1), ('x16', 1), ('x17', 1)])+
0.99 * [('x7', 1), ('x8', 1), ('x12', 1), ('x13', 1), ('x18', 1), ('x19', 1)])+
0.98 * [('x9', -1), ('x10', -1), ('x13', -1), ('x20', -1)])+
0.495 * [('x14', 1), ('x21', 1), ('x24', 1), ('x25', 1)])+
0.495 * [('x15', 1), ('x16', 1), ('x21', 1), ('x22', 1), ('x26', 1), ('x27', 1)])+
0.99 * [('x17', 1), ('x18', 1), ('x22', 1), ('x23', 1), ('x28', 1), ('x29', 1)])+
0.99 * [('x19', 1), ('x20', 1), ('x23', 1), ('x30', 1)])+
0.99 * [('x24', 1), ('x31', 1), ('x34', 1), ('x35', 1)])+
0.99 * [('x25', 1), ('x26', 1), ('x31', 1), ('x32', 1), ('x36', 1), ('x37', 1)])+
0.99 * [('x27', 1), ('x28', 1), ('x32', 1), ('x33', 1), ('x38', 1), ('x39', 1)])+
0.99 * [('x29', 1), ('x30', 1), ('x33', 1), ('x40', 1)])+
0.99 * [('x34', 1), ('x41', 1), ('x44', 1), ('x45', 1)])+
0.99 * [('x35', 1), ('x36', 1), ('x41', 1), ('x42', 1), ('x46', 1), ('x47', 1)])+
0.99 * [('x37', 1), ('x38', 1), ('x42', 1), ('x43', 1), ('x48', 1), ('x49', 1)])+
0.99 * [('x39', 1), ('x40', 1), ('x43', 1), ('x50', 1)])+
0.99 * [('x44', 1), ('x51', 1)])+
0.99 * [('x45', 1), ('x46', 1), ('x51', 1), ('x52', 1)])+
0.99 * [('x47', 1), ('x48', 1), ('x52', 1), ('x53', 1)])+
0.99 * [('x49', 1), ('x50', 1), ('x53', 1)])Default row names c1, c2 ... being created.

Violation: 0.5

Iteration log . . .
Iteration:     1   Dual objective     =            53.000000
New point to separate:  [('x1', 1.0), ('x2', 1.0), ('x3', 1.0), ('x5', 1.0), ('x10', 1.0), ('x11', 1.0), ('x13', 1.0), ('x14', 0.5), ('x15', 0.5), ('x19', 1.0), ('x21', 0.5), ('x22', 1.0), ('x25', 1.0), ('x28', 1.0), ('x30', 1.0), ('x31', 0.09999999999999998), ('x33', 0.5), ('x34', 1.0), ('x35', 0.9), ('x37', 0.9), ('x39', 0.5), ('x40', 0.5), ('x42', 1.0), ('x44', 1.0), ('x47', 0.09999999999999998), ('x49', 0.09999999999999998), ('x50', 1.0), ('x51', 1.0), ('x52', 1.0), ('x53', 0.9), ('z4,1', 1.0), ('z6,2', 1.0), ('z7,3', 1.0), ('z8,4', 1.0), ('z9,5', 1.0), ('z12,10', 1.0), ('z14,7', 0.5), ('z15,7', 0.5), ('z16,8', 1.0), ('z17,9', 1.0), ('z18,11', 1.0), ('z20,12', 1.0), ('z21,14', 0.5), ('z23,18', 1.0), ('z24,13', 1.0), ('z26,14', 0.5), ('z26,15', 0.5), ('z27,16', 1.0), ('z29,17', 1.0), ('z31,20', 0.9), ('z32,22', 0.5), ('z32,15', 0.5), ('z33,24', 0.5), ('z35,19', 0.09999999999999998), ('z36,20', 0.09999999999999998), ('z36,21', 0.9), ('z37,21', 0.09999999999999998), ('z38,22', 0.5), ('z38,23', 0.5), ('z39,23', 0.5), ('z40,24', 0.5), ('z41,26', 0.09999999999999998), ('z41,19', 0.9), ('z43,30', 1.0), ('z45,25', 1.0), ('z46,26', 0.9), ('z46,27', 0.09999999999999998), ('z47,27', 0.9), ('z48,28', 1.0), ('z49,29', 0.9), ('z53,29', 0.09999999999999998)]
Objective value:  53.0
Default row names c1, c2 ... being created.
Finding a cutting plane...
Found incumbent of value 0.000000 after 0.00 sec. (0.01 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 1 rows and 122 columns.
Reduced MIP has 72 rows, 231 columns, and 384 nonzeros.
Reduced MIP has 0 binaries, 72 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.25 ticks)
Tried aggregator 1 time.
Reduced MIP has 72 rows, 231 columns, and 384 nonzeros.
Reduced MIP has 0 binaries, 72 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.18 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.00 sec. (0.20 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      202.0000              --- 
      0     0        0.9900    29        0.0000        0.9900       91     --- 
      0     0        0.9900     6        0.0000      Cuts: 87      119     --- 
      0     0        0.9900     1        0.0000   MIRcuts: 10      122     --- 
      0     2        0.9900     1        0.0000        0.9900      122     --- 
Elapsed time = 0.02 sec. (4.76 ticks, tree = 0.01 MB, solutions = 1)
*   456+  262                            0.5000        0.9900            98.00%
*   606+  373                            0.5000        0.9900            98.00%
   3168  2713        0.9900    30        0.5000        0.9900     6494   98.00%
   5015  1257        0.7275     5        0.5000        0.9900    10883   98.00%
  12159  4114        0.9898     6        0.5000        0.9900    25733   98.00%
  26294 10991        0.9408     5        0.5000        0.9900    60263   98.00%
  39526 18873        0.9897     6        0.5000        0.9900    97365   98.00%
  55173 26314        0.9898     4        0.5000        0.9900   131500   98.00%
  70695 39087        0.9388     4        0.5000        0.9900   189266   98.00%
  85031 49055        0.9898     4        0.5000        0.9900   236999   98.00%
  98887 55473        0.9582     4        0.5000        0.9900   267285   98.00%

Mixed integer rounding cuts applied:  4
Gomory fractional cuts applied:  18

Root node processing (before b&c):
  Real time             =    0.01 sec. (4.69 ticks)
Parallel b&c, 4 threads:
  Real time             =    5.73 sec. (2320.45 ticks)
  Sync time (average)   =    0.38 sec.
  Wait time (average)   =    0.17 sec.
                          ------------
Total (root+branch&cut) =    5.74 sec. (2325.14 ticks)
Variables that need flooring, and amount to floor: [('x4', 0.99), ('x6', 0.99), ('x7', 0.9699999999999998), ('x8', 0.99), ('x9', 0.99), ('x12', 0.97), ('x16', 0.9700000000000002), ('x17', 0.97), ('x18', 0.99), ('x20', 0.9699999999999998), ('x23', 0.9699999999999998), ('x24', 0.9700000000000002), ('x26', 0.9999999999999998), ('x27', 0.5049999999999999), ('x29', 0.99), ('x32', 0.5149999999999997), ('x38', 0.5149999999999997), ('x43', 0.4849999999999999), ('x45', 0.9699999999999998), ('x48', 0.9699999999999998), ('z1,2', 0.010000000000000009), ('z1,31', 0.020000000000000018), ('z2,4', 0.010000000000000009), ('z2,31', 0.020000000000000018), ('z4,31', 0.010000000000000009), ('z5,1', 0.010000000000000009), ('z5,2', 0.010000000000000009), ('z6,3', 0.020000000000000018), ('z7,4', 0.98), ('z9,6', 0.010000000000000009), ('z11,8', 0.030000000000000027), ('z11,1', 0.010000000000000009), ('z13,12', 0.030000000000000027), ('z13,5', 0.010000000000000009), ('z14,31', 0.019999999999999907), ('z15,8', 0.029999999999999916), ('z18,10', 0.020000000000000018), ('z19,11', 0.010000000000000009), ('z19,12', 0.030000000000000027), ('z20,31', 0.99), ('z21,7', 0.9999999999999997), ('z22,16', 0.009999999999999898), ('z22,9', 0.029999999999999805), ('z23,11', 0.98), ('z24,31', 0.99), ('z25,13', 0.029999999999999916), ('z25,14', 4.440892098500626e-16), ('z27,15', 0.9900000000000004), ('z28,16', 0.4950000000000001), ('z28,17', 0.4950000000000001), ('z29,18', 0.020000000000000018), ('z30,18', 0.030000000000000027), ('z30,31', 0.020000000000000018), ('z31,13', 0.030000000000000027), ('z33,17', 0.4950000000000001), ('z34,31', 0.020000000000000018), ('z37,22', 4.440892098500626e-16), ('z39,24', 0.485), ('z40,31', 0.505), ('z42,28', 0.030000000000000027), ('z44,25', 0.030000000000000027), ('z44,31', 0.020000000000000018), ('z45,26', 0.97), ('z47,28', 0.030000000000000027), ('z48,29', 0.97), ('z49,30', 0.030000000000000027), ('z50,30', 0.515), ('z50,31', 0.505), ('z51,25', 0.030000000000000027), ('z51,31', 0.020000000000000018), ('z52,31', 0.020000000000000018), ('z53,31', 0.020000000000000018)]
Found cutting plane:  [('x1', 2), ('x2', 2), ('x5', 1), ('x6', 1), ('x7', 2), ('x11', 2), ('x12', 1), ('x13', 2), ('x14', 2), ('x15', 2), ('x16', 1), ('x17', 1), ('x18', 1), ('x19', 1), ('x20', 2), ('x21', 2), ('x22', 1), ('x23', 2), ('x24', 1), ('x25', 2), ('x26', 1), ('x27', 1), ('x28', 2), ('x29', 1), ('x30', 2), ('x31', 2), ('x32', 1), ('x33', 2), ('x34', 2), ('x35', 2), ('x36', 1), ('x37', 2), ('x38', 1), ('x39', 2), ('x40', 2), ('x41', 1), ('x42', 2), ('x43', 2), ('x44', 2), ('x45', 2), ('x46', 2), ('x47', 2), ('x48', 2), ('x49', 2), ('x50', 2), ('x51', 2), ('x52', 2), ('x53', 2), ('z1,2', 1), ('z4,1', -1), ('z4,31', -1), ('z5,1', -1), ('z6,2', 1), ('z7,3', 1), ('z8,4', -1), ('z8,5', -1), ('z9,5', -1), ('z9,6', -1), ('z11,8', -1), ('z12,10', -1), ('z15,8', -1), ('z16,8', -1), ('z16,9', -1), ('z17,9', -1), ('z17,10', -1), ('z18,10', -1), ('z18,11', 1), ('z19,12', -1), ('z20,12', 1), ('z21,14', 1), ('z21,7', -1), ('z22,9', -2), ('z23,18', 1), ('z23,11', 1), ('z24,13', -1), ('z24,31', -1), ('z25,13', -1), ('z25,14', 1), ('z26,14', 1), ('z26,15', 1), ('z27,16', 1), ('z28,16', 1), ('z28,17', 1), ('z29,17', 1), ('z31,13', -1), ('z32,22', 1), ('z32,15', 1), ('z33,17', 1), ('z36,20', -1), ('z36,21', -1), ('z37,22', 1), ('z38,22', 1), ('z38,23', -1), ('z41,19', -1), ('z43,30', 1), ('z45,25', 1), ('z45,26', 1), ('z46,26', 1), ('z48,28', 1)]
Found cutting plane: <= 45.0
Linear combination is: 
0.020000000000000018 * [('x1', 1), ('z1,2', 1), ('z1,31', 1)])+
0.020000000000000018 * [('x2', 1), ('z2,4', 1), ('z2,31', 1)])+
0.99 * [('x4', -1), ('z4,1', -1), ('z4,31', -1)])+
0.98 * [('x5', -1), ('z5,1', -1), ('z5,2', -1)])+
0.010000000000000009 * [('x6', 1), ('z6,2', 1), ('z6,3', 1)])+
0.99 * [('x7', 1), ('z7,3', 1), ('z7,4', 1)])+
0.99 * [('x8', -1), ('z8,4', -1), ('z8,5', -1)])+
0.99 * [('x9', -1), ('z9,5', -1), ('z9,6', -1)])+
0.020000000000000018 * [('x11', 1), ('z11,8', 1), ('z11,1', 1)])+
0.010000000000000009 * [('x12', -1), ('z12,10', -1), ('z12,3', -1)])+
0.020000000000000018 * [('x13', 1), ('z13,12', 1), ('z13,5', 1)])+
0.019999999999999907 * [('x14', 1), ('z14,7', 1), ('z14,31', 1)])+
0.019999999999999907 * [('x15', 1), ('z15,7', 1), ('z15,8', 1)])+
0.010000000000000009 * [('x16', -1), ('z16,8', -1), ('z16,9', -1)])+
0.010000000000000009 * [('x17', -1), ('z17,9', -1), ('z17,10', -1)])+
0.010000000000000009 * [('x18', 1), ('z18,10', 1), ('z18,11', 1)])+
0.98 * [('x19', -1), ('z19,11', -1), ('z19,12', -1)])+
0.99 * [('x20', 1), ('z20,12', 1), ('z20,31', 1)])+
0.01999999999999957 * [('x21', 1), ('z21,14', 1), ('z21,7', 1)])+
0.9800000000000001 * [('x22', -1), ('z22,16', -1), ('z22,9', -1)])+
0.99 * [('x23', 1), ('z23,18', 1), ('z23,11', 1)])+
0.010000000000000009 * [('x24', -1), ('z24,13', -1), ('z24,31', -1)])+
0.019999999999999907 * [('x25', 1), ('z25,13', 1), ('z25,14', 1)])+
0.019999999999999574 * [('x26', 1), ('z26,14', 1), ('z26,15', 1)])+
0.010000000000000009 * [('x27', 1), ('z27,15', 1), ('z27,16', 1)])+
0.505 * [('x28', 1), ('z28,16', 1), ('z28,17', 1)])+
0.010000000000000009 * [('x29', 1), ('z29,17', 1), ('z29,18', 1)])+
0.020000000000000018 * [('x30', 1), ('z30,18', 1), ('z30,31', 1)])+
0.020000000000000018 * [('x31', 1), ('z31,20', 1), ('z31,13', 1)])+
0.019999999999999574 * [('x32', 1), ('z32,22', 1), ('z32,15', 1)])+
0.505 * [('x33', 1), ('z33,24', 1), ('z33,17', 1)])+
0.020000000000000018 * [('x34', 1), ('z34,19', 1), ('z34,31', 1)])+
0.020000000000000018 * [('x35', 1), ('z35,19', 1), ('z35,20', 1)])+
0.98 * [('x36', -1), ('z36,20', -1), ('z36,21', -1)])+
0.020000000000000018 * [('x37', 1), ('z37,21', 1), ('z37,22', 1)])+
0.019999999999999574 * [('x38', 1), ('z38,22', 1), ('z38,23', 1)])+
0.99 * [('x39', 1), ('z39,23', 1), ('z39,24', 1)])+
0.505 * [('x40', 1), ('z40,24', 1), ('z40,31', 1)])+
0.98 * [('x41', -1), ('z41,26', -1), ('z41,19', -1)])+
0.020000000000000018 * [('x42', 1), ('z42,28', 1), ('z42,21', 1)])+
0.99 * [('x43', 1), ('z43,30', 1), ('z43,23', 1)])+
0.020000000000000018 * [('x44', 1), ('z44,25', 1), ('z44,31', 1)])+
0.99 * [('x45', 1), ('z45,25', 1), ('z45,26', 1)])+
0.020000000000000018 * [('x46', 1), ('z46,26', 1), ('z46,27', 1)])+
0.020000000000000018 * [('x47', 1), ('z47,27', 1), ('z47,28', 1)])+
0.99 * [('x48', 1), ('z48,28', 1), ('z48,29', 1)])+
0.020000000000000018 * [('x49', 1), ('z49,29', 1), ('z49,30', 1)])+
0.505 * [('x50', 1), ('z50,30', 1), ('z50,31', 1)])+
0.020000000000000018 * [('x51', 1), ('z51,25', 1), ('z51,31', 1)])+
0.020000000000000018 * [('x52', 1), ('z52,27', 1), ('z52,31', 1)])+
0.020000000000000018 * [('x53', 1), ('z53,29', 1), ('z53,31', 1)])+
0.010000000000000009 * [('z4,1', -1), ('z5,1', -1), ('z11,1', -1)])+
0.99 * [('z1,2', 1), ('z5,2', 1), ('z6,2', 1)])+
0.010000000000000009 * [('z6,3', 1), ('z7,3', 1), ('z12,3', 1)])+
0.010000000000000009 * [('z2,4', -1), ('z7,4', -1), ('z8,4', -1)])+
0.010000000000000009 * [('z8,5', -1), ('z9,5', -1), ('z13,5', -1)])+
0.019999999999999907 * [('z14,7', -1), ('z15,7', -1), ('z21,7', -1)])+
0.99 * [('z11,8', -1), ('z15,8', -1), ('z16,8', -1)])+
0.99 * [('z16,9', -1), ('z17,9', -1), ('z22,9', -1)])+
0.99 * [('z12,10', -1), ('z17,10', -1), ('z18,10', -1)])+
0.99 * [('z18,11', 1), ('z19,11', 1), ('z23,11', 1)])+
0.010000000000000009 * [('z13,12', 1), ('z19,12', 1), ('z20,12', 1)])+
0.99 * [('z24,13', -1), ('z25,13', -1), ('z31,13', -1)])+
0.9800000000000004 * [('z21,14', 1), ('z25,14', 1), ('z26,14', 1)])+
0.9800000000000004 * [('z26,15', 1), ('z27,15', 1), ('z32,15', 1)])+
0.99 * [('z22,16', 1), ('z27,16', 1), ('z28,16', 1)])+
0.99 * [('z28,17', 1), ('z29,17', 1), ('z33,17', 1)])+
0.010000000000000009 * [('z23,18', 1), ('z29,18', 1), ('z30,18', 1)])+
0.020000000000000018 * [('z34,19', -1), ('z35,19', -1), ('z41,19', -1)])+
0.020000000000000018 * [('z31,20', -1), ('z35,20', -1), ('z36,20', -1)])+
0.020000000000000018 * [('z36,21', -1), ('z37,21', -1), ('z42,21', -1)])+
0.9800000000000004 * [('z32,22', 1), ('z37,22', 1), ('z38,22', 1)])+
0.99 * [('z38,23', -1), ('z39,23', -1), ('z43,23', -1)])+
0.505 * [('z33,24', -1), ('z39,24', -1), ('z40,24', -1)])+
0.010000000000000009 * [('z44,25', 1), ('z45,25', 1), ('z51,25', 1)])+
0.98 * [('z41,26', 1), ('z45,26', 1), ('z46,26', 1)])+
0.020000000000000018 * [('z46,27', -1), ('z47,27', -1), ('z52,27', -1)])+
0.010000000000000009 * [('z42,28', 1), ('z47,28', 1), ('z48,28', 1)])+
0.020000000000000018 * [('z48,29', -1), ('z49,29', -1), ('z53,29', -1)])+
0.010000000000000009 * [('z43,30', 1), ('z49,30', 1), ('z50,30', 1)])+
0.99 * [('x1', 1), ('x4', 1), ('x5', 1)])+
0.99 * [('x1', 1), ('x2', 1), ('x6', 1), ('x7', 1)])+
0.99 * [('x2', 1), ('x3', 1), ('x8', 1), ('x9', 1)])+
0.99 * [('x3', -1), ('x10', -1)])+
0.99 * [('x4', 1), ('x11', 1), ('x14', 1), ('x15', 1)])+
0.99 * [('x5', 1), ('x6', 1), ('x11', 1), ('x12', 1), ('x16', 1), ('x17', 1)])+
0.99 * [('x7', 1), ('x8', 1), ('x12', 1), ('x13', 1), ('x18', 1), ('x19', 1)])+
0.99 * [('x9', 1), ('x10', 1), ('x13', 1), ('x20', 1)])+
0.9900000000000001 * [('x14', 1), ('x21', 1), ('x24', 1), ('x25', 1)])+
0.9900000000000001 * [('x15', 1), ('x16', 1), ('x21', 1), ('x22', 1), ('x26', 1), ('x27', 1)])+
0.99 * [('x17', 1), ('x18', 1), ('x22', 1), ('x23', 1), ('x28', 1), ('x29', 1)])+
0.99 * [('x19', 1), ('x20', 1), ('x23', 1), ('x30', 1)])+
0.99 * [('x24', 1), ('x31', 1), ('x34', 1), ('x35', 1)])+
0.99 * [('x25', 1), ('x26', 1), ('x31', 1), ('x32', 1), ('x36', 1), ('x37', 1)])+
0.505 * [('x27', 1), ('x28', 1), ('x32', 1), ('x33', 1), ('x38', 1), ('x39', 1)])+
0.99 * [('x29', 1), ('x30', 1), ('x33', 1), ('x40', 1)])+
0.99 * [('x34', 1), ('x41', 1), ('x44', 1), ('x45', 1)])+
0.99 * [('x35', 1), ('x36', 1), ('x41', 1), ('x42', 1), ('x46', 1), ('x47', 1)])+
0.99 * [('x37', 1), ('x38', 1), ('x42', 1), ('x43', 1), ('x48', 1), ('x49', 1)])+
0.505 * [('x39', 1), ('x40', 1), ('x43', 1), ('x50', 1)])+
0.99 * [('x44', 1), ('x51', 1)])+
0.99 * [('x45', 1), ('x46', 1), ('x51', 1), ('x52', 1)])+
0.99 * [('x47', 1), ('x48', 1), ('x52', 1), ('x53', 1)])+
0.99 * [('x49', 1), ('x50', 1), ('x53', 1)])Default row names c1, c2 ... being created.

Violation: 0.5

Iteration log . . .
Iteration:     1   Dual objective     =            53.000000
New point to separate:  [('x1', 1.0), ('x2', 0.875), ('x3', 1.0), ('x4', 0.125), ('x5', 0.875), ('x6', 0.125), ('x8', 0.125), ('x10', 1.0), ('x11', 0.875), ('x12', 0.125), ('x13', 0.875), ('x14', 0.5), ('x15', 0.5), ('x19', 0.875), ('x20', 0.125), ('x21', 0.5), ('x22', 1.0), ('x25', 1.0), ('x28', 1.0), ('x30', 1.0), ('x33', 0.5), ('x34', 1.0), ('x35', 1.0), ('x37', 1.0), ('x39', 0.5), ('x40', 0.5), ('x42', 1.0), ('x44', 1.0), ('x50', 1.0), ('x51', 1.0), ('x52', 1.0), ('x53', 1.0), ('z2,4', 0.125), ('z4,1', 0.875), ('z5,2', 0.125), ('z6,2', 0.875), ('z7,3', 1.0), ('z8,4', 0.875), ('z9,5', 1.0), ('z11,1', 0.125), ('z12,10', 0.875), ('z13,12', 0.125), ('z14,7', 0.5), ('z15,7', 0.5), ('z16,8', 1.0), ('z17,9', 1.0), ('z18,10', 0.125), ('z18,11', 0.875), ('z19,11', 0.125), ('z20,12', 0.875), ('z21,14', 0.5), ('z23,18', 1.0), ('z24,13', 1.0), ('z26,14', 0.5), ('z26,15', 0.5), ('z27,16', 1.0), ('z29,17', 1.0), ('z31,20', 1.0), ('z32,22', 0.5), ('z32,15', 0.5), ('z33,24', 0.5), ('z36,21', 1.0), ('z38,22', 0.5), ('z38,23', 0.5), ('z39,23', 0.5), ('z40,24', 0.5), ('z41,19', 1.0), ('z43,30', 1.0), ('z45,25', 1.0), ('z46,26', 1.0), ('z47,27', 1.0), ('z48,28', 1.0), ('z49,29', 1.0)]
Objective value:  53.0
Default row names c1, c2 ... being created.
Finding a cutting plane...
Found incumbent of value 0.000000 after 0.00 sec. (0.01 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 1 rows and 123 columns.
Reduced MIP has 74 rows, 235 columns, and 394 nonzeros.
Reduced MIP has 0 binaries, 74 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.28 ticks)
Tried aggregator 1 time.
Reduced MIP has 74 rows, 235 columns, and 394 nonzeros.
Reduced MIP has 0 binaries, 74 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.19 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.00 sec. (0.21 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      202.0000              --- 
      0     0        0.9900    30        0.0000        0.9900       94     --- 
      0     0        0.9900     4        0.0000      Cuts: 90      119     --- 
      0     0        0.9900     1        0.0000    MIRcuts: 6      121     --- 
      0     2        0.9900     1        0.0000        0.9900      121     --- 
Elapsed time = 0.01 sec. (5.03 ticks, tree = 0.01 MB, solutions = 1)
*   499+  356                            0.5000        0.9900            98.00%
   4905  3898        0.9900    20        0.5000        0.9900    11150   98.00%
   6605   962        0.9250     8        0.5000        0.9900    14202   98.00%
  13071  6240        0.9487     5        0.5000        0.9900    33050   98.00%
  26596 14696        0.8900     8        0.5000        0.9900    62980   98.00%
  39787 25251        0.9900     8        0.5000        0.9900    99300   98.00%
  56844 34032        0.9850     8        0.5000        0.9900   128587   98.00%
  73975 50327        0.9278     6        0.5000        0.9900   185789   98.00%
  90061 59087        0.9350     5        0.5000        0.9900   214568   98.00%
 104628 70385        0.9884     7        0.5000        0.9900   252517   98.00%

Mixed integer rounding cuts applied:  10
Gomory fractional cuts applied:  16

Root node processing (before b&c):
  Real time             =    0.01 sec. (4.95 ticks)
Parallel b&c, 4 threads:
  Real time             =    5.64 sec. (2258.12 ticks)
  Sync time (average)   =    0.45 sec.
  Wait time (average)   =    0.31 sec.
                          ------------
Total (root+branch&cut) =    5.66 sec. (2263.07 ticks)
Variables that need flooring, and amount to floor: [('x7', 0.98), ('x9', 0.030000000000000027), ('x16', 0.5049999999999999), ('x17', 0.99), ('x23', 0.98), ('x24', 0.505), ('x26', 0.4849999999999999), ('x27', 0.48499999999998966), ('x29', 0.99), ('x31', 0.97), ('x32', 1.0658141036401503e-14), ('x36', 0.99), ('x38', 1.0658141036401503e-14), ('x41', 0.9699999999999998), ('x43', 0.9699999999999895), ('x45', 0.9699999999999998), ('x46', 0.99), ('x47', 0.9699999999999998), ('x48', 0.9699999999999998), ('x49', 0.97), ('z1,31', 0.020000000000000018), ('z2,31', 0.99), ('z4,31', 0.020000000000000018), ('z6,3', 0.020000000000000018), ('z7,4', 0.010000000000000009), ('z9,6', 0.99), ('z11,8', 0.010000000000000009), ('z12,3', 0.020000000000000018), ('z14,31', 0.505), ('z15,8', 0.4950000000000001), ('z17,10', 0.99), ('z19,12', 0.030000000000000027), ('z20,31', 0.99), ('z21,7', 0.485), ('z22,16', 0.515), ('z22,9', 0.495), ('z23,11', 0.98), ('z24,31', 0.010000000000000009), ('z25,13', 0.495), ('z25,14', 0.515), ('z28,16', 0.030000000000010463), ('z28,17', 0.010000000000010445), ('z29,18', 0.010000000000000009), ('z30,18', 0.020000000000000018), ('z30,31', 0.020000000000000018), ('z31,13', 0.98), ('z33,17', 0.010000000000010445), ('z34,19', 0.030000000000000027), ('z34,31', 0.020000000000000018), ('z35,19', 0.030000000000000027), ('z35,20', 0.030000000000000027), ('z36,20', 0.020000000000000018), ('z37,21', 0.010000000000000009), ('z37,22', 0.9999999999999791), ('z39,24', 1.0436096431476471e-14), ('z40,31', 0.020000000000010454), ('z41,26', 0.98), ('z42,28', 0.030000000000000027), ('z42,21', 0.010000000000000009), ('z43,23', 0.9699999999999791), ('z44,25', 0.030000000000000027), ('z44,31', 0.020000000000000018), ('z45,26', 0.98), ('z46,27', 0.020000000000000018), ('z50,30', 0.030000000000010463), ('z50,31', 0.020000000000010454), ('z51,25', 0.030000000000000027), ('z51,31', 0.020000000000000018), ('z52,27', 0.030000000000000027), ('z52,31', 0.020000000000000018), ('z53,29', 0.030000000000000027), ('z53,31', 0.020000000000000018)]
Found cutting plane:  [('x1', 2), ('x2', 2), ('x4', 2), ('x5', 2), ('x6', 2), ('x7', 1), ('x8', 2), ('x10', -1), ('x11', 2), ('x12', 2), ('x13', 1), ('x14', 2), ('x15', 2), ('x16', 1), ('x18', 2), ('x19', 2), ('x20', 1), ('x21', 1), ('x22', 2), ('x23', 1), ('x25', 2), ('x26', 1), ('x27', 1), ('x28', 2), ('x30', 2), ('x31', 1), ('x32', 2), ('x33', 2), ('x34', 2), ('x35', 2), ('x36', 1), ('x37', 2), ('x38', 2), ('x39', 2), ('x40', 2), ('x41', 2), ('x42', 2), ('x43', 2), ('x44', 2), ('x45', 2), ('x46', 1), ('x47', 2), ('x48', 2), ('x49', 1), ('x50', 1), ('x51', 2), ('x52', 1), ('x53', 2), ('z2,4', 1), ('z4,1', 1), ('z5,1', 1), ('z8,4', 1), ('z8,5', 1), ('z9,5', 1), ('z11,8', 1), ('z11,1', 1), ('z12,10', 1), ('z13,5', 1), ('z15,8', 1), ('z16,8', 1), ('z17,9', -1), ('z17,10', -1), ('z18,10', 1), ('z19,12', -1), ('z21,7', -1), ('z22,16', -1), ('z23,11', -1), ('z24,13', -1), ('z24,31', -1), ('z26,15', -1), ('z27,15', -1), ('z27,16', -1), ('z28,16', -1), ('z29,17', -1), ('z29,18', -1), ('z31,20', -1), ('z31,13', -1), ('z32,22', 1), ('z32,15', -1), ('z35,20', -1), ('z36,20', -1), ('z36,21', 1), ('z37,21', 1), ('z38,22', 1), ('z38,23', 1), ('z39,23', 1), ('z41,26', 1), ('z41,19', 1), ('z42,21', 1), ('z43,30', 1), ('z43,23', 1), ('z45,25', 1), ('z45,26', 1), ('z46,26', 1), ('z47,27', 1), ('z47,28', 1), ('z48,28', 1), ('z49,29', -1), ('z50,30', -1), ('z50,31', -1), ('z52,27', -1), ('z52,31', -1), ('z53,29', -1)]
Found cutting plane: <= 46.0
Linear combination is: 
0.020000000000000018 * [('x1', 1), ('z1,2', 1), ('z1,31', 1)])+
0.99 * [('x2', 1), ('z2,4', 1), ('z2,31', 1)])+
0.020000000000000018 * [('x4', 1), ('z4,1', 1), ('z4,31', 1)])+
0.020000000000000018 * [('x5', 1), ('z5,1', 1), ('z5,2', 1)])+
0.020000000000000018 * [('x6', 1), ('z6,2', 1), ('z6,3', 1)])+
0.99 * [('x8', 1), ('z8,4', 1), ('z8,5', 1)])+
0.99 * [('x9', 1), ('z9,5', 1), ('z9,6', 1)])+
0.020000000000000018 * [('x11', 1), ('z11,8', 1), ('z11,1', 1)])+
0.020000000000000018 * [('x12', 1), ('z12,10', 1), ('z12,3', 1)])+
0.99 * [('x13', 1), ('z13,12', 1), ('z13,5', 1)])+
0.505 * [('x14', 1), ('z14,7', 1), ('z14,31', 1)])+
0.505 * [('x15', 1), ('z15,7', 1), ('z15,8', 1)])+
0.010000000000000009 * [('x16', 1), ('z16,8', 1), ('z16,9', 1)])+
0.99 * [('x17', -1), ('z17,9', -1), ('z17,10', -1)])+
0.020000000000000018 * [('x18', 1), ('z18,10', 1), ('z18,11', 1)])+
0.020000000000000018 * [('x19', 1), ('z19,11', 1), ('z19,12', 1)])+
0.99 * [('x20', 1), ('z20,12', 1), ('z20,31', 1)])+
0.010000000000000009 * [('x21', -1), ('z21,14', -1), ('z21,7', -1)])+
0.505 * [('x22', 1), ('z22,16', 1), ('z22,9', 1)])+
0.99 * [('x24', -1), ('z24,13', -1), ('z24,31', -1)])+
0.505 * [('x25', 1), ('z25,13', 1), ('z25,14', 1)])+
0.010000000000000009 * [('x26', -1), ('z26,14', -1), ('z26,15', -1)])+
0.010000000000000009 * [('x27', -1), ('z27,15', -1), ('z27,16', -1)])+
0.020000000000010454 * [('x28', 1), ('z28,16', 1), ('z28,17', 1)])+
0.99 * [('x29', -1), ('z29,17', -1), ('z29,18', -1)])+
0.020000000000000018 * [('x30', 1), ('z30,18', 1), ('z30,31', 1)])+
0.010000000000000009 * [('x31', -1), ('z31,20', -1), ('z31,13', -1)])+
0.02000000000002089 * [('x32', 1), ('z32,22', 1), ('z32,15', 1)])+
0.020000000000010454 * [('x33', 1), ('z33,24', 1), ('z33,17', 1)])+
0.020000000000000018 * [('x34', 1), ('z34,19', 1), ('z34,31', 1)])+
0.020000000000000018 * [('x35', 1), ('z35,19', 1), ('z35,20', 1)])+
0.010000000000000009 * [('x36', 1), ('z36,20', 1), ('z36,21', 1)])+
0.020000000000000018 * [('x37', 1), ('z37,21', 1), ('z37,22', 1)])+
0.02000000000002089 * [('x38', 1), ('z38,22', 1), ('z38,23', 1)])+
0.02000000000002089 * [('x39', 1), ('z39,23', 1), ('z39,24', 1)])+
0.020000000000010454 * [('x40', 1), ('z40,24', 1), ('z40,31', 1)])+
0.99 * [('x41', 1), ('z41,26', 1), ('z41,19', 1)])+
0.020000000000000018 * [('x42', 1), ('z42,28', 1), ('z42,21', 1)])+
0.99 * [('x43', 1), ('z43,30', 1), ('z43,23', 1)])+
0.020000000000000018 * [('x44', 1), ('z44,25', 1), ('z44,31', 1)])+
0.99 * [('x45', 1), ('z45,25', 1), ('z45,26', 1)])+
0.010000000000000009 * [('x46', 1), ('z46,26', 1), ('z46,27', 1)])+
0.99 * [('x47', 1), ('z47,27', 1), ('z47,28', 1)])+
0.99 * [('x48', 1), ('z48,28', 1), ('z48,29', 1)])+
0.010000000000000009 * [('x49', -1), ('z49,29', -1), ('z49,30', -1)])+
0.9799999999999895 * [('x50', -1), ('z50,30', -1), ('z50,31', -1)])+
0.020000000000000018 * [('x51', 1), ('z51,25', 1), ('z51,31', 1)])+
0.98 * [('x52', -1), ('z52,27', -1), ('z52,31', -1)])+
0.020000000000000018 * [('x53', 1), ('z53,29', 1), ('z53,31', 1)])+
0.98 * [('z4,1', 1), ('z5,1', 1), ('z11,1', 1)])+
0.020000000000000018 * [('z1,2', -1), ('z5,2', -1), ('z6,2', -1)])+
0.010000000000000009 * [('z2,4', 1), ('z7,4', 1), ('z8,4', 1)])+
0.010000000000000009 * [('z8,5', 1), ('z9,5', 1), ('z13,5', 1)])+
0.505 * [('z14,7', -1), ('z15,7', -1), ('z21,7', -1)])+
0.99 * [('z11,8', 1), ('z15,8', 1), ('z16,8', 1)])+
0.010000000000000009 * [('z16,9', -1), ('z17,9', -1), ('z22,9', -1)])+
0.98 * [('z12,10', 1), ('z17,10', 1), ('z18,10', 1)])+
0.020000000000000018 * [('z18,11', -1), ('z19,11', -1), ('z23,11', -1)])+
0.99 * [('z13,12', -1), ('z19,12', -1), ('z20,12', -1)])+
0.010000000000000009 * [('z24,13', -1), ('z25,13', -1), ('z31,13', -1)])+
0.010000000000000009 * [('z21,14', 1), ('z25,14', 1), ('z26,14', 1)])+
0.99 * [('z26,15', -1), ('z27,15', -1), ('z32,15', -1)])+
0.99 * [('z22,16', -1), ('z27,16', -1), ('z28,16', -1)])+
0.010000000000000009 * [('z28,17', -1), ('z29,17', -1), ('z33,17', -1)])+
0.010000000000000009 * [('z34,19', 1), ('z35,19', 1), ('z41,19', 1)])+
0.99 * [('z31,20', -1), ('z35,20', -1), ('z36,20', -1)])+
0.99 * [('z36,21', 1), ('z37,21', 1), ('z42,21', 1)])+
0.9799999999999791 * [('z32,22', 1), ('z37,22', 1), ('z38,22', 1)])+
0.9799999999999791 * [('z38,23', 1), ('z39,23', 1), ('z43,23', 1)])+
0.020000000000010454 * [('z33,24', -1), ('z39,24', -1), ('z40,24', -1)])+
0.010000000000000009 * [('z44,25', 1), ('z45,25', 1), ('z51,25', 1)])+
0.99 * [('z41,26', 1), ('z45,26', 1), ('z46,26', 1)])+
0.010000000000000009 * [('z46,27', 1), ('z47,27', 1), ('z52,27', 1)])+
0.010000000000000009 * [('z42,28', 1), ('z47,28', 1), ('z48,28', 1)])+
0.99 * [('z48,29', -1), ('z49,29', -1), ('z53,29', -1)])+
0.010000000000000009 * [('z43,30', 1), ('z49,30', 1), ('z50,30', 1)])+
0.99 * [('x1', 1), ('x4', 1), ('x5', 1)])+
0.99 * [('x1', 1), ('x2', 1), ('x6', 1), ('x7', 1)])+
0.020000000000000018 * [('x2', 1), ('x3', 1), ('x8', 1), ('x9', 1)])+
0.020000000000000018 * [('x3', -1), ('x10', -1)])+
0.99 * [('x4', 1), ('x11', 1), ('x14', 1), ('x15', 1)])+
0.99 * [('x5', 1), ('x6', 1), ('x11', 1), ('x12', 1), ('x16', 1), ('x17', 1)])+
0.99 * [('x7', 1), ('x8', 1), ('x12', 1), ('x13', 1), ('x18', 1), ('x19', 1)])+
0.98 * [('x9', -1), ('x10', -1), ('x13', -1), ('x20', -1)])+
0.505 * [('x14', 1), ('x21', 1), ('x24', 1), ('x25', 1)])+
0.505 * [('x15', 1), ('x16', 1), ('x21', 1), ('x22', 1), ('x26', 1), ('x27', 1)])+
0.99 * [('x17', 1), ('x18', 1), ('x22', 1), ('x23', 1), ('x28', 1), ('x29', 1)])+
0.99 * [('x19', 1), ('x20', 1), ('x23', 1), ('x30', 1)])+
0.99 * [('x24', 1), ('x31', 1), ('x34', 1), ('x35', 1)])+
0.99 * [('x25', 1), ('x26', 1), ('x31', 1), ('x32', 1), ('x36', 1), ('x37', 1)])+
0.9899999999999896 * [('x27', 1), ('x28', 1), ('x32', 1), ('x33', 1), ('x38', 1), ('x39', 1)])+
0.99 * [('x29', 1), ('x30', 1), ('x33', 1), ('x40', 1)])+
0.99 * [('x34', 1), ('x41', 1), ('x44', 1), ('x45', 1)])+
0.99 * [('x35', 1), ('x36', 1), ('x41', 1), ('x42', 1), ('x46', 1), ('x47', 1)])+
0.99 * [('x37', 1), ('x38', 1), ('x42', 1), ('x43', 1), ('x48', 1), ('x49', 1)])+
0.9899999999999896 * [('x39', 1), ('x40', 1), ('x43', 1), ('x50', 1)])+
0.99 * [('x44', 1), ('x51', 1)])+
0.99 * [('x45', 1), ('x46', 1), ('x51', 1), ('x52', 1)])+
0.99 * [('x47', 1), ('x48', 1), ('x52', 1), ('x53', 1)])+
0.99 * [('x49', 1), ('x50', 1), ('x53', 1)])Default row names c1, c2 ... being created.

Violation: 0.5

Iteration log . . .
Iteration:     1   Dual objective     =            53.000000
New point to separate:  [('x1', 1.0), ('x2', 1.0), ('x3', 1.0), ('x5', 1.0), ('x10', 1.0), ('x11', 1.0), ('x13', 1.0), ('x14', 0.5), ('x15', 0.5), ('x19', 1.0), ('x21', 0.5), ('x22', 0.75), ('x23', 0.25), ('x25', 1.0), ('x27', 0.25), ('x28', 1.0), ('x30', 0.75), ('x33', 0.5), ('x34', 1.0), ('x35', 1.0), ('x37', 1.0), ('x39', 0.25), ('x40', 0.75), ('x42', 1.0), ('x44', 1.0), ('x50', 1.0), ('x51', 1.0), ('x52', 1.0), ('x53', 1.0), ('z4,1', 1.0), ('z6,2', 1.0), ('z7,3', 1.0), ('z8,4', 1.0), ('z9,5', 1.0), ('z12,10', 1.0), ('z14,7', 0.5), ('z15,7', 0.5), ('z16,8', 1.0), ('z17,9', 1.0), ('z18,11', 1.0), ('z20,12', 1.0), ('z21,14', 0.5), ('z22,16', 0.25), ('z23,18', 0.75), ('z24,13', 1.0), ('z26,14', 0.5), ('z26,15', 0.5), ('z27,16', 0.75), ('z29,17', 1.0), ('z30,18', 0.25), ('z31,20', 1.0), ('z32,22', 0.5), ('z32,15', 0.5), ('z33,24', 0.5), ('z36,21', 1.0), ('z38,22', 0.5), ('z38,23', 0.5), ('z39,23', 0.5), ('z39,24', 0.25), ('z40,24', 0.25), ('z41,19', 1.0), ('z43,30', 1.0), ('z45,25', 1.0), ('z46,26', 1.0), ('z47,27', 1.0), ('z48,28', 1.0), ('z49,29', 1.0)]
Objective value:  53.0
Default row names c1, c2 ... being created.
Finding a cutting plane...
Found incumbent of value 0.000000 after 0.00 sec. (0.01 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 1 rows and 128 columns.
Reduced MIP has 68 rows, 219 columns, and 359 nonzeros.
Reduced MIP has 0 binaries, 68 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.27 ticks)
Tried aggregator 1 time.
Reduced MIP has 68 rows, 219 columns, and 359 nonzeros.
Reduced MIP has 0 binaries, 68 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.17 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.00 sec. (0.19 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      202.0000              --- 
      0     0        0.9900    28        0.0000        0.9900       78     --- 
      0     0        0.9900     3        0.0000      Cuts: 85      102     --- 
      0     0        0.9900     3        0.0000    MIRcuts: 6      104     --- 
      0     0        0.9900     1        0.0000    MIRcuts: 5      105     --- 
      0     2        0.9900     1        0.0000        0.9900      105     --- 
Elapsed time = 0.01 sec. (5.12 ticks, tree = 0.01 MB, solutions = 1)
*   465+  281                            0.5000        0.9900            98.00%
   3183  2893        0.9900    14        0.5000        0.9900     6526   98.00%
   5483  1320        0.9700     5        0.5000        0.9900    11017   98.00%
  13818  6217        0.9700     5        0.5000        0.9900    28607   98.00%
  28644 14295        0.9700     8        0.5000        0.9900    59700   98.00%
  41535 22485        0.9750     6        0.5000        0.9900    94384   98.00%
  57783 29257        0.9750     6        0.5000        0.9900   125089   98.00%
  72760 42019        0.9800     5        0.5000        0.9900   182484   98.00%
  87001 52957        0.9800     5        0.5000        0.9900   235363   98.00%
 100817 56422        0.9897     3        0.5000        0.9900   253244   98.00%

Mixed integer rounding cuts applied:  15
Gomory fractional cuts applied:  21

Root node processing (before b&c):
  Real time             =    0.01 sec. (5.05 ticks)
Parallel b&c, 4 threads:
  Real time             =    6.10 sec. (2324.31 ticks)
  Sync time (average)   =    0.43 sec.
  Wait time (average)   =    0.22 sec.
                          ------------
Total (root+branch&cut) =    6.11 sec. (2329.36 ticks)
Variables that need flooring, and amount to floor: [('x4', 0.97), ('x6', 0.99), ('x7', 0.9699999999999998), ('x8', 0.9699999999999998), ('x9', 0.97), ('x12', 0.99), ('x16', 0.97), ('x17', 0.505), ('x18', 0.505), ('x20', 0.99), ('x24', 0.99), ('x29', 0.020000000000000018), ('x31', 0.9699999999999998), ('x32', 0.4849999999999999), ('x36', 0.9699999999999998), ('x38', 0.4850000000000003), ('x41', 0.9699999999999998), ('x43', 0.5050000000000001), ('x45', 0.9699999999999998), ('x46', 0.99), ('x49', 0.97), ('z1,2', 0.010000000000000009), ('z1,31', 0.020000000000000018), ('z2,4', 0.030000000000000027), ('z2,31', 0.020000000000000018), ('z4,31', 0.99), ('z5,1', 0.030000000000000027), ('z5,2', 0.010000000000000009), ('z6,3', 0.020000000000000018), ('z9,6', 0.99), ('z11,8', 0.030000000000000027), ('z11,1', 0.030000000000000027), ('z12,3', 0.020000000000000018), ('z13,12', 0.010000000000000009), ('z13,5', 0.030000000000000027), ('z14,31', 0.020000000000000018), ('z15,8', 0.030000000000000027), ('z16,9', 0.98), ('z19,11', 0.010000000000000009), ('z19,12', 0.010000000000000009), ('z20,31', 0.010000000000000009), ('z22,9', 0.495), ('z23,11', 0.495), ('z24,31', 0.010000000000000009), ('z25,13', 0.010000000000000009), ('z27,15', 0.515), ('z28,16', 0.485), ('z28,17', 0.98), ('z29,18', 0.505), ('z30,31', 0.505), ('z31,13', 0.98), ('z33,17', 0.98), ('z34,19', 0.030000000000000027), ('z34,31', 0.020000000000000018), ('z35,19', 0.030000000000000027), ('z35,20', 0.030000000000000027), ('z37,21', 0.030000000000000027), ('z37,22', 0.030000000000000027), ('z40,31', 0.99), ('z41,26', 0.98), ('z42,28', 0.030000000000000027), ('z42,21', 0.030000000000000027), ('z43,23', 0.020000000000000018), ('z44,25', 0.030000000000000027), ('z44,31', 0.020000000000000018), ('z45,26', 0.98), ('z46,27', 0.020000000000000018), ('z48,29', 0.98), ('z50,30', 0.5149999999999999), ('z50,31', 0.5249999999999999), ('z51,25', 0.030000000000000027), ('z51,31', 0.020000000000000018), ('z52,31', 0.99), ('z53,31', 0.010000000000000009)]
Found cutting plane:  [('x1', 2), ('x2', 2), ('x4', 1), ('x5', 2), ('x7', 2), ('x8', 2), ('x9', 1), ('x11', 1), ('x13', 2), ('x14', 2), ('x15', 2), ('x16', 1), ('x19', 1), ('x21', 1), ('x22', 2), ('x23', 2), ('x25', 2), ('x26', 1), ('x27', 2), ('x28', 1), ('x29', 1), ('x30', 2), ('x31', 2), ('x32', 2), ('x33', 1), ('x34', 2), ('x35', 1), ('x36', 2), ('x37', 1), ('x38', 2), ('x39', 2), ('x40', 2), ('x41', 2), ('x42', 2), ('x43', 1), ('x44', 1), ('x45', 2), ('x46', 1), ('x47', 2), ('x48', 2), ('x49', 1), ('x50', 2), ('x51', 2), ('x52', 2), ('z4,1', -1), ('z4,31', -1), ('z5,1', -1), ('z6,2', -1), ('z6,3', -1), ('z7,3', 1), ('z7,4', 1), ('z8,4', 1), ('z9,5', -1), ('z9,6', -1), ('z11,8', -2), ('z11,1', -2), ('z12,10', -1), ('z12,3', -1), ('z13,5', -1), ('z15,8', -1), ('z16,8', -1), ('z16,9', -1), ('z17,9', -1), ('z17,10', -1), ('z18,10', -1), ('z18,11', -1), ('z19,11', -1), ('z19,12', -1), ('z20,12', -1), ('z20,31', -1), ('z21,7', -1), ('z22,16', 1), ('z23,18', 1), ('z24,13', -1), ('z24,31', -1), ('z25,14', 1), ('z26,15', -1), ('z27,16', 1), ('z29,17', 1), ('z30,18', 1), ('z31,20', 1), ('z32,15', 1), ('z33,24', -1), ('z35,19', -1), ('z35,20', -1), ('z36,20', 1), ('z36,21', 1), ('z37,21', -1), ('z37,22', -2), ('z38,23', 1), ('z39,23', 1), ('z41,26', 1), ('z41,19', 1), ('z43,30', 1), ('z44,25', -1), ('z44,31', -1), ('z45,25', 1), ('z45,26', 1), ('z46,26', 1), ('z47,27', 1), ('z47,28', 1), ('z48,28', 1), ('z48,29', 1), ('z49,29', 1), ('z49,30', 1), ('z50,30', 1), ('z52,27', 1), ('z53,31', -1)]
Found cutting plane: <= 40.0
Linear combination is: 
0.020000000000000018 * [('x1', 1), ('z1,2', 1), ('z1,31', 1)])+
0.020000000000000018 * [('x2', 1), ('z2,4', 1), ('z2,31', 1)])+
0.010000000000000009 * [('x4', -1), ('z4,1', -1), ('z4,31', -1)])+
0.020000000000000018 * [('x5', 1), ('z5,1', 1), ('z5,2', 1)])+
0.99 * [('x6', -1), ('z6,2', -1), ('z6,3', -1)])+
0.99 * [('x7', 1), ('z7,3', 1), ('z7,4', 1)])+
0.99 * [('x8', 1), ('z8,4', 1), ('z8,5', 1)])+
0.010000000000000009 * [('x9', -1), ('z9,5', -1), ('z9,6', -1)])+
0.98 * [('x11', -1), ('z11,8', -1), ('z11,1', -1)])+
0.99 * [('x12', -1), ('z12,10', -1), ('z12,3', -1)])+
0.020000000000000018 * [('x13', 1), ('z13,12', 1), ('z13,5', 1)])+
0.020000000000000018 * [('x14', 1), ('z14,7', 1), ('z14,31', 1)])+
0.020000000000000018 * [('x15', 1), ('z15,7', 1), ('z15,8', 1)])+
0.010000000000000009 * [('x16', -1), ('z16,8', -1), ('z16,9', -1)])+
0.99 * [('x17', -1), ('z17,9', -1), ('z17,10', -1)])+
0.99 * [('x18', -1), ('z18,10', -1), ('z18,11', -1)])+
0.98 * [('x19', -1), ('z19,11', -1), ('z19,12', -1)])+
0.99 * [('x20', -1), ('z20,12', -1), ('z20,31', -1)])+
0.98 * [('x21', -1), ('z21,14', -1), ('z21,7', -1)])+
0.505 * [('x22', 1), ('z22,16', 1), ('z22,9', 1)])+
0.505 * [('x23', 1), ('z23,18', 1), ('z23,11', 1)])+
0.99 * [('x24', -1), ('z24,13', -1), ('z24,31', -1)])+
0.020000000000000018 * [('x25', 1), ('z25,13', 1), ('z25,14', 1)])+
0.98 * [('x26', -1), ('z26,14', -1), ('z26,15', -1)])+
0.505 * [('x27', 1), ('z27,15', 1), ('z27,16', 1)])+
0.010000000000000009 * [('x28', -1), ('z28,16', -1), ('z28,17', -1)])+
0.010000000000000009 * [('x29', 1), ('z29,17', 1), ('z29,18', 1)])+
0.505 * [('x30', 1), ('z30,18', 1), ('z30,31', 1)])+
0.99 * [('x31', 1), ('z31,20', 1), ('z31,13', 1)])+
0.99 * [('x32', 1), ('z32,22', 1), ('z32,15', 1)])+
0.010000000000000009 * [('x33', -1), ('z33,24', -1), ('z33,17', -1)])+
0.020000000000000018 * [('x34', 1), ('z34,19', 1), ('z34,31', 1)])+
0.98 * [('x35', -1), ('z35,19', -1), ('z35,20', -1)])+
0.99 * [('x36', 1), ('z36,20', 1), ('z36,21', 1)])+
0.98 * [('x37', -1), ('z37,21', -1), ('z37,22', -1)])+
0.99 * [('x38', 1), ('z38,22', 1), ('z38,23', 1)])+
0.99 * [('x39', 1), ('z39,23', 1), ('z39,24', 1)])+
0.99 * [('x40', 1), ('z40,24', 1), ('z40,31', 1)])+
0.99 * [('x41', 1), ('z41,26', 1), ('z41,19', 1)])+
0.020000000000000018 * [('x42', 1), ('z42,28', 1), ('z42,21', 1)])+
0.010000000000000009 * [('x43', 1), ('z43,30', 1), ('z43,23', 1)])+
0.98 * [('x44', -1), ('z44,25', -1), ('z44,31', -1)])+
0.99 * [('x45', 1), ('z45,25', 1), ('z45,26', 1)])+
0.010000000000000009 * [('x46', 1), ('z46,26', 1), ('z46,27', 1)])+
0.99 * [('x47', 1), ('z47,27', 1), ('z47,28', 1)])+
0.99 * [('x48', 1), ('z48,28', 1), ('z48,29', 1)])+
0.010000000000000009 * [('x49', 1), ('z49,29', 1), ('z49,30', 1)])+
0.5249999999999999 * [('x50', 1), ('z50,30', 1), ('z50,31', 1)])+
0.020000000000000018 * [('x51', 1), ('z51,25', 1), ('z51,31', 1)])+
0.99 * [('x52', 1), ('z52,27', 1), ('z52,31', 1)])+
0.99 * [('x53', -1), ('z53,29', -1), ('z53,31', -1)])+
0.99 * [('z4,1', -1), ('z5,1', -1), ('z11,1', -1)])+
0.010000000000000009 * [('z1,2', -1), ('z5,2', -1), ('z6,2', -1)])+
0.010000000000000009 * [('z6,3', 1), ('z7,3', 1), ('z12,3', 1)])+
0.010000000000000009 * [('z2,4', 1), ('z7,4', 1), ('z8,4', 1)])+
0.99 * [('z8,5', -1), ('z9,5', -1), ('z13,5', -1)])+
0.020000000000000018 * [('z14,7', -1), ('z15,7', -1), ('z21,7', -1)])+
0.99 * [('z11,8', -1), ('z15,8', -1), ('z16,8', -1)])+
0.010000000000000009 * [('z16,9', -1), ('z17,9', -1), ('z22,9', -1)])+
0.010000000000000009 * [('z12,10', -1), ('z17,10', -1), ('z18,10', -1)])+
0.010000000000000009 * [('z18,11', -1), ('z19,11', -1), ('z23,11', -1)])+
0.010000000000000009 * [('z13,12', -1), ('z19,12', -1), ('z20,12', -1)])+
0.010000000000000009 * [('z24,13', -1), ('z25,13', -1), ('z31,13', -1)])+
0.98 * [('z21,14', 1), ('z25,14', 1), ('z26,14', 1)])+
0.010000000000000009 * [('z26,15', 1), ('z27,15', 1), ('z32,15', 1)])+
0.495 * [('z22,16', 1), ('z27,16', 1), ('z28,16', 1)])+
0.99 * [('z28,17', 1), ('z29,17', 1), ('z33,17', 1)])+
0.495 * [('z23,18', 1), ('z29,18', 1), ('z30,18', 1)])+
0.010000000000000009 * [('z34,19', 1), ('z35,19', 1), ('z41,19', 1)])+
0.010000000000000009 * [('z31,20', 1), ('z35,20', 1), ('z36,20', 1)])+
0.010000000000000009 * [('z36,21', 1), ('z37,21', 1), ('z42,21', 1)])+
0.99 * [('z32,22', -1), ('z37,22', -1), ('z38,22', -1)])+
0.010000000000000009 * [('z38,23', 1), ('z39,23', 1), ('z43,23', 1)])+
0.99 * [('z33,24', -1), ('z39,24', -1), ('z40,24', -1)])+
0.010000000000000009 * [('z44,25', 1), ('z45,25', 1), ('z51,25', 1)])+
0.99 * [('z41,26', 1), ('z45,26', 1), ('z46,26', 1)])+
0.010000000000000009 * [('z46,27', 1), ('z47,27', 1), ('z52,27', 1)])+
0.010000000000000009 * [('z42,28', 1), ('z47,28', 1), ('z48,28', 1)])+
0.99 * [('z48,29', 1), ('z49,29', 1), ('z53,29', 1)])+
0.99 * [('z43,30', 1), ('z49,30', 1), ('z50,30', 1)])+
0.99 * [('x1', 1), ('x4', 1), ('x5', 1)])+
0.99 * [('x1', 1), ('x2', 1), ('x6', 1), ('x7', 1)])+
0.99 * [('x2', 1), ('x3', 1), ('x8', 1), ('x9', 1)])+
0.99 * [('x3', -1), ('x10', -1)])+
0.99 * [('x4', 1), ('x11', 1), ('x14', 1), ('x15', 1)])+
0.99 * [('x5', 1), ('x6', 1), ('x11', 1), ('x12', 1), ('x16', 1), ('x17', 1)])+
0.99 * [('x7', 1), ('x8', 1), ('x12', 1), ('x13', 1), ('x18', 1), ('x19', 1)])+
0.99 * [('x9', 1), ('x10', 1), ('x13', 1), ('x20', 1)])+
0.99 * [('x14', 1), ('x21', 1), ('x24', 1), ('x25', 1)])+
0.99 * [('x15', 1), ('x16', 1), ('x21', 1), ('x22', 1), ('x26', 1), ('x27', 1)])+
0.505 * [('x17', 1), ('x18', 1), ('x22', 1), ('x23', 1), ('x28', 1), ('x29', 1)])+
0.99 * [('x19', 1), ('x20', 1), ('x23', 1), ('x30', 1)])+
0.99 * [('x24', 1), ('x31', 1), ('x34', 1), ('x35', 1)])+
0.99 * [('x25', 1), ('x26', 1), ('x31', 1), ('x32', 1), ('x36', 1), ('x37', 1)])+
0.505 * [('x27', 1), ('x28', 1), ('x32', 1), ('x33', 1), ('x38', 1), ('x39', 1)])+
0.505 * [('x29', 1), ('x30', 1), ('x33', 1), ('x40', 1)])+
0.99 * [('x34', 1), ('x41', 1), ('x44', 1), ('x45', 1)])+
0.99 * [('x35', 1), ('x36', 1), ('x41', 1), ('x42', 1), ('x46', 1), ('x47', 1)])+
0.99 * [('x37', 1), ('x38', 1), ('x42', 1), ('x43', 1), ('x48', 1), ('x49', 1)])+
0.5050000000000001 * [('x39', 1), ('x40', 1), ('x43', 1), ('x50', 1)])+
0.99 * [('x44', 1), ('x51', 1)])+
0.99 * [('x45', 1), ('x46', 1), ('x51', 1), ('x52', 1)])+
0.020000000000000018 * [('x47', 1), ('x48', 1), ('x52', 1), ('x53', 1)])+
0.97 * [('x49', 1), ('x50', 1), ('x53', 1)])Default row names c1, c2 ... being created.

Violation: 0.5

Iteration log . . .
Iteration:     1   Dual objective     =            53.000000
New point to separate:  [('x1', 1.0), ('x2', 1.0), ('x3', 1.0), ('x5', 1.0), ('x10', 1.0), ('x11', 1.0), ('x13', 1.0), ('x14', 0.5), ('x15', 0.5), ('x19', 1.0), ('x21', 0.5), ('x22', 0.8125), ('x23', 0.1875), ('x24', 0.125), ('x25', 0.875), ('x27', 0.1875), ('x28', 1.0), ('x30', 0.8125), ('x33', 0.5), ('x34', 1.0), ('x35', 0.875), ('x36', 0.125), ('x37', 1.0), ('x39', 0.3125), ('x40', 0.6875), ('x42', 0.875), ('x44', 1.0), ('x47', 0.125), ('x49', 0.125), ('x50', 1.0), ('x51', 1.0), ('x52', 1.0), ('x53', 0.875), ('z4,1', 1.0), ('z6,2', 1.0), ('z7,3', 1.0), ('z8,4', 1.0), ('z9,5', 1.0), ('z12,10', 1.0), ('z14,7', 0.5), ('z15,7', 0.5), ('z16,8', 1.0), ('z17,9', 1.0), ('z18,11', 1.0), ('z20,12', 1.0), ('z21,14', 0.5), ('z22,16', 0.1875), ('z23,18', 0.8125), ('z24,13', 0.875), ('z25,13', 0.125), ('z26,14', 0.5), ('z26,15', 0.5), ('z27,16', 0.8125), ('z29,17', 1.0), ('z30,18', 0.1875), ('z31,20', 1.0), ('z32,22', 0.5), ('z32,15', 0.5), ('z33,24', 0.5), ('z35,19', 0.125), ('z36,21', 0.875), ('z38,22', 0.5), ('z38,23', 0.5), ('z39,23', 0.5), ('z39,24', 0.1875), ('z40,24', 0.3125), ('z41,26', 0.125), ('z41,19', 0.875), ('z42,21', 0.125), ('z43,30', 1.0), ('z45,25', 1.0), ('z46,26', 0.875), ('z46,27', 0.125), ('z47,27', 0.875), ('z48,28', 1.0), ('z49,29', 0.875), ('z53,29', 0.125)]
Objective value:  53.0
Default row names c1, c2 ... being created.
Finding a cutting plane...
Found incumbent of value 0.000000 after 0.00 sec. (0.01 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 1 rows and 123 columns.
Reduced MIP has 78 rows, 245 columns, and 415 nonzeros.
Reduced MIP has 0 binaries, 78 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.31 ticks)
Tried aggregator 1 time.
Reduced MIP has 78 rows, 245 columns, and 415 nonzeros.
Reduced MIP has 0 binaries, 78 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.20 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.00 sec. (0.22 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      202.0000              --- 
      0     0        0.9900    29        0.0000        0.9900      101     --- 
      0     0        0.9900     7        0.0000      Cuts: 87      127     --- 
      0     0        0.9900     1        0.0000   MIRcuts: 13      130     --- 
      0     2        0.9900     1        0.0000        0.9900      130     --- 
Elapsed time = 0.02 sec. (5.26 ticks, tree = 0.01 MB, solutions = 1)
*   477+  322                            0.5000        0.9900            98.00%
   3161  2710        0.9900    22        0.5000        0.9900     6263   98.00%
   4861   996        0.9350    10        0.5000        0.9900     8870   98.00%
  10558  4508        0.9750     6        0.5000        0.9900    21216   98.00%
  23676 11824        0.8900     8        0.5000        0.9900    55724   98.00%
  35297 19293        0.9500    11        0.5000        0.9900    88658   98.00%
  50197 25622        0.7375     8        0.5000        0.9900   118346   98.00%
  64461 34930        0.9806     7        0.5000        0.9900   167752   98.00%
  78014 40467        0.9750     8        0.5000        0.9900   197708   98.00%
  91054 48991        0.6669     7        0.5000        0.9900   237796   98.00%

Mixed integer rounding cuts applied:  13
Gomory fractional cuts applied:  16

Root node processing (before b&c):
  Real time             =    0.02 sec. (5.18 ticks)
Parallel b&c, 4 threads:
  Real time             =    7.51 sec. (2465.93 ticks)
  Sync time (average)   =    0.87 sec.
  Wait time (average)   =    0.33 sec.
                          ------------
Total (root+branch&cut) =    7.53 sec. (2471.11 ticks)
Variables that need flooring, and amount to floor: [('x4', 0.99), ('x6', 0.98), ('x7', 0.9899999999999793), ('x8', 0.9899999999999793), ('x9', 0.99), ('x12', 0.9799999999999791), ('x16', 0.47), ('x17', 0.98), ('x18', 0.9699999999999793), ('x20', 0.9699999999999998), ('x26', 0.5), ('x29', 0.9699999999999998), ('x31', 0.99), ('x43', 0.9699999999999998), ('x45', 0.9699999999999998), ('x48', 0.99), ('z1,2', 0.020000000000000018), ('z1,31', 0.020000000000000018), ('z2,4', 0.010000000000000009), ('z2,31', 0.020000000000000018), ('z4,31', 0.010000000000000009), ('z5,1', 0.010000000000000009), ('z5,2', 0.020000000000000018), ('z6,3', 0.99), ('z9,6', 0.010000000000000009), ('z11,8', 0.030000000000000027), ('z11,1', 0.010000000000000009), ('z12,3', 0.99), ('z13,12', 0.030000000000020788), ('z13,5', 0.01000000000002077), ('z14,31', 0.52), ('z15,8', 0.53), ('z16,9', 0.99), ('z18,10', 0.99), ('z19,11', 0.030000000000020788), ('z19,12', 0.030000000000020788), ('z20,31', 0.99), ('z21,7', 0.5), ('z22,9', 0.52), ('z23,11', 0.030000000000000027), ('z24,31', 0.52), ('z25,14', 0.5), ('z27,15', 0.5), ('z28,16', 0.5), ('z28,17', 0.030000000000000027), ('z29,18', 0.97), ('z30,31', 0.02000000000000002), ('z31,13', 0.49), ('z33,17', 0.030000000000000027), ('z34,31', 0.020000000000000018), ('z35,20', 0.010000000000000009), ('z36,20', 0.010000000000000009), ('z40,31', 0.020000000000000018), ('z42,28', 0.010000000000000009), ('z43,23', 0.97), ('z44,25', 0.030000000000000027), ('z44,31', 0.020000000000000018), ('z45,26', 0.97), ('z47,28', 0.010000000000000009), ('z48,29', 0.020000000000000018), ('z50,31', 0.99), ('z51,25', 0.030000000000000027), ('z51,31', 0.020000000000000018), ('z52,31', 0.020000000000000018), ('z53,31', 0.99)]
Found cutting plane:  [('x1', 2), ('x2', 2), ('x5', 1), ('x6', 1), ('x7', 1), ('x8', 1), ('x11', 2), ('x12', 1), ('x13', 2), ('x14', 2), ('x15', 2), ('x16', 1), ('x17', 1), ('x18', 2), ('x19', 1), ('x20', 2), ('x22', 2), ('x23', 2), ('x24', 2), ('x25', 2), ('x27', 2), ('x28', 2), ('x29', 2), ('x30', 2), ('x31', 1), ('x32', 1), ('x33', 2), ('x34', 2), ('x35', 2), ('x36', 2), ('x37', 2), ('x38', 2), ('x39', 2), ('x40', 2), ('x41', 2), ('x42', 2), ('x43', 2), ('x44', 2), ('x45', 2), ('x46', 1), ('x47', 2), ('x48', 1), ('x49', 2), ('x50', 2), ('x51', 2), ('x52', 2), ('x53', 2), ('z2,4', 1), ('z4,1', -1), ('z4,31', -1), ('z5,1', -1), ('z5,2', -1), ('z7,3', 1), ('z7,4', 1), ('z8,4', 1), ('z9,5', -1), ('z9,6', -1), ('z11,8', -1), ('z15,8', -1), ('z16,8', -1), ('z16,9', -1), ('z18,11', 1), ('z19,11', -1), ('z19,12', -1), ('z20,12', 1), ('z21,7', -2), ('z25,14', 1), ('z26,15', -1), ('z28,16', -1), ('z29,17', 1), ('z31,20', 1), ('z31,13', -1), ('z32,15', -1), ('z34,19', 1), ('z35,19', 1), ('z35,20', 1), ('z36,20', 1), ('z37,22', 1), ('z38,22', 1), ('z38,23', 1), ('z39,23', 1), ('z41,26', 1), ('z41,19', 1), ('z42,28', 1), ('z43,30', 1), ('z43,23', 1), ('z45,25', 1), ('z45,26', 1), ('z46,27', -1), ('z47,28', 1), ('z48,28', 1), ('z48,29', -1), ('z49,30', 1), ('z50,30', 1)]
Found cutting plane: <= 48.0
Linear combination is: 
0.020000000000000018 * [('x1', 1), ('z1,2', 1), ('z1,31', 1)])+
0.020000000000000018 * [('x2', 1), ('z2,4', 1), ('z2,31', 1)])+
0.99 * [('x4', -1), ('z4,1', -1), ('z4,31', -1)])+
0.98 * [('x5', -1), ('z5,1', -1), ('z5,2', -1)])+
0.010000000000000009 * [('x7', 1), ('z7,3', 1), ('z7,4', 1)])+
0.010000000000000009 * [('x8', 1), ('z8,4', 1), ('z8,5', 1)])+
0.99 * [('x9', -1), ('z9,5', -1), ('z9,6', -1)])+
0.020000000000000018 * [('x11', 1), ('z11,8', 1), ('z11,1', 1)])+
0.02000000000002078 * [('x13', 1), ('z13,12', 1), ('z13,5', 1)])+
0.52 * [('x14', 1), ('z14,7', 1), ('z14,31', 1)])+
0.52 * [('x15', 1), ('z15,7', 1), ('z15,8', 1)])+
0.010000000000000009 * [('x16', -1), ('z16,8', -1), ('z16,9', -1)])+
0.99 * [('x18', 1), ('z18,10', 1), ('z18,11', 1)])+
0.9799999999999792 * [('x19', -1), ('z19,11', -1), ('z19,12', -1)])+
0.99 * [('x20', 1), ('z20,12', 1), ('z20,31', 1)])+
0.98 * [('x21', -1), ('z21,14', -1), ('z21,7', -1)])+
0.52 * [('x22', 1), ('z22,16', 1), ('z22,9', 1)])+
0.020000000000000018 * [('x23', 1), ('z23,18', 1), ('z23,11', 1)])+
0.52 * [('x24', 1), ('z24,13', 1), ('z24,31', 1)])+
0.52 * [('x25', 1), ('z25,13', 1), ('z25,14', 1)])+
0.98 * [('x26', -1), ('z26,14', -1), ('z26,15', -1)])+
0.52 * [('x27', 1), ('z27,15', 1), ('z27,16', 1)])+
0.020000000000000018 * [('x28', 1), ('z28,16', 1), ('z28,17', 1)])+
0.99 * [('x29', 1), ('z29,17', 1), ('z29,18', 1)])+
0.02000000000000002 * [('x30', 1), ('z30,18', 1), ('z30,31', 1)])+
0.010000000000000009 * [('x31', 1), ('z31,20', 1), ('z31,13', 1)])+
0.98 * [('x32', -1), ('z32,22', -1), ('z32,15', -1)])+
0.020000000000000018 * [('x33', 1), ('z33,24', 1), ('z33,17', 1)])+
0.020000000000000018 * [('x34', 1), ('z34,19', 1), ('z34,31', 1)])+
0.020000000000000018 * [('x35', 1), ('z35,19', 1), ('z35,20', 1)])+
0.020000000000000018 * [('x36', 1), ('z36,20', 1), ('z36,21', 1)])+
0.020000000000000018 * [('x37', 1), ('z37,21', 1), ('z37,22', 1)])+
0.020000000000000018 * [('x38', 1), ('z38,22', 1), ('z38,23', 1)])+
0.020000000000000018 * [('x39', 1), ('z39,23', 1), ('z39,24', 1)])+
0.020000000000000018 * [('x40', 1), ('z40,24', 1), ('z40,31', 1)])+
0.020000000000000018 * [('x41', 1), ('z41,26', 1), ('z41,19', 1)])+
0.020000000000000018 * [('x42', 1), ('z42,28', 1), ('z42,21', 1)])+
0.99 * [('x43', 1), ('z43,30', 1), ('z43,23', 1)])+
0.020000000000000018 * [('x44', 1), ('z44,25', 1), ('z44,31', 1)])+
0.99 * [('x45', 1), ('z45,25', 1), ('z45,26', 1)])+
0.98 * [('x46', -1), ('z46,26', -1), ('z46,27', -1)])+
0.020000000000000018 * [('x47', 1), ('z47,27', 1), ('z47,28', 1)])+
0.010000000000000009 * [('x48', 1), ('z48,28', 1), ('z48,29', 1)])+
0.99 * [('x49', 1), ('z49,29', 1), ('z49,30', 1)])+
0.99 * [('x50', 1), ('z50,30', 1), ('z50,31', 1)])+
0.020000000000000018 * [('x51', 1), ('z51,25', 1), ('z51,31', 1)])+
0.020000000000000018 * [('x52', 1), ('z52,27', 1), ('z52,31', 1)])+
0.99 * [('x53', 1), ('z53,29', 1), ('z53,31', 1)])+
0.010000000000000009 * [('z4,1', -1), ('z5,1', -1), ('z11,1', -1)])+
0.99 * [('z6,3', 1), ('z7,3', 1), ('z12,3', 1)])+
0.99 * [('z2,4', 1), ('z7,4', 1), ('z8,4', 1)])+
0.010000000000000009 * [('z8,5', -1), ('z9,5', -1), ('z13,5', -1)])+
0.52 * [('z14,7', -1), ('z15,7', -1), ('z21,7', -1)])+
0.99 * [('z11,8', -1), ('z15,8', -1), ('z16,8', -1)])+
0.010000000000000009 * [('z18,11', 1), ('z19,11', 1), ('z23,11', 1)])+
0.010000000000000009 * [('z13,12', 1), ('z19,12', 1), ('z20,12', 1)])+
0.52 * [('z24,13', -1), ('z25,13', -1), ('z31,13', -1)])+
0.98 * [('z21,14', 1), ('z25,14', 1), ('z26,14', 1)])+
0.020000000000000018 * [('z26,15', -1), ('z27,15', -1), ('z32,15', -1)])+
0.52 * [('z22,16', -1), ('z27,16', -1), ('z28,16', -1)])+
0.010000000000000009 * [('z28,17', 1), ('z29,17', 1), ('z33,17', 1)])+
0.02000000000000002 * [('z23,18', -1), ('z29,18', -1), ('z30,18', -1)])+
0.98 * [('z34,19', 1), ('z35,19', 1), ('z41,19', 1)])+
0.99 * [('z31,20', 1), ('z35,20', 1), ('z36,20', 1)])+
0.020000000000000018 * [('z36,21', -1), ('z37,21', -1), ('z42,21', -1)])+
0.98 * [('z32,22', 1), ('z37,22', 1), ('z38,22', 1)])+
0.98 * [('z38,23', 1), ('z39,23', 1), ('z43,23', 1)])+
0.020000000000000018 * [('z33,24', -1), ('z39,24', -1), ('z40,24', -1)])+
0.010000000000000009 * [('z44,25', 1), ('z45,25', 1), ('z51,25', 1)])+
0.98 * [('z41,26', 1), ('z45,26', 1), ('z46,26', 1)])+
0.020000000000000018 * [('z46,27', -1), ('z47,27', -1), ('z52,27', -1)])+
0.99 * [('z42,28', 1), ('z47,28', 1), ('z48,28', 1)])+
0.99 * [('z48,29', -1), ('z49,29', -1), ('z53,29', -1)])+
0.010000000000000009 * [('z43,30', 1), ('z49,30', 1), ('z50,30', 1)])+
0.99 * [('x1', 1), ('x4', 1), ('x5', 1)])+
0.99 * [('x1', 1), ('x2', 1), ('x6', 1), ('x7', 1)])+
0.99 * [('x2', 1), ('x3', 1), ('x8', 1), ('x9', 1)])+
0.99 * [('x3', -1), ('x10', -1)])+
0.99 * [('x4', 1), ('x11', 1), ('x14', 1), ('x15', 1)])+
0.99 * [('x5', 1), ('x6', 1), ('x11', 1), ('x12', 1), ('x16', 1), ('x17', 1)])+
0.9899999999999792 * [('x7', 1), ('x8', 1), ('x12', 1), ('x13', 1), ('x18', 1), ('x19', 1)])+
0.99 * [('x9', 1), ('x10', 1), ('x13', 1), ('x20', 1)])+
0.49 * [('x14', 1), ('x21', 1), ('x24', 1), ('x25', 1)])+
0.49 * [('x15', 1), ('x16', 1), ('x21', 1), ('x22', 1), ('x26', 1), ('x27', 1)])+
0.99 * [('x17', 1), ('x18', 1), ('x22', 1), ('x23', 1), ('x28', 1), ('x29', 1)])+
0.99 * [('x19', 1), ('x20', 1), ('x23', 1), ('x30', 1)])+
0.99 * [('x24', 1), ('x31', 1), ('x34', 1), ('x35', 1)])+
0.99 * [('x25', 1), ('x26', 1), ('x31', 1), ('x32', 1), ('x36', 1), ('x37', 1)])+
0.99 * [('x27', 1), ('x28', 1), ('x32', 1), ('x33', 1), ('x38', 1), ('x39', 1)])+
0.99 * [('x29', 1), ('x30', 1), ('x33', 1), ('x40', 1)])+
0.99 * [('x34', 1), ('x41', 1), ('x44', 1), ('x45', 1)])+
0.99 * [('x35', 1), ('x36', 1), ('x41', 1), ('x42', 1), ('x46', 1), ('x47', 1)])+
0.99 * [('x37', 1), ('x38', 1), ('x42', 1), ('x43', 1), ('x48', 1), ('x49', 1)])+
0.99 * [('x39', 1), ('x40', 1), ('x43', 1), ('x50', 1)])+
0.99 * [('x44', 1), ('x51', 1)])+
0.99 * [('x45', 1), ('x46', 1), ('x51', 1), ('x52', 1)])+
0.99 * [('x47', 1), ('x48', 1), ('x52', 1), ('x53', 1)])+
0.020000000000000018 * [('x49', 1), ('x50', 1), ('x53', 1)])Default row names c1, c2 ... being created.

Violation: 0.5

Iteration log . . .
Iteration:     1   Dual objective     =            53.000000
New point to separate:  [('x1', 1.0), ('x2', 0.9230769230769231), ('x3', 1.0), ('x4', 0.07692307692307687), ('x5', 0.9230769230769231), ('x6', 0.07692307692307687), ('x8', 0.07692307692307687), ('x10', 1.0), ('x11', 0.9230769230769231), ('x13', 0.9230769230769231), ('x14', 0.46153846153846156), ('x15', 0.5384615384615384), ('x17', 0.07692307692307687), ('x18', 0.07692307692307687), ('x19', 0.9230769230769231), ('x20', 0.07692307692307687), ('x21', 0.5384615384615384), ('x22', 0.7403846153846159), ('x23', 0.1057692307692304), ('x24', 0.019230769230769384), ('x25', 0.9807692307692306), ('x27', 0.18269230769230727), ('x28', 1.0), ('x30', 0.8942307692307696), ('x33', 0.46153846153846156), ('x34', 1.0), ('x35', 0.9807692307692306), ('x36', 0.019230769230769384), ('x37', 1.0), ('x39', 0.35576923076923117), ('x40', 0.6442307692307688), ('x42', 0.9807692307692306), ('x44', 1.0), ('x47', 0.019230769230769384), ('x49', 0.019230769230769384), ('x50', 1.0), ('x51', 1.0), ('x52', 1.0), ('x53', 0.9807692307692306), ('z2,4', 0.07692307692307687), ('z4,1', 0.9230769230769231), ('z5,2', 0.07692307692307687), ('z6,2', 0.9230769230769231), ('z7,3', 1.0), ('z8,4', 0.9230769230769231), ('z9,5', 1.0), ('z11,1', 0.07692307692307687), ('z12,10', 1.0), ('z13,12', 0.07692307692307687), ('z14,7', 0.5384615384615384), ('z15,7', 0.46153846153846156), ('z16,8', 1.0), ('z17,9', 0.9230769230769231), ('z18,11', 0.9230769230769231), ('z19,11', 0.07692307692307687), ('z20,12', 0.9230769230769231), ('z21,14', 0.46153846153846156), ('z22,16', 0.18269230769230727), ('z22,9', 0.07692307692307687), ('z23,18', 0.8942307692307696), ('z24,13', 0.9807692307692306), ('z25,13', 0.019230769230769384), ('z26,14', 0.5384615384615384), ('z26,15', 0.46153846153846156), ('z27,16', 0.8173076923076927), ('z29,17', 1.0), ('z30,18', 0.1057692307692304), ('z31,20', 1.0), ('z32,22', 0.46153846153846156), ('z32,15', 0.5384615384615384), ('z33,24', 0.5384615384615384), ('z35,19', 0.019230769230769384), ('z36,21', 0.9807692307692306), ('z38,22', 0.5384615384615384), ('z38,23', 0.46153846153846156), ('z39,23', 0.5384615384615384), ('z39,24', 0.1057692307692304), ('z40,24', 0.35576923076923117), ('z41,26', 0.019230769230769384), ('z41,19', 0.9807692307692306), ('z42,21', 0.019230769230769384), ('z43,30', 1.0), ('z45,25', 1.0), ('z46,26', 0.9807692307692306), ('z46,27', 0.019230769230769384), ('z47,27', 0.9807692307692306), ('z48,28', 1.0), ('z49,29', 0.9807692307692306), ('z53,29', 0.019230769230769384)]
Objective value:  53.0
Default row names c1, c2 ... being created.
Finding a cutting plane...
Found incumbent of value 0.000000 after 0.00 sec. (0.01 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 1 rows and 118 columns.
Reduced MIP has 90 rows, 275 columns, and 481 nonzeros.
Reduced MIP has 0 binaries, 90 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.35 ticks)
Tried aggregator 1 time.
Reduced MIP has 90 rows, 275 columns, and 481 nonzeros.
Reduced MIP has 0 binaries, 90 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.22 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.00 sec. (0.25 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      202.0000              --- 
      0     0        0.9900    39        0.0000        0.9900      123     --- 
      0     0        0.9900     9        0.0000     Cuts: 117      151     --- 
      0     0        0.9900     6        0.0000   MIRcuts: 14      159     --- 
      0     0        0.9900     5        0.0000   MIRcuts: 10      163     --- 
      0     0        0.9900     5        0.0000    MIRcuts: 5      164     --- 
      0     2        0.9900     5        0.0000        0.9900      164     --- 
Elapsed time = 0.02 sec. (8.71 ticks, tree = 0.01 MB, solutions = 1)
*    26+   10                            0.5385        0.9900            83.86%
   4434  2938        0.9900    18        0.5385        0.9900    13626   83.86%
   5734   749        0.8996     5        0.5385        0.9900    15737   83.86%
   9906  4115    infeasible              0.5385        0.9900    24885   83.86%
  21960 10947        0.6295     4        0.5385        0.9900    45213   83.86%
  33709 21203        0.9863     4        0.5385        0.9900    79138   83.86%
  47678 29140        0.9540     6        0.5385        0.9900   108793   83.86%
  61779 35344        0.9812     6        0.5385        0.9900   132608   83.86%
  75078 45035        0.9885     5        0.5385        0.9900   170989   83.86%
  87074 54046        0.9877     5        0.5385        0.9900   205155   83.86%

Mixed integer rounding cuts applied:  29
Gomory fractional cuts applied:  15

Root node processing (before b&c):
  Real time             =    0.02 sec. (8.61 ticks)
Parallel b&c, 4 threads:
  Real time             =    6.31 sec. (2684.34 ticks)
  Sync time (average)   =    0.45 sec.
  Wait time (average)   =    0.32 sec.
                          ------------
Total (root+branch&cut) =    6.34 sec. (2692.95 ticks)
Variables that need flooring, and amount to floor: [('x7', 0.5050000000000212), ('x9', 0.49499999999997857), ('x12', 0.5050000000000214), ('x16', 0.7575000000000316), ('x26', 0.9900000000000209), ('x29', 0.5050000000000214), ('x31', 0.9699999999999998), ('x32', 0.4849999999999999), ('x38', 0.4850000000000003), ('x43', 0.5049999999999999), ('x45', 0.99), ('x48', 0.99), ('z1,31', 0.48499999999997856), ('z2,31', 0.99), ('z4,31', 0.2524999999999893), ('z5,1', 0.23249999999998927), ('z6,3', 0.49499999999997857), ('z9,6', 0.99), ('z11,8', 0.2624999999999893), ('z14,31', 0.020000000000000018), ('z15,8', 0.030000000000000027), ('z16,9', 0.5050000000000214), ('z17,10', 0.49499999999997857), ('z18,10', 0.49499999999997857), ('z19,12', 0.49499999999997857), ('z20,31', 0.99), ('z21,7', 0.98), ('z24,31', 0.020000000000000018), ('z25,14', 0.030000000000000027), ('z27,15', 0.4949999999999791), ('z28,16', 0.25250000000001016), ('z28,17', 0.7474999999999894), ('z29,18', 0.5050000000000214), ('z30,31', 0.48499999999997856), ('z31,13', 0.97), ('z33,17', 0.7474999999999893), ('z34,31', 0.020000000000000018), ('z35,20', 0.030000000000000027), ('z36,20', 0.030000000000000027), ('z37,22', 0.030000000000000027), ('z40,31', 0.7374999999999893), ('z42,28', 0.010000000000000009), ('z43,23', 0.020000000000000018), ('z44,25', 0.010000000000000009), ('z44,31', 0.020000000000000018), ('z45,26', 0.99), ('z47,28', 0.010000000000000009), ('z48,29', 0.99), ('z49,30', 0.010000000000000009), ('z50,30', 0.4950000000000001), ('z50,31', 0.505), ('z51,25', 0.010000000000000009), ('z51,31', 0.020000000000000018), ('z52,31', 0.020000000000000018), ('z53,31', 0.020000000000000018)]
Found cutting plane:  [('x1', 2), ('x2', 2), ('x4', 2), ('x5', 2), ('x6', 2), ('x7', 2), ('x8', 2), ('x11', 2), ('x12', 1), ('x13', 2), ('x14', 2), ('x16', -1), ('x17', 2), ('x18', 2), ('x19', 2), ('x20', 2), ('x23', 2), ('x24', 2), ('x25', 2), ('x28', 1), ('x29', 1), ('x30', 2), ('x31', 2), ('x32', 2), ('x33', 2), ('x34', 2), ('x35', 2), ('x36', 2), ('x37', 2), ('x38', 2), ('x39', 2), ('x40', 2), ('x41', 2), ('x42', 2), ('x43', 1), ('x44', 2), ('x45', 1), ('x46', 2), ('x47', 2), ('x48', 1), ('x49', 2), ('x50', 2), ('x51', 2), ('x52', 1), ('x53', 2), ('z7,3', 1), ('z9,5', -1), ('z9,6', -1), ('z11,8', -1), ('z12,10', -1), ('z15,8', -1), ('z16,8', -1), ('z16,9', -1), ('z17,10', -1), ('z18,10', -1), ('z19,12', -1), ('z21,14', -1), ('z21,7', -1), ('z25,14', -1), ('z27,15', -1), ('z28,16', -1), ('z28,17', -2), ('z29,17', -1), ('z29,18', -1), ('z31,20', 1), ('z32,22', 1), ('z33,17', -1), ('z38,22', 1), ('z38,23', 1), ('z39,23', 1), ('z41,26', 1), ('z42,28', 1), ('z43,30', 1), ('z44,25', 1), ('z45,25', 1), ('z46,26', 1), ('z47,28', 1), ('z48,28', 1), ('z48,29', -1), ('z49,30', 1), ('z50,30', 1), ('z51,25', 1), ('z52,27', -1), ('z52,31', -1)]
Found cutting plane: <= 41.0
Linear combination is: 
0.48499999999997856 * [('x1', 1), ('z1,2', 1), ('z1,31', 1)])+
0.99 * [('x2', 1), ('z2,4', 1), ('z2,31', 1)])+
0.2524999999999893 * [('x4', 1), ('z4,1', 1), ('z4,31', 1)])+
0.48499999999997856 * [('x5', 1), ('z5,1', 1), ('z5,2', 1)])+
0.48499999999997856 * [('x6', 1), ('z6,2', 1), ('z6,3', 1)])+
0.99 * [('x7', 1), ('z7,3', 1), ('z7,4', 1)])+
0.99 * [('x8', 1), ('z8,4', 1), ('z8,5', 1)])+
0.010000000000000009 * [('x9', -1), ('z9,5', -1), ('z9,6', -1)])+
0.2524999999999893 * [('x11', 1), ('z11,8', 1), ('z11,1', 1)])+
0.010000000000000009 * [('x12', -1), ('z12,10', -1), ('z12,3', -1)])+
0.99 * [('x13', 1), ('z13,12', 1), ('z13,5', 1)])+
0.020000000000000018 * [('x14', 1), ('z14,7', 1), ('z14,31', 1)])+
0.020000000000000018 * [('x15', 1), ('z15,7', 1), ('z15,8', 1)])+
0.010000000000000009 * [('x16', -1), ('z16,8', -1), ('z16,9', -1)])+
0.48499999999997856 * [('x17', 1), ('z17,9', 1), ('z17,10', 1)])+
0.48499999999997856 * [('x18', 1), ('z18,10', 1), ('z18,11', 1)])+
0.48499999999997856 * [('x19', 1), ('z19,11', 1), ('z19,12', 1)])+
0.99 * [('x20', 1), ('z20,12', 1), ('z20,31', 1)])+
0.48499999999997856 * [('x22', 1), ('z22,16', 1), ('z22,9', 1)])+
0.48499999999997856 * [('x23', 1), ('z23,18', 1), ('z23,11', 1)])+
0.020000000000000018 * [('x24', 1), ('z24,13', 1), ('z24,31', 1)])+
0.020000000000000018 * [('x25', 1), ('z25,13', 1), ('z25,14', 1)])+
0.99 * [('x26', 1), ('z26,14', 1), ('z26,15', 1)])+
0.4849999999999791 * [('x27', 1), ('z27,15', 1), ('z27,16', 1)])+
0.2625000000000107 * [('x28', -1), ('z28,16', -1), ('z28,17', -1)])+
0.010000000000000009 * [('x29', -1), ('z29,17', -1), ('z29,18', -1)])+
0.48499999999997856 * [('x30', 1), ('z30,18', 1), ('z30,31', 1)])+
0.99 * [('x31', 1), ('z31,20', 1), ('z31,13', 1)])+
0.99 * [('x32', 1), ('z32,22', 1), ('z32,15', 1)])+
0.7374999999999893 * [('x33', 1), ('z33,24', 1), ('z33,17', 1)])+
0.020000000000000018 * [('x34', 1), ('z34,19', 1), ('z34,31', 1)])+
0.020000000000000018 * [('x35', 1), ('z35,19', 1), ('z35,20', 1)])+
0.020000000000000018 * [('x36', 1), ('z36,20', 1), ('z36,21', 1)])+
0.020000000000000018 * [('x37', 1), ('z37,21', 1), ('z37,22', 1)])+
0.99 * [('x38', 1), ('z38,22', 1), ('z38,23', 1)])+
0.99 * [('x39', 1), ('z39,23', 1), ('z39,24', 1)])+
0.7374999999999893 * [('x40', 1), ('z40,24', 1), ('z40,31', 1)])+
0.020000000000000018 * [('x41', 1), ('z41,26', 1), ('z41,19', 1)])+
0.020000000000000018 * [('x42', 1), ('z42,28', 1), ('z42,21', 1)])+
0.010000000000000009 * [('x43', 1), ('z43,30', 1), ('z43,23', 1)])+
0.020000000000000018 * [('x44', 1), ('z44,25', 1), ('z44,31', 1)])+
0.010000000000000009 * [('x45', 1), ('z45,25', 1), ('z45,26', 1)])+
0.020000000000000018 * [('x46', 1), ('z46,26', 1), ('z46,27', 1)])+
0.020000000000000018 * [('x47', 1), ('z47,27', 1), ('z47,28', 1)])+
0.010000000000000009 * [('x48', 1), ('z48,28', 1), ('z48,29', 1)])+
0.020000000000000018 * [('x49', 1), ('z49,29', 1), ('z49,30', 1)])+
0.505 * [('x50', 1), ('z50,30', 1), ('z50,31', 1)])+
0.020000000000000018 * [('x51', 1), ('z51,25', 1), ('z51,31', 1)])+
0.98 * [('x52', -1), ('z52,27', -1), ('z52,31', -1)])+
0.020000000000000018 * [('x53', 1), ('z53,29', 1), ('z53,31', 1)])+
0.2524999999999893 * [('z4,1', -1), ('z5,1', -1), ('z11,1', -1)])+
0.48499999999997856 * [('z1,2', -1), ('z5,2', -1), ('z6,2', -1)])+
0.010000000000000009 * [('z6,3', 1), ('z7,3', 1), ('z12,3', 1)])+
0.99 * [('z2,4', -1), ('z7,4', -1), ('z8,4', -1)])+
0.99 * [('z8,5', -1), ('z9,5', -1), ('z13,5', -1)])+
0.020000000000000018 * [('z14,7', -1), ('z15,7', -1), ('z21,7', -1)])+
0.99 * [('z11,8', -1), ('z15,8', -1), ('z16,8', -1)])+
0.48499999999997856 * [('z16,9', -1), ('z17,9', -1), ('z22,9', -1)])+
0.99 * [('z12,10', -1), ('z17,10', -1), ('z18,10', -1)])+
0.48499999999997856 * [('z18,11', -1), ('z19,11', -1), ('z23,11', -1)])+
0.99 * [('z13,12', -1), ('z19,12', -1), ('z20,12', -1)])+
0.020000000000000018 * [('z24,13', -1), ('z25,13', -1), ('z31,13', -1)])+
0.99 * [('z21,14', -1), ('z25,14', -1), ('z26,14', -1)])+
0.99 * [('z26,15', -1), ('z27,15', -1), ('z32,15', -1)])+
0.4849999999999791 * [('z22,16', -1), ('z27,16', -1), ('z28,16', -1)])+
0.99 * [('z28,17', -1), ('z29,17', -1), ('z33,17', -1)])+
0.48499999999997856 * [('z23,18', -1), ('z29,18', -1), ('z30,18', -1)])+
0.020000000000000018 * [('z34,19', -1), ('z35,19', -1), ('z41,19', -1)])+
0.010000000000000009 * [('z31,20', 1), ('z35,20', 1), ('z36,20', 1)])+
0.020000000000000018 * [('z36,21', -1), ('z37,21', -1), ('z42,21', -1)])+
0.010000000000000009 * [('z32,22', 1), ('z37,22', 1), ('z38,22', 1)])+
0.010000000000000009 * [('z38,23', 1), ('z39,23', 1), ('z43,23', 1)])+
0.7374999999999893 * [('z33,24', -1), ('z39,24', -1), ('z40,24', -1)])+
0.99 * [('z44,25', 1), ('z45,25', 1), ('z51,25', 1)])+
0.98 * [('z41,26', 1), ('z45,26', 1), ('z46,26', 1)])+
0.020000000000000018 * [('z46,27', -1), ('z47,27', -1), ('z52,27', -1)])+
0.99 * [('z42,28', 1), ('z47,28', 1), ('z48,28', 1)])+
0.020000000000000018 * [('z48,29', -1), ('z49,29', -1), ('z53,29', -1)])+
0.99 * [('z43,30', 1), ('z49,30', 1), ('z50,30', 1)])+
0.7575000000000107 * [('x1', 1), ('x4', 1), ('x5', 1)])+
0.7575000000000107 * [('x1', 1), ('x2', 1), ('x6', 1), ('x7', 1)])+
0.2524999999999893 * [('x2', 1), ('x3', 1), ('x8', 1), ('x9', 1)])+
0.2524999999999893 * [('x3', -1), ('x10', -1)])+
0.99 * [('x4', 1), ('x11', 1), ('x14', 1), ('x15', 1)])+
0.7575000000000107 * [('x5', 1), ('x6', 1), ('x11', 1), ('x12', 1), ('x16', 1), ('x17', 1)])+
0.7575000000000107 * [('x7', 1), ('x8', 1), ('x12', 1), ('x13', 1), ('x18', 1), ('x19', 1)])+
0.2524999999999893 * [('x9', 1), ('x10', 1), ('x13', 1), ('x20', 1)])+
0.99 * [('x14', 1), ('x21', 1), ('x24', 1), ('x25', 1)])+
0.9899999999999791 * [('x15', -1), ('x16', -1), ('x21', -1), ('x22', -1), ('x26', -1), ('x27', -1)])+
0.7575000000000107 * [('x17', 1), ('x18', 1), ('x22', 1), ('x23', 1), ('x28', 1), ('x29', 1)])+
0.7575000000000107 * [('x19', 1), ('x20', 1), ('x23', 1), ('x30', 1)])+
0.99 * [('x24', 1), ('x31', 1), ('x34', 1), ('x35', 1)])+
0.99 * [('x25', 1), ('x26', 1), ('x31', 1), ('x32', 1), ('x36', 1), ('x37', 1)])+
0.505 * [('x27', 1), ('x28', 1), ('x32', 1), ('x33', 1), ('x38', 1), ('x39', 1)])+
0.7575000000000107 * [('x29', 1), ('x30', 1), ('x33', 1), ('x40', 1)])+
0.99 * [('x34', 1), ('x41', 1), ('x44', 1), ('x45', 1)])+
0.99 * [('x35', 1), ('x36', 1), ('x41', 1), ('x42', 1), ('x46', 1), ('x47', 1)])+
0.99 * [('x37', 1), ('x38', 1), ('x42', 1), ('x43', 1), ('x48', 1), ('x49', 1)])+
0.505 * [('x39', 1), ('x40', 1), ('x43', 1), ('x50', 1)])+
0.99 * [('x44', 1), ('x51', 1)])+
0.99 * [('x45', 1), ('x46', 1), ('x51', 1), ('x52', 1)])+
0.99 * [('x47', 1), ('x48', 1), ('x52', 1), ('x53', 1)])+
0.99 * [('x49', 1), ('x50', 1), ('x53', 1)])Default row names c1, c2 ... being created.

Violation: 0.5384615384615401

Iteration log . . .
Iteration:     1   Dual objective     =            53.000000
Perturbation started.
Iteration:    51   Dual objective     =            53.000000
Removing perturbation.
New point to separate:  [('x1', 1.0), ('x2', 1.0), ('x3', 1.0), ('x5', 1.0), ('x10', 1.0), ('x11', 1.0), ('x13', 1.0), ('x14', 0.5), ('x15', 0.5), ('x18', 0.125), ('x19', 0.875), ('x21', 0.5), ('x22', 1.0), ('x23', 0.125), ('x25', 1.0), ('x28', 0.75), ('x30', 1.0), ('x33', 0.625), ('x34', 1.0), ('x35', 1.0), ('x36', 0.125), ('x37', 0.875), ('x39', 0.625), ('x40', 0.375), ('x42', 0.875), ('x43', 0.125), ('x44', 1.0), ('x49', 0.125), ('x50', 0.875), ('x51', 1.0), ('x52', 1.0), ('x53', 1.0), ('z4,1', 1.0), ('z6,2', 1.0), ('z7,3', 1.0), ('z8,4', 1.0), ('z9,5', 1.0), ('z12,10', 1.0), ('z14,7', 0.5), ('z15,7', 0.5), ('z16,8', 1.0), ('z17,9', 1.0), ('z18,11', 0.875), ('z19,11', 0.125), ('z20,12', 1.0), ('z21,14', 0.5), ('z23,18', 0.875), ('z24,13', 1.0), ('z26,14', 0.5), ('z26,15', 0.5), ('z27,15', 0.125), ('z27,16', 0.875), ('z28,16', 0.125), ('z28,17', 0.125), ('z29,17', 0.875), ('z29,18', 0.125), ('z31,20', 1.0), ('z32,22', 0.625), ('z32,15', 0.375), ('z33,24', 0.375), ('z36,21', 0.875), ('z37,21', 0.125), ('z38,22', 0.375), ('z38,23', 0.625), ('z39,23', 0.375), ('z40,24', 0.625), ('z41,19', 1.0), ('z42,28', 0.125), ('z43,30', 0.875), ('z45,25', 1.0), ('z46,26', 1.0), ('z47,27', 1.0), ('z48,28', 0.875), ('z48,29', 0.125), ('z49,29', 0.875), ('z50,30', 0.125)]
Objective value:  53.0
Default row names c1, c2 ... being created.
Finding a cutting plane...
Found incumbent of value 0.000000 after 0.00 sec. (0.01 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 1 rows and 125 columns.
Reduced MIP has 77 rows, 243 columns, and 410 nonzeros.
Reduced MIP has 0 binaries, 77 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.32 ticks)
Tried aggregator 1 time.
Reduced MIP has 77 rows, 243 columns, and 410 nonzeros.
Reduced MIP has 0 binaries, 77 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.19 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.00 sec. (0.22 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      202.0000              --- 
      0     0        0.9900    29        0.0000        0.9900       99     --- 
      0     0        0.9900     7        0.0000      Cuts: 87      126     --- 
      0     0        0.9900     8        0.0000   MIRcuts: 12      133     --- 
      0     0        0.9900     9        0.0000    MIRcuts: 7      137     --- 
*     0+    0                            0.5000        0.9900            98.00%
      0     2        0.9900     9        0.5000        0.9900      137   98.00%
Elapsed time = 0.01 sec. (6.19 ticks, tree = 0.01 MB, solutions = 2)
   6682  3532        0.9900    18        0.5000        0.9900    19533   98.00%
   8382   947        0.9900     8        0.5000        0.9900    22081   98.00%
  13949  3533        0.9900     8        0.5000        0.9900    32674   98.00%
  27588 10336        0.9500     8        0.5000        0.9900    60030   98.00%
  39506 17582        0.9788     7        0.5000        0.9900    91921   98.00%
  55169 25278        0.9250     8        0.5000        0.9900   126365   98.00%
  69335 34501        0.9400    10        0.5000        0.9900   175158   98.00%
  83268 39499        0.9900     7        0.5000        0.9900   201387   98.00%
  97119 46587        0.9542     8        0.5000        0.9900   237957   98.00%

Mixed integer rounding cuts applied:  15
Gomory fractional cuts applied:  19

Root node processing (before b&c):
  Real time             =    0.01 sec. (6.10 ticks)
Parallel b&c, 4 threads:
  Real time             =    6.29 sec. (2435.58 ticks)
  Sync time (average)   =    0.41 sec.
  Wait time (average)   =    0.24 sec.
                          ------------
Total (root+branch&cut) =    6.30 sec. (2441.68 ticks)
Variables that need flooring, and amount to floor: [('x4', 0.97), ('x6', 0.9699999999999998), ('x7', 0.99), ('x8', 0.020000000000000018), ('x9', 0.050000000000000044), ('x12', 0.99), ('x16', 0.505), ('x17', 0.97), ('x24', 0.505), ('x26', 0.4850000000000003), ('x27', 0.4850000000000003), ('x31', 0.9699999999999998), ('x32', 0.9699999999999998), ('x41', 0.020000000000000018), ('x45', 0.99), ('x46', 0.020000000000000018), ('z1,2', 0.030000000000000027), ('z1,31', 0.020000000000000018), ('z2,4', 0.98), ('z2,31', 0.99), ('z4,31', 0.99), ('z5,1', 0.030000000000000027), ('z5,2', 0.030000000000000027), ('z6,3', 0.98), ('z9,6', 0.010000000000000009), ('z11,8', 0.010000000000000009), ('z11,1', 0.030000000000000027), ('z13,5', 0.98), ('z14,31', 0.505), ('z15,8', 0.495), ('z16,9', 0.020000000000000018), ('z17,10', 0.98), ('z18,10', 0.010000000000000009), ('z19,12', 0.030000000000000027), ('z20,31', 0.99), ('z21,7', 0.485), ('z22,16', 0.515), ('z22,9', 0.515), ('z24,31', 0.010000000000000009), ('z25,13', 0.4950000000000001), ('z25,14', 0.515), ('z30,31', 0.020000000000000018), ('z31,13', 0.98), ('z34,19', 0.010000000000000009), ('z34,31', 0.020000000000000018), ('z35,19', 0.98), ('z40,31', 0.020000000000000018), ('z43,23', 0.030000000000000027), ('z44,25', 0.010000000000000009), ('z44,31', 0.020000000000000018), ('z46,27', 0.020000000000000018), ('z49,30', 0.97), ('z50,31', 0.020000000000000018), ('z51,25', 0.010000000000000009), ('z51,31', 0.020000000000000018), ('z52,27', 0.030000000000000027), ('z52,31', 0.020000000000000018), ('z53,29', 0.030000000000000027), ('z53,31', 0.020000000000000018)]
Found cutting plane:  [('x1', 1), ('x2', 2), ('x3', 1), ('x4', 1), ('x5', 2), ('x6', 2), ('x7', 1), ('x9', -2), ('x11', 1), ('x13', 1), ('x14', 1), ('x15', 2), ('x17', 1), ('x18', 2), ('x19', 2), ('x20', 1), ('x21', 1), ('x22', 2), ('x23', 2), ('x25', 1), ('x26', 2), ('x27', 2), ('x28', 2), ('x29', 2), ('x30', 2), ('x31', 2), ('x32', 2), ('x33', 2), ('x34', 2), ('x35', 2), ('x36', 2), ('x37', 2), ('x38', 2), ('x39', 2), ('x40', 2), ('x41', 1), ('x42', 1), ('x43', 1), ('x44', 2), ('x45', 1), ('x46', 1), ('x47', 2), ('x48', 2), ('x49', 2), ('x50', 2), ('x51', 1), ('x52', 2), ('x53', 2), ('z1,2', -1), ('z1,31', -1), ('z4,1', -1), ('z4,31', -1), ('z5,1', -1), ('z6,2', 1), ('z6,3', 1), ('z7,3', 1), ('z8,4', -1), ('z8,5', -1), ('z9,5', -1), ('z9,6', -1), ('z11,8', -1), ('z11,1', -2), ('z12,10', -1), ('z13,12', 1), ('z16,8', -1), ('z16,9', -2), ('z17,9', -1), ('z17,10', -1), ('z20,12', 1), ('z21,14', 1), ('z22,16', -1), ('z22,9', -1), ('z24,13', 1), ('z25,13', 1), ('z26,14', 1), ('z28,16', -1), ('z28,17', 1), ('z29,17', 1), ('z31,20', 1), ('z31,13', 1), ('z32,22', 1), ('z33,17', 1), ('z34,19', 1), ('z35,19', 1), ('z35,20', 1), ('z36,20', 1), ('z37,22', 1), ('z38,22', 1), ('z39,23', -1), ('z41,26', 1), ('z41,19', 1), ('z42,28', 1), ('z43,23', -1), ('z44,25', 1), ('z45,25', 1), ('z45,26', 1), ('z46,26', 1), ('z47,27', 1), ('z47,28', 1), ('z48,28', 1), ('z51,31', -1), ('z53,29', -1)]
Found cutting plane: <= 44.0
Linear combination is: 
0.98 * [('x1', -1), ('z1,2', -1), ('z1,31', -1)])+
0.99 * [('x2', 1), ('z2,4', 1), ('z2,31', 1)])+
0.010000000000000009 * [('x4', -1), ('z4,1', -1), ('z4,31', -1)])+
0.020000000000000018 * [('x5', 1), ('z5,1', 1), ('z5,2', 1)])+
0.99 * [('x6', 1), ('z6,2', 1), ('z6,3', 1)])+
0.010000000000000009 * [('x7', 1), ('z7,3', 1), ('z7,4', 1)])+
0.99 * [('x8', -1), ('z8,4', -1), ('z8,5', -1)])+
0.99 * [('x9', -1), ('z9,5', -1), ('z9,6', -1)])+
0.98 * [('x11', -1), ('z11,8', -1), ('z11,1', -1)])+
0.99 * [('x12', -1), ('z12,10', -1), ('z12,3', -1)])+
0.99 * [('x13', 1), ('z13,12', 1), ('z13,5', 1)])+
0.505 * [('x14', 1), ('z14,7', 1), ('z14,31', 1)])+
0.505 * [('x15', 1), ('z15,7', 1), ('z15,8', 1)])+
0.99 * [('x16', -1), ('z16,8', -1), ('z16,9', -1)])+
0.010000000000000009 * [('x17', -1), ('z17,9', -1), ('z17,10', -1)])+
0.020000000000000018 * [('x18', 1), ('z18,10', 1), ('z18,11', 1)])+
0.020000000000000018 * [('x19', 1), ('z19,11', 1), ('z19,12', 1)])+
0.99 * [('x20', 1), ('z20,12', 1), ('z20,31', 1)])+
0.99 * [('x21', 1), ('z21,14', 1), ('z21,7', 1)])+
0.505 * [('x22', 1), ('z22,16', 1), ('z22,9', 1)])+
0.020000000000000018 * [('x23', 1), ('z23,18', 1), ('z23,11', 1)])+
0.010000000000000009 * [('x24', 1), ('z24,13', 1), ('z24,31', 1)])+
0.505 * [('x25', 1), ('z25,13', 1), ('z25,14', 1)])+
0.99 * [('x26', 1), ('z26,14', 1), ('z26,15', 1)])+
0.99 * [('x27', 1), ('z27,15', 1), ('z27,16', 1)])+
0.020000000000000018 * [('x28', 1), ('z28,16', 1), ('z28,17', 1)])+
0.020000000000000018 * [('x29', 1), ('z29,17', 1), ('z29,18', 1)])+
0.020000000000000018 * [('x30', 1), ('z30,18', 1), ('z30,31', 1)])+
0.99 * [('x31', 1), ('z31,20', 1), ('z31,13', 1)])+
0.99 * [('x32', 1), ('z32,22', 1), ('z32,15', 1)])+
0.020000000000000018 * [('x33', 1), ('z33,24', 1), ('z33,17', 1)])+
0.020000000000000018 * [('x34', 1), ('z34,19', 1), ('z34,31', 1)])+
0.99 * [('x35', 1), ('z35,19', 1), ('z35,20', 1)])+
0.99 * [('x36', 1), ('z36,20', 1), ('z36,21', 1)])+
0.99 * [('x37', 1), ('z37,21', 1), ('z37,22', 1)])+
0.99 * [('x38', 1), ('z38,22', 1), ('z38,23', 1)])+
0.020000000000000018 * [('x39', 1), ('z39,23', 1), ('z39,24', 1)])+
0.020000000000000018 * [('x40', 1), ('z40,24', 1), ('z40,31', 1)])+
0.010000000000000009 * [('x41', 1), ('z41,26', 1), ('z41,19', 1)])+
0.99 * [('x42', 1), ('z42,28', 1), ('z42,21', 1)])+
0.020000000000000018 * [('x43', 1), ('z43,30', 1), ('z43,23', 1)])+
0.020000000000000018 * [('x44', 1), ('z44,25', 1), ('z44,31', 1)])+
0.010000000000000009 * [('x45', 1), ('z45,25', 1), ('z45,26', 1)])+
0.010000000000000009 * [('x46', 1), ('z46,26', 1), ('z46,27', 1)])+
0.99 * [('x47', 1), ('z47,27', 1), ('z47,28', 1)])+
0.99 * [('x48', 1), ('z48,28', 1), ('z48,29', 1)])+
0.99 * [('x49', 1), ('z49,29', 1), ('z49,30', 1)])+
0.020000000000000018 * [('x50', 1), ('z50,30', 1), ('z50,31', 1)])+
0.98 * [('x51', -1), ('z51,25', -1), ('z51,31', -1)])+
0.020000000000000018 * [('x52', 1), ('z52,27', 1), ('z52,31', 1)])+
0.020000000000000018 * [('x53', 1), ('z53,29', 1), ('z53,31', 1)])+
0.99 * [('z4,1', -1), ('z5,1', -1), ('z11,1', -1)])+
0.010000000000000009 * [('z1,2', 1), ('z5,2', 1), ('z6,2', 1)])+
0.99 * [('z6,3', 1), ('z7,3', 1), ('z12,3', 1)])+
0.010000000000000009 * [('z2,4', -1), ('z7,4', -1), ('z8,4', -1)])+
0.010000000000000009 * [('z8,5', -1), ('z9,5', -1), ('z13,5', -1)])+
0.505 * [('z14,7', -1), ('z15,7', -1), ('z21,7', -1)])+
0.010000000000000009 * [('z11,8', -1), ('z15,8', -1), ('z16,8', -1)])+
0.99 * [('z16,9', -1), ('z17,9', -1), ('z22,9', -1)])+
0.010000000000000009 * [('z12,10', -1), ('z17,10', -1), ('z18,10', -1)])+
0.020000000000000018 * [('z18,11', -1), ('z19,11', -1), ('z23,11', -1)])+
0.010000000000000009 * [('z13,12', 1), ('z19,12', 1), ('z20,12', 1)])+
0.99 * [('z24,13', 1), ('z25,13', 1), ('z31,13', 1)])+
0.010000000000000009 * [('z21,14', 1), ('z25,14', 1), ('z26,14', 1)])+
0.99 * [('z26,15', -1), ('z27,15', -1), ('z32,15', -1)])+
0.99 * [('z22,16', -1), ('z27,16', -1), ('z28,16', -1)])+
0.98 * [('z28,17', 1), ('z29,17', 1), ('z33,17', 1)])+
0.020000000000000018 * [('z23,18', -1), ('z29,18', -1), ('z30,18', -1)])+
0.99 * [('z34,19', 1), ('z35,19', 1), ('z41,19', 1)])+
0.010000000000000009 * [('z31,20', 1), ('z35,20', 1), ('z36,20', 1)])+
0.99 * [('z36,21', -1), ('z37,21', -1), ('z42,21', -1)])+
0.010000000000000009 * [('z32,22', 1), ('z37,22', 1), ('z38,22', 1)])+
0.99 * [('z38,23', -1), ('z39,23', -1), ('z43,23', -1)])+
0.020000000000000018 * [('z33,24', -1), ('z39,24', -1), ('z40,24', -1)])+
0.99 * [('z44,25', 1), ('z45,25', 1), ('z51,25', 1)])+
0.99 * [('z41,26', 1), ('z45,26', 1), ('z46,26', 1)])+
0.010000000000000009 * [('z46,27', 1), ('z47,27', 1), ('z52,27', 1)])+
0.010000000000000009 * [('z42,28', 1), ('z47,28', 1), ('z48,28', 1)])+
0.99 * [('z48,29', -1), ('z49,29', -1), ('z53,29', -1)])+
0.020000000000000018 * [('z43,30', -1), ('z49,30', -1), ('z50,30', -1)])+
0.99 * [('x1', 1), ('x4', 1), ('x5', 1)])+
0.99 * [('x1', 1), ('x2', 1), ('x6', 1), ('x7', 1)])+
0.020000000000000018 * [('x2', 1), ('x3', 1), ('x8', 1), ('x9', 1)])+
0.98 * [('x3', 1), ('x10', 1)])+
0.99 * [('x4', 1), ('x11', 1), ('x14', 1), ('x15', 1)])+
0.99 * [('x5', 1), ('x6', 1), ('x11', 1), ('x12', 1), ('x16', 1), ('x17', 1)])+
0.99 * [('x7', 1), ('x8', 1), ('x12', 1), ('x13', 1), ('x18', 1), ('x19', 1)])+
0.98 * [('x9', -1), ('x10', -1), ('x13', -1), ('x20', -1)])+
0.495 * [('x14', -1), ('x21', -1), ('x24', -1), ('x25', -1)])+
0.505 * [('x15', 1), ('x16', 1), ('x21', 1), ('x22', 1), ('x26', 1), ('x27', 1)])+
0.99 * [('x17', 1), ('x18', 1), ('x22', 1), ('x23', 1), ('x28', 1), ('x29', 1)])+
0.99 * [('x19', 1), ('x20', 1), ('x23', 1), ('x30', 1)])+
0.99 * [('x24', 1), ('x31', 1), ('x34', 1), ('x35', 1)])+
0.99 * [('x25', 1), ('x26', 1), ('x31', 1), ('x32', 1), ('x36', 1), ('x37', 1)])+
0.99 * [('x27', 1), ('x28', 1), ('x32', 1), ('x33', 1), ('x38', 1), ('x39', 1)])+
0.99 * [('x29', 1), ('x30', 1), ('x33', 1), ('x40', 1)])+
0.99 * [('x34', 1), ('x41', 1), ('x44', 1), ('x45', 1)])+
0.020000000000000018 * [('x35', 1), ('x36', 1), ('x41', 1), ('x42', 1), ('x46', 1), ('x47', 1)])+
0.020000000000000018 * [('x37', 1), ('x38', 1), ('x42', 1), ('x43', 1), ('x48', 1), ('x49', 1)])+
0.99 * [('x39', 1), ('x40', 1), ('x43', 1), ('x50', 1)])+
0.99 * [('x44', 1), ('x51', 1)])+
0.99 * [('x45', 1), ('x46', 1), ('x51', 1), ('x52', 1)])+
0.99 * [('x47', 1), ('x48', 1), ('x52', 1), ('x53', 1)])+
0.99 * [('x49', 1), ('x50', 1), ('x53', 1)])Default row names c1, c2 ... being created.

Violation: 0.5

Iteration log . . .
Iteration:     1   Dual objective     =            53.000000
New point to separate:  [('x1', 1.0), ('x2', 0.8888888888888888), ('x3', 1.0), ('x4', 0.11111111111111116), ('x5', 0.8888888888888888), ('x6', 0.11111111111111116), ('x8', 0.11111111111111116), ('x10', 1.0), ('x11', 0.8888888888888888), ('x13', 0.8888888888888888), ('x14', 0.4444444444444444), ('x15', 0.5555555555555556), ('x17', 0.11111111111111116), ('x18', 0.11111111111111116), ('x19', 0.8888888888888888), ('x20', 0.11111111111111116), ('x21', 0.5555555555555556), ('x22', 0.8888888888888888), ('x25', 1.0), ('x28', 0.8888888888888888), ('x30', 1.0), ('x33', 0.5555555555555556), ('x34', 1.0), ('x35', 1.0), ('x36', 0.22222222222222243), ('x37', 0.7777777777777776), ('x39', 0.5555555555555556), ('x40', 0.4444444444444444), ('x42', 0.7777777777777776), ('x43', 0.22222222222222243), ('x44', 1.0), ('x49', 0.22222222222222243), ('x50', 0.7777777777777776), ('x51', 1.0), ('x52', 1.0), ('x53', 1.0), ('z2,4', 0.11111111111111116), ('z4,1', 0.8888888888888888), ('z5,2', 0.11111111111111116), ('z6,2', 0.8888888888888888), ('z7,3', 1.0), ('z8,4', 0.8888888888888888), ('z9,5', 1.0), ('z11,1', 0.11111111111111116), ('z12,10', 1.0), ('z13,12', 0.11111111111111116), ('z14,7', 0.5555555555555556), ('z15,7', 0.4444444444444444), ('z16,8', 1.0), ('z17,9', 0.8888888888888888), ('z18,11', 0.8888888888888888), ('z19,11', 0.11111111111111116), ('z20,12', 0.8888888888888888), ('z21,14', 0.4444444444444444), ('z22,9', 0.11111111111111116), ('z23,18', 1.0), ('z24,13', 1.0), ('z26,14', 0.5555555555555556), ('z26,15', 0.4444444444444444), ('z27,15', 0.11111111111111116), ('z27,16', 0.8888888888888888), ('z28,16', 0.11111111111111116), ('z29,17', 1.0), ('z31,20', 1.0), ('z32,22', 0.5555555555555556), ('z32,15', 0.4444444444444444), ('z33,24', 0.4444444444444444), ('z36,21', 0.7777777777777776), ('z37,21', 0.22222222222222243), ('z38,22', 0.4444444444444444), ('z38,23', 0.5555555555555556), ('z39,23', 0.4444444444444444), ('z40,24', 0.5555555555555556), ('z41,19', 1.0), ('z42,28', 0.22222222222222243), ('z43,30', 0.7777777777777776), ('z45,25', 1.0), ('z46,26', 1.0), ('z47,27', 1.0), ('z48,28', 0.7777777777777776), ('z48,29', 0.22222222222222243), ('z49,29', 0.7777777777777776), ('z50,30', 0.22222222222222243)]
Objective value:  53.0
Default row names c1, c2 ... being created.
Finding a cutting plane...
Found incumbent of value 0.000000 after 0.00 sec. (0.01 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 1 rows and 123 columns.
Reduced MIP has 84 rows, 260 columns, and 448 nonzeros.
Reduced MIP has 0 binaries, 84 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.34 ticks)
Tried aggregator 1 time.
Reduced MIP has 84 rows, 260 columns, and 448 nonzeros.
Reduced MIP has 0 binaries, 84 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.21 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.00 sec. (0.24 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      202.0000              --- 
      0     0        0.9900    37        0.0000        0.9900      113     --- 
      0     0        0.9900     9        0.0000     Cuts: 111      143     --- 
      0     0        0.9900     8        0.0000   MIRcuts: 16      151     --- 
      0     0        0.9900     5        0.0000    MIRcuts: 7      153     --- 
      0     0        0.9900     4        0.0000    MIRcuts: 7      157     --- 
      0     2        0.9900     4        0.0000        0.9900      157     --- 
Elapsed time = 0.02 sec. (8.32 ticks, tree = 0.01 MB, solutions = 1)
*   454+  262                            0.4444        0.9900           122.75%
   4341  3479        0.9900    33        0.4444        0.9900    10394  122.75%
   5661   953        0.9767    14        0.4444        0.9900    13057  122.75%
   9469  2913        0.5961     7        0.4444        0.9900    19611  122.75%
  22089 10899        0.9691     9        0.4444        0.9900    48675  122.75%
  34459 21053        0.9722     9        0.4444        0.9900    87197  122.75%
  49232 29635        0.6006     8        0.4444        0.9900   120588  122.75%
  64692 37874        0.7489    12        0.4444        0.9900   151841  122.75%
  78950 49165    infeasible              0.4444        0.9900   195283  122.75%
  92097 59461        0.9900    10        0.4444        0.9900   238260  122.75%

Mixed integer rounding cuts applied:  5
Gomory fractional cuts applied:  25

Root node processing (before b&c):
  Real time             =    0.02 sec. (8.23 ticks)
Parallel b&c, 4 threads:
  Real time             =    5.95 sec. (2488.47 ticks)
  Sync time (average)   =    0.42 sec.
  Wait time (average)   =    0.24 sec.
                          ------------
Total (root+branch&cut) =    5.97 sec. (2496.70 ticks)
Variables that need flooring, and amount to floor: [('x7', 0.97), ('x9', 0.030000000000000027), ('x12', 0.98), ('x16', 0.4950000000000001), ('x23', 0.010000000000000009), ('x24', 0.505), ('x26', 0.4850000000000003), ('x27', 0.4850000000000003), ('x31', 0.9699999999999998), ('x32', 0.9699999999999998), ('x41', 0.9999999999999791), ('x45', 0.9699999999999585), ('x46', 0.019999999999979146), ('z1,31', 0.020000000000000018), ('z2,31', 0.99), ('z4,31', 0.020000000000000018), ('z5,1', 1.0), ('z6,3', 0.030000000000000027), ('z9,6', 0.99), ('z11,8', 0.02000000000000002), ('z12,3', 0.010000000000000009), ('z14,31', 0.505), ('z15,8', 0.505), ('z16,9', 0.010000000000000009), ('z17,10', 0.99), ('z18,10', 0.020000000000000018), ('z19,12', 0.030000000000000027), ('z20,31', 0.99), ('z21,7', 0.4849999999999999), ('z22,16', 0.485), ('z23,11', 0.98), ('z24,31', 0.010000000000000009), ('z25,13', 0.495), ('z25,14', 0.515), ('z28,17', 0.98), ('z29,18', 0.010000000000000009), ('z30,18', 0.040000000000000036), ('z30,31', 0.040000000000000036), ('z31,13', 0.98), ('z33,17', 0.030000000000000027), ('z34,19', 0.030000000000020788), ('z34,31', 0.02000000000002078), ('z39,24', 0.98), ('z40,31', 0.010000000000000009), ('z41,26', 0.98), ('z44,25', 0.030000000000020788), ('z44,31', 0.02000000000002078), ('z45,26', 0.98), ('z46,27', 0.020000000000000018), ('z50,31', 0.99), ('z51,25', 0.030000000000020788), ('z51,31', 0.02000000000002078), ('z52,27', 0.030000000000020788), ('z52,31', 0.02000000000002078), ('z53,29', 0.030000000000000027), ('z53,31', 0.020000000000000018)]
Found cutting plane:  [('x1', 2), ('x2', 2), ('x4', 2), ('x5', 2), ('x6', 2), ('x7', 1), ('x8', 2), ('x9', 1), ('x11', 2), ('x12', 1), ('x13', 2), ('x14', 1), ('x15', 2), ('x16', 1), ('x17', 2), ('x18', 1), ('x19', 2), ('x20', 2), ('x21', 2), ('x22', 1), ('x23', 1), ('x25', 2), ('x26', 2), ('x27', 2), ('x28', 2), ('x29', 1), ('x30', 2), ('x31', 2), ('x32', 2), ('x33', 1), ('x34', 2), ('x35', 2), ('x36', 2), ('x37', 2), ('x38', 2), ('x39', 2), ('x41', 1), ('x42', 1), ('x43', 1), ('x44', 1), ('x45', 2), ('x46', 1), ('x47', 2), ('x48', 2), ('x49', 2), ('x50', 2), ('x51', 2), ('x52', 1), ('x53', 2), ('z5,1', -1), ('z6,3', -1), ('z7,3', -1), ('z7,4', -1), ('z8,5', 1), ('z9,5', 1), ('z12,3', -1), ('z13,5', 1), ('z14,31', -1), ('z15,7', 1), ('z16,9', -1), ('z19,12', -1), ('z21,14', 1), ('z21,7', 1), ('z22,16', -1), ('z22,9', -1), ('z23,11', -1), ('z24,13', -1), ('z24,31', -1), ('z26,14', 1), ('z28,17', 1), ('z29,17', 1), ('z31,20', 1), ('z32,22', 1), ('z33,24', -1), ('z35,19', 1), ('z35,20', 1), ('z36,20', 1), ('z37,22', 1), ('z38,22', 1), ('z40,24', -1), ('z40,31', -1), ('z41,26', 1), ('z41,19', 1), ('z42,28', 1), ('z44,25', -1), ('z44,31', -1), ('z45,25', 1), ('z45,26', 1), ('z46,26', 1), ('z47,27', 1), ('z47,28', 1), ('z48,28', 1), ('z52,27', -1), ('z52,31', -1), ('z53,29', -1)]
Found cutting plane: <= 45.0
Linear combination is: 
0.020000000000000018 * [('x1', 1), ('z1,2', 1), ('z1,31', 1)])+
0.99 * [('x2', 1), ('z2,4', 1), ('z2,31', 1)])+
0.020000000000000018 * [('x4', 1), ('z4,1', 1), ('z4,31', 1)])+
0.020000000000000018 * [('x5', 1), ('z5,1', 1), ('z5,2', 1)])+
0.020000000000000018 * [('x6', 1), ('z6,2', 1), ('z6,3', 1)])+
0.010000000000000009 * [('x7', -1), ('z7,3', -1), ('z7,4', -1)])+
0.99 * [('x8', 1), ('z8,4', 1), ('z8,5', 1)])+
0.99 * [('x9', 1), ('z9,5', 1), ('z9,6', 1)])+
0.02000000000000002 * [('x11', 1), ('z11,8', 1), ('z11,1', 1)])+
0.99 * [('x13', 1), ('z13,12', 1), ('z13,5', 1)])+
0.495 * [('x14', -1), ('z14,7', -1), ('z14,31', -1)])+
0.505 * [('x15', 1), ('z15,7', 1), ('z15,8', 1)])+
0.99 * [('x17', 1), ('z17,9', 1), ('z17,10', 1)])+
0.020000000000000018 * [('x18', 1), ('z18,10', 1), ('z18,11', 1)])+
0.020000000000000018 * [('x19', 1), ('z19,11', 1), ('z19,12', 1)])+
0.99 * [('x20', 1), ('z20,12', 1), ('z20,31', 1)])+
0.99 * [('x21', 1), ('z21,14', 1), ('z21,7', 1)])+
0.475 * [('x22', 1), ('z22,16', 1), ('z22,9', 1)])+
0.99 * [('x24', -1), ('z24,13', -1), ('z24,31', -1)])+
0.505 * [('x25', 1), ('z25,13', 1), ('z25,14', 1)])+
0.99 * [('x26', 1), ('z26,14', 1), ('z26,15', 1)])+
0.99 * [('x27', 1), ('z27,15', 1), ('z27,16', 1)])+
0.99 * [('x28', 1), ('z28,16', 1), ('z28,17', 1)])+
0.010000000000000009 * [('x29', 1), ('z29,17', 1), ('z29,18', 1)])+
0.040000000000000036 * [('x30', 1), ('z30,18', 1), ('z30,31', 1)])+
0.99 * [('x31', 1), ('z31,20', 1), ('z31,13', 1)])+
0.99 * [('x32', 1), ('z32,22', 1), ('z32,15', 1)])+
0.96 * [('x33', -1), ('z33,24', -1), ('z33,17', -1)])+
0.02000000000002078 * [('x34', 1), ('z34,19', 1), ('z34,31', 1)])+
0.99 * [('x35', 1), ('z35,19', 1), ('z35,20', 1)])+
0.99 * [('x36', 1), ('z36,20', 1), ('z36,21', 1)])+
0.99 * [('x37', 1), ('z37,21', 1), ('z37,22', 1)])+
0.99 * [('x38', 1), ('z38,22', 1), ('z38,23', 1)])+
0.99 * [('x39', 1), ('z39,23', 1), ('z39,24', 1)])+
0.99 * [('x40', -1), ('z40,24', -1), ('z40,31', -1)])+
0.99 * [('x41', 1), ('z41,26', 1), ('z41,19', 1)])+
0.99 * [('x42', 1), ('z42,28', 1), ('z42,21', 1)])+
0.99 * [('x43', 1), ('z43,30', 1), ('z43,23', 1)])+
0.9799999999999792 * [('x44', -1), ('z44,25', -1), ('z44,31', -1)])+
0.99 * [('x45', 1), ('z45,25', 1), ('z45,26', 1)])+
0.010000000000000009 * [('x46', 1), ('z46,26', 1), ('z46,27', 1)])+
0.99 * [('x47', 1), ('z47,27', 1), ('z47,28', 1)])+
0.99 * [('x48', 1), ('z48,28', 1), ('z48,29', 1)])+
0.99 * [('x49', 1), ('z49,29', 1), ('z49,30', 1)])+
0.99 * [('x50', 1), ('z50,30', 1), ('z50,31', 1)])+
0.02000000000002078 * [('x51', 1), ('z51,25', 1), ('z51,31', 1)])+
0.9799999999999792 * [('x52', -1), ('z52,27', -1), ('z52,31', -1)])+
0.020000000000000018 * [('x53', 1), ('z53,29', 1), ('z53,31', 1)])+
0.02000000000000002 * [('z4,1', -1), ('z5,1', -1), ('z11,1', -1)])+
0.020000000000000018 * [('z1,2', -1), ('z5,2', -1), ('z6,2', -1)])+
0.99 * [('z6,3', -1), ('z7,3', -1), ('z12,3', -1)])+
0.99 * [('z2,4', -1), ('z7,4', -1), ('z8,4', -1)])+
0.010000000000000009 * [('z8,5', 1), ('z9,5', 1), ('z13,5', 1)])+
0.495 * [('z14,7', 1), ('z15,7', 1), ('z21,7', 1)])+
0.99 * [('z16,9', -1), ('z17,9', -1), ('z22,9', -1)])+
0.020000000000000018 * [('z18,11', -1), ('z19,11', -1), ('z23,11', -1)])+
0.99 * [('z13,12', -1), ('z19,12', -1), ('z20,12', -1)])+
0.010000000000000009 * [('z24,13', -1), ('z25,13', -1), ('z31,13', -1)])+
0.010000000000000009 * [('z21,14', 1), ('z25,14', 1), ('z26,14', 1)])+
0.99 * [('z26,15', -1), ('z27,15', -1), ('z32,15', -1)])+
0.99 * [('z22,16', -1), ('z27,16', -1), ('z28,16', -1)])+
0.99 * [('z28,17', 1), ('z29,17', 1), ('z33,17', 1)])+
0.010000000000000009 * [('z34,19', 1), ('z35,19', 1), ('z41,19', 1)])+
0.010000000000000009 * [('z31,20', 1), ('z35,20', 1), ('z36,20', 1)])+
0.99 * [('z36,21', -1), ('z37,21', -1), ('z42,21', -1)])+
0.010000000000000009 * [('z32,22', 1), ('z37,22', 1), ('z38,22', 1)])+
0.99 * [('z38,23', -1), ('z39,23', -1), ('z43,23', -1)])+
0.010000000000000009 * [('z33,24', -1), ('z39,24', -1), ('z40,24', -1)])+
0.010000000000000009 * [('z44,25', 1), ('z45,25', 1), ('z51,25', 1)])+
0.99 * [('z41,26', 1), ('z45,26', 1), ('z46,26', 1)])+
0.010000000000000009 * [('z46,27', 1), ('z47,27', 1), ('z52,27', 1)])+
0.010000000000000009 * [('z42,28', 1), ('z47,28', 1), ('z48,28', 1)])+
0.99 * [('z48,29', -1), ('z49,29', -1), ('z53,29', -1)])+
0.99 * [('z43,30', -1), ('z49,30', -1), ('z50,30', -1)])+
0.99 * [('x1', 1), ('x4', 1), ('x5', 1)])+
0.99 * [('x1', 1), ('x2', 1), ('x6', 1), ('x7', 1)])+
0.020000000000000018 * [('x2', 1), ('x3', 1), ('x8', 1), ('x9', 1)])+
0.020000000000000018 * [('x3', -1), ('x10', -1)])+
0.99 * [('x4', 1), ('x11', 1), ('x14', 1), ('x15', 1)])+
0.99 * [('x5', 1), ('x6', 1), ('x11', 1), ('x12', 1), ('x16', 1), ('x17', 1)])+
0.99 * [('x7', 1), ('x8', 1), ('x12', 1), ('x13', 1), ('x18', 1), ('x19', 1)])+
0.020000000000000018 * [('x9', 1), ('x10', 1), ('x13', 1), ('x20', 1)])+
0.505 * [('x14', 1), ('x21', 1), ('x24', 1), ('x25', 1)])+
0.505 * [('x15', 1), ('x16', 1), ('x21', 1), ('x22', 1), ('x26', 1), ('x27', 1)])+
0.020000000000000018 * [('x17', 1), ('x18', 1), ('x22', 1), ('x23', 1), ('x28', 1), ('x29', 1)])+
0.99 * [('x19', 1), ('x20', 1), ('x23', 1), ('x30', 1)])+
0.99 * [('x24', 1), ('x31', 1), ('x34', 1), ('x35', 1)])+
0.99 * [('x25', 1), ('x26', 1), ('x31', 1), ('x32', 1), ('x36', 1), ('x37', 1)])+
0.99 * [('x27', 1), ('x28', 1), ('x32', 1), ('x33', 1), ('x38', 1), ('x39', 1)])+
0.97 * [('x29', 1), ('x30', 1), ('x33', 1), ('x40', 1)])+
0.9899999999999792 * [('x34', 1), ('x41', 1), ('x44', 1), ('x45', 1)])+
0.020000000000000018 * [('x35', 1), ('x36', 1), ('x41', 1), ('x42', 1), ('x46', 1), ('x47', 1)])+
0.020000000000000018 * [('x37', 1), ('x38', 1), ('x42', 1), ('x43', 1), ('x48', 1), ('x49', 1)])+
0.020000000000000018 * [('x39', 1), ('x40', 1), ('x43', 1), ('x50', 1)])+
0.99 * [('x44', 1), ('x51', 1)])+
0.9899999999999792 * [('x45', 1), ('x46', 1), ('x51', 1), ('x52', 1)])+
0.99 * [('x47', 1), ('x48', 1), ('x52', 1), ('x53', 1)])+
0.99 * [('x49', 1), ('x50', 1), ('x53', 1)])Default row names c1, c2 ... being created.

Violation: 0.44444444444444287

Iteration log . . .
Iteration:     1   Dual objective     =            53.000000
New point to separate:  [('x1', 1.0), ('x2', 0.8888888888888888), ('x3', 1.0), ('x4', 0.11111111111111116), ('x5', 0.8888888888888888), ('x6', 0.11111111111111116), ('x8', 0.11111111111111116), ('x10', 1.0), ('x11', 0.8888888888888888), ('x13', 0.8888888888888888), ('x14', 0.4444444444444444), ('x15', 0.5555555555555556), ('x17', 0.1111111111111111), ('x18', 0.11111111111111116), ('x19', 0.8888888888888888), ('x20', 0.1111111111111111), ('x21', 0.5555555555555556), ('x22', 0.8888888888888888), ('x23', 0.4444444444444444), ('x25', 1.0), ('x28', 0.4444444444444444), ('x30', 0.5555555555555556), ('x33', 1.0), ('x34', 1.0), ('x35', 1.0), ('x37', 1.0), ('x39', 0.5555555555555556), ('x40', 0.4444444444444444), ('x42', 1.0), ('x44', 1.0), ('x50', 1.0), ('x51', 1.0), ('x52', 1.0), ('x53', 1.0), ('z2,4', 0.11111111111111116), ('z4,1', 0.8888888888888888), ('z5,2', 0.11111111111111116), ('z6,2', 0.8888888888888888), ('z7,3', 1.0), ('z8,4', 0.8888888888888888), ('z9,5', 1.0), ('z11,1', 0.11111111111111116), ('z12,10', 1.0), ('z13,12', 0.11111111111111116), ('z14,7', 0.5555555555555556), ('z15,7', 0.4444444444444444), ('z16,8', 1.0), ('z17,9', 0.8888888888888888), ('z18,11', 0.8888888888888888), ('z19,11', 0.11111111111111116), ('z20,12', 0.8888888888888888), ('z21,14', 0.4444444444444444), ('z22,9', 0.1111111111111111), ('z23,18', 0.5555555555555556), ('z24,13', 1.0), ('z26,14', 0.5555555555555556), ('z26,15', 0.4444444444444444), ('z27,15', 0.5555555555555556), ('z27,16', 0.4444444444444444), ('z28,16', 0.5555555555555556), ('z29,17', 1.0), ('z30,18', 0.4444444444444444), ('z31,20', 1.0), ('z32,22', 1.0), ('z36,21', 1.0), ('z38,23', 1.0), ('z39,24', 0.4444444444444444), ('z40,24', 0.5555555555555556), ('z41,19', 1.0), ('z43,30', 1.0), ('z45,25', 1.0), ('z46,26', 1.0), ('z47,27', 1.0), ('z48,28', 1.0), ('z49,29', 1.0)]
Objective value:  53.0
Default row names c1, c2 ... being created.
Finding a cutting plane...
Found incumbent of value 0.000000 after 0.00 sec. (0.01 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 1 rows and 129 columns.
Reduced MIP has 76 rows, 239 columns, and 404 nonzeros.
Reduced MIP has 0 binaries, 76 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.33 ticks)
Tried aggregator 1 time.
Reduced MIP has 76 rows, 239 columns, and 404 nonzeros.
Reduced MIP has 0 binaries, 76 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.19 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.00 sec. (0.21 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      202.0000              --- 
      0     0        0.9900    34        0.0000        0.9900       89     --- 
      0     0        0.9900    12        0.0000     Cuts: 102      118     --- 
      0     0        0.9900     9        0.0000   MIRcuts: 21      125     --- 
      0     0        0.9900     7        0.0000   MIRcuts: 10      130     --- 
      0     0        0.9900     7        0.0000    MIRcuts: 7      132     --- 
      0     2        0.9900     7        0.0000        0.9900      132     --- 
Elapsed time = 0.03 sec. (7.81 ticks, tree = 0.01 MB, solutions = 1)
*   340+  206                            0.4444        0.9900           122.75%
   5125  3977        0.9900    20        0.4444        0.9900    15316  122.75%
   6847  1133        0.9900    12        0.4444        0.9900    18378  122.75%
  12313  3802        0.9748    11        0.4444        0.9900    25077  122.75%
  26616 13010        0.9621     7        0.4444        0.9900    54577  122.75%
  39968 22728        0.9647     8        0.4444        0.9900    87054  122.75%
  56227 30578        0.9200     6        0.4444        0.9900   116318  122.75%
  72088 42175        0.9898     7        0.4444        0.9900   158675  122.75%
  87509 52179        0.9900     7        0.4444        0.9900   195859  122.75%
 101659 63733        0.9333     7        0.4444        0.9900   237641  122.75%

Mixed integer rounding cuts applied:  8
Gomory fractional cuts applied:  23

Root node processing (before b&c):
  Real time             =    0.02 sec. (7.73 ticks)
Parallel b&c, 4 threads:
  Real time             =    5.93 sec. (2327.10 ticks)
  Sync time (average)   =    0.45 sec.
  Wait time (average)   =    0.44 sec.
                          ------------
Total (root+branch&cut) =    5.95 sec. (2334.83 ticks)
Variables that need flooring, and amount to floor: [('x7', 0.010000000000000009), ('x9', 0.030000000000000027), ('x16', 0.040000000000000036), ('x24', 0.9899999999999792), ('x26', 0.9999999999999791), ('x27', 0.5150000000000001), ('x31', 0.9899999999999585), ('x32', 0.4849999999999792), ('x36', 0.9699999999999793), ('x38', 0.5049999999999999), ('x41', 0.9699999999999998), ('x43', 0.9699999999999998), ('x45', 0.99), ('x46', 0.99), ('x47', 0.9899999999999793), ('x48', 0.9699999999999793), ('x49', 0.9699999999999998), ('z1,31', 0.99), ('z2,31', 0.99), ('z4,31', 0.020000000000000018), ('z5,1', 0.97), ('z6,3', 0.99), ('z7,4', 0.010000000000000009), ('z9,6', 0.99), ('z11,8', 0.020000000000000018), ('z12,3', 0.99), ('z14,31', 0.020000000000000018), ('z15,8', 0.020000000000000018), ('z16,9', 0.5249999999999997), ('z17,10', 0.4850000000000003), ('z18,10', 0.515), ('z19,12', 0.030000000000000027), ('z20,31', 0.475), ('z21,7', 0.97), ('z22,16', 0.4850000000000003), ('z23,11', 0.485), ('z24,31', 0.010000000000000009), ('z25,13', 0.01000000000002077), ('z25,14', 0.030000000000020788), ('z30,31', 0.99), ('z33,24', 0.485), ('z34,19', 0.030000000000020788), ('z34,31', 0.02000000000002078), ('z35,19', 0.030000000000020788), ('z35,20', 0.01000000000002077), ('z36,20', 0.98), ('z37,21', 0.030000000000020677), ('z37,22', 0.030000000000020677), ('z38,22', 0.020000000000000018), ('z39,23', 0.4950000000000001), ('z40,31', 0.505), ('z41,26', 0.98), ('z42,28', 0.030000000000000027), ('z42,21', 0.030000000000000027), ('z43,23', 0.98), ('z44,25', 0.010000000000000009), ('z44,31', 0.020000000000000018), ('z47,28', 0.020000000000000018), ('z50,30', 0.030000000000000027), ('z50,31', 0.020000000000000018), ('z51,25', 0.010000000000000009), ('z51,31', 0.020000000000000018), ('z52,27', 0.010000000000020659), ('z52,31', 0.02000000000002078), ('z53,29', 0.030000000000020788), ('z53,31', 0.02000000000002078)]
Found cutting plane:  [('x1', 2), ('x2', 1), ('x4', 2), ('x5', 1), ('x7', 1), ('x8', 1), ('x9', 1), ('x12', 1), ('x13', 2), ('x14', 2), ('x15', 1), ('x16', -1), ('x17', -1), ('x18', 1), ('x19', 2), ('x20', 1), ('x21', 2), ('x22', -1), ('x23', 1), ('x25', 2), ('x26', 1), ('x27', 1), ('x28', 1), ('x30', 2), ('x32', 1), ('x33', 1), ('x34', 1), ('x35', 2), ('x36', 1), ('x37', 1), ('x38', 1), ('x39', 2), ('x40', 2), ('x41', 2), ('x42', 2), ('x43', 2), ('x44', 2), ('x45', 1), ('x46', 1), ('x47', 1), ('x48', 2), ('x49', 2), ('x50', 2), ('x51', 2), ('x52', 2), ('x53', 1), ('z7,4', -1), ('z8,4', -1), ('z9,5', 1), ('z12,10', 1), ('z13,5', 1), ('z14,7', 1), ('z15,7', 1), ('z16,9', -1), ('z21,14', 1), ('z21,7', 1), ('z22,16', -2), ('z22,9', -1), ('z24,13', -1), ('z24,31', -1), ('z26,14', 1), ('z26,15', 1), ('z27,15', 1), ('z29,17', -1), ('z29,18', -1), ('z31,20', -1), ('z31,13', -1), ('z32,22', -1), ('z33,24', -1), ('z33,17', -1), ('z34,19', -1), ('z34,31', -1), ('z36,20', -1), ('z36,21', -1), ('z37,21', -2), ('z37,22', -2), ('z38,22', -1), ('z38,23', 1), ('z39,23', 1), ('z41,26', 1), ('z41,19', 1), ('z42,21', -1), ('z43,30', 1), ('z43,23', 1), ('z44,25', 1), ('z45,25', 1), ('z45,26', 1), ('z46,26', 1), ('z46,27', 1), ('z47,27', 1), ('z48,28', 1), ('z48,29', 1), ('z49,29', 1), ('z49,30', 1), ('z51,25', 1), ('z52,27', 1), ('z53,29', -1), ('z53,31', -1)]
Found cutting plane: <= 38.0
Linear combination is: 
0.99 * [('x1', 1), ('z1,2', 1), ('z1,31', 1)])+
0.99 * [('x2', 1), ('z2,4', 1), ('z2,31', 1)])+
0.020000000000000018 * [('x4', 1), ('z4,1', 1), ('z4,31', 1)])+
0.99 * [('x5', 1), ('z5,1', 1), ('z5,2', 1)])+
0.99 * [('x6', 1), ('z6,2', 1), ('z6,3', 1)])+
0.010000000000000009 * [('x8', -1), ('z8,4', -1), ('z8,5', -1)])+
0.99 * [('x9', 1), ('z9,5', 1), ('z9,6', 1)])+
0.020000000000000018 * [('x11', 1), ('z11,8', 1), ('z11,1', 1)])+
0.99 * [('x12', 1), ('z12,10', 1), ('z12,3', 1)])+
0.99 * [('x13', 1), ('z13,12', 1), ('z13,5', 1)])+
0.020000000000000018 * [('x14', 1), ('z14,7', 1), ('z14,31', 1)])+
0.020000000000000018 * [('x15', 1), ('z15,7', 1), ('z15,8', 1)])+
0.4750000000000003 * [('x17', 1), ('z17,9', 1), ('z17,10', 1)])+
0.505 * [('x18', 1), ('z18,10', 1), ('z18,11', 1)])+
0.505 * [('x19', 1), ('z19,11', 1), ('z19,12', 1)])+
0.475 * [('x20', 1), ('z20,12', 1), ('z20,31', 1)])+
0.99 * [('x21', 1), ('z21,14', 1), ('z21,7', 1)])+
0.5249999999999997 * [('x22', -1), ('z22,16', -1), ('z22,9', -1)])+
0.99 * [('x23', 1), ('z23,18', 1), ('z23,11', 1)])+
0.99 * [('x24', -1), ('z24,13', -1), ('z24,31', -1)])+
0.02000000000002078 * [('x25', 1), ('z25,13', 1), ('z25,14', 1)])+
0.99 * [('x26', 1), ('z26,14', 1), ('z26,15', 1)])+
0.99 * [('x27', 1), ('z27,15', 1), ('z27,16', 1)])+
0.99 * [('x28', 1), ('z28,16', 1), ('z28,17', 1)])+
0.010000000000000009 * [('x29', -1), ('z29,17', -1), ('z29,18', -1)])+
0.99 * [('x30', 1), ('z30,18', 1), ('z30,31', 1)])+
0.99 * [('x31', -1), ('z31,20', -1), ('z31,13', -1)])+
0.010000000000000009 * [('x32', -1), ('z32,22', -1), ('z32,15', -1)])+
0.010000000000000009 * [('x33', -1), ('z33,24', -1), ('z33,17', -1)])+
0.9799999999999792 * [('x34', -1), ('z34,19', -1), ('z34,31', -1)])+
0.02000000000002078 * [('x35', 1), ('z35,19', 1), ('z35,20', 1)])+
0.010000000000000009 * [('x36', -1), ('z36,20', -1), ('z36,21', -1)])+
0.9799999999999792 * [('x37', -1), ('z37,21', -1), ('z37,22', -1)])+
0.010000000000000009 * [('x38', 1), ('z38,22', 1), ('z38,23', 1)])+
0.505 * [('x39', 1), ('z39,23', 1), ('z39,24', 1)])+
0.505 * [('x40', 1), ('z40,24', 1), ('z40,31', 1)])+
0.99 * [('x41', 1), ('z41,26', 1), ('z41,19', 1)])+
0.020000000000000018 * [('x42', 1), ('z42,28', 1), ('z42,21', 1)])+
0.99 * [('x43', 1), ('z43,30', 1), ('z43,23', 1)])+
0.020000000000000018 * [('x44', 1), ('z44,25', 1), ('z44,31', 1)])+
0.010000000000000009 * [('x45', 1), ('z45,25', 1), ('z45,26', 1)])+
0.010000000000000009 * [('x46', 1), ('z46,26', 1), ('z46,27', 1)])+
0.010000000000000009 * [('x47', 1), ('z47,27', 1), ('z47,28', 1)])+
0.99 * [('x48', 1), ('z48,28', 1), ('z48,29', 1)])+
0.99 * [('x49', 1), ('z49,29', 1), ('z49,30', 1)])+
0.020000000000000018 * [('x50', 1), ('z50,30', 1), ('z50,31', 1)])+
0.020000000000000018 * [('x51', 1), ('z51,25', 1), ('z51,31', 1)])+
0.02000000000002078 * [('x52', 1), ('z52,27', 1), ('z52,31', 1)])+
0.9799999999999792 * [('x53', -1), ('z53,29', -1), ('z53,31', -1)])+
0.020000000000000018 * [('z4,1', -1), ('z5,1', -1), ('z11,1', -1)])+
0.99 * [('z1,2', -1), ('z5,2', -1), ('z6,2', -1)])+
0.99 * [('z2,4', -1), ('z7,4', -1), ('z8,4', -1)])+
0.010000000000000009 * [('z8,5', 1), ('z9,5', 1), ('z13,5', 1)])+
0.98 * [('z14,7', 1), ('z15,7', 1), ('z21,7', 1)])+
0.4750000000000003 * [('z16,9', -1), ('z17,9', -1), ('z22,9', -1)])+
0.010000000000000009 * [('z12,10', 1), ('z17,10', 1), ('z18,10', 1)])+
0.505 * [('z18,11', -1), ('z19,11', -1), ('z23,11', -1)])+
0.475 * [('z13,12', -1), ('z19,12', -1), ('z20,12', -1)])+
0.010000000000000009 * [('z24,13', -1), ('z25,13', -1), ('z31,13', -1)])+
0.010000000000000009 * [('z21,14', 1), ('z25,14', 1), ('z26,14', 1)])+
0.010000000000000009 * [('z26,15', 1), ('z27,15', 1), ('z32,15', 1)])+
0.99 * [('z22,16', -1), ('z27,16', -1), ('z28,16', -1)])+
0.99 * [('z28,17', -1), ('z29,17', -1), ('z33,17', -1)])+
0.99 * [('z23,18', -1), ('z29,18', -1), ('z30,18', -1)])+
0.010000000000000009 * [('z34,19', 1), ('z35,19', 1), ('z41,19', 1)])+
0.010000000000000009 * [('z31,20', -1), ('z35,20', -1), ('z36,20', -1)])+
0.99 * [('z36,21', -1), ('z37,21', -1), ('z42,21', -1)])+
0.99 * [('z32,22', -1), ('z37,22', -1), ('z38,22', -1)])+
0.99 * [('z38,23', 1), ('z39,23', 1), ('z43,23', 1)])+
0.505 * [('z33,24', -1), ('z39,24', -1), ('z40,24', -1)])+
0.99 * [('z44,25', 1), ('z45,25', 1), ('z51,25', 1)])+
0.99 * [('z41,26', 1), ('z45,26', 1), ('z46,26', 1)])+
0.99 * [('z46,27', 1), ('z47,27', 1), ('z52,27', 1)])+
0.010000000000000009 * [('z42,28', 1), ('z47,28', 1), ('z48,28', 1)])+
0.010000000000000009 * [('z48,29', 1), ('z49,29', 1), ('z53,29', 1)])+
0.010000000000000009 * [('z43,30', 1), ('z49,30', 1), ('z50,30', 1)])+
0.99 * [('x1', 1), ('x4', 1), ('x5', 1)])+
0.020000000000000018 * [('x1', 1), ('x2', 1), ('x6', 1), ('x7', 1)])+
0.020000000000000018 * [('x2', 1), ('x3', 1), ('x8', 1), ('x9', 1)])+
0.020000000000000018 * [('x3', -1), ('x10', -1)])+
0.99 * [('x4', 1), ('x11', 1), ('x14', 1), ('x15', 1)])+
0.98 * [('x5', -1), ('x6', -1), ('x11', -1), ('x12', -1), ('x16', -1), ('x17', -1)])+
0.99 * [('x7', 1), ('x8', 1), ('x12', 1), ('x13', 1), ('x18', 1), ('x19', 1)])+
0.020000000000000018 * [('x9', 1), ('x10', 1), ('x13', 1), ('x20', 1)])+
0.99 * [('x14', 1), ('x21', 1), ('x24', 1), ('x25', 1)])+
0.020000000000000018 * [('x15', 1), ('x16', 1), ('x21', 1), ('x22', 1), ('x26', 1), ('x27', 1)])+
0.495 * [('x17', -1), ('x18', -1), ('x22', -1), ('x23', -1), ('x28', -1), ('x29', -1)])+
0.505 * [('x19', 1), ('x20', 1), ('x23', 1), ('x30', 1)])+
0.9899999999999792 * [('x24', 1), ('x31', 1), ('x34', 1), ('x35', 1)])+
0.9899999999999792 * [('x25', 1), ('x26', 1), ('x31', 1), ('x32', 1), ('x36', 1), ('x37', 1)])+
0.505 * [('x27', 1), ('x28', 1), ('x32', 1), ('x33', 1), ('x38', 1), ('x39', 1)])+
0.505 * [('x29', 1), ('x30', 1), ('x33', 1), ('x40', 1)])+
0.99 * [('x34', 1), ('x41', 1), ('x44', 1), ('x45', 1)])+
0.99 * [('x35', 1), ('x36', 1), ('x41', 1), ('x42', 1), ('x46', 1), ('x47', 1)])+
0.99 * [('x37', 1), ('x38', 1), ('x42', 1), ('x43', 1), ('x48', 1), ('x49', 1)])+
0.99 * [('x39', 1), ('x40', 1), ('x43', 1), ('x50', 1)])+
0.99 * [('x44', 1), ('x51', 1)])+
0.99 * [('x45', 1), ('x46', 1), ('x51', 1), ('x52', 1)])+
0.9899999999999792 * [('x47', 1), ('x48', 1), ('x52', 1), ('x53', 1)])+
0.99 * [('x49', 1), ('x50', 1), ('x53', 1)])Default row names c1, c2 ... being created.

Violation: 0.44444444444444287

Iteration log . . .
Iteration:     1   Dual objective     =            53.000000
New point to separate:  [('x1', 1.0), ('x2', 0.9142857142857144), ('x3', 1.0), ('x4', 0.08571428571428563), ('x5', 0.9142857142857144), ('x6', 0.08571428571428563), ('x8', 0.08571428571428563), ('x10', 1.0), ('x11', 0.9142857142857144), ('x13', 0.9142857142857144), ('x14', 0.4571428571428572), ('x15', 0.5428571428571428), ('x17', 0.08571428571428563), ('x18', 0.08571428571428541), ('x19', 0.9142857142857146), ('x20', 0.08571428571428563), ('x21', 0.5428571428571428), ('x22', 0.9142857142857144), ('x23', 0.3428571428571425), ('x24', 0.05714285714285716), ('x25', 0.9428571428571428), ('x28', 0.571428571428572), ('x30', 0.6571428571428575), ('x33', 0.8857142857142852), ('x34', 1.0), ('x35', 0.9428571428571428), ('x36', 0.1142857142857144), ('x37', 0.9428571428571428), ('x39', 0.5428571428571427), ('x40', 0.4571428571428573), ('x42', 0.9428571428571428), ('x43', 0.05714285714285716), ('x44', 1.0), ('x49', 0.05714285714285716), ('x50', 0.9428571428571428), ('x51', 1.0), ('x52', 1.0), ('x53', 1.0), ('z2,4', 0.08571428571428563), ('z4,1', 0.9142857142857144), ('z5,2', 0.08571428571428563), ('z6,2', 0.9142857142857144), ('z7,3', 1.0), ('z8,4', 0.9142857142857144), ('z9,5', 1.0), ('z11,1', 0.08571428571428563), ('z12,10', 1.0), ('z13,12', 0.08571428571428563), ('z14,7', 0.5428571428571428), ('z15,7', 0.4571428571428572), ('z16,8', 1.0), ('z17,9', 0.9142857142857144), ('z18,11', 0.9142857142857146), ('z19,11', 0.08571428571428541), ('z20,12', 0.9142857142857144), ('z21,14', 0.4571428571428572), ('z22,9', 0.08571428571428563), ('z23,18', 0.6571428571428575), ('z24,13', 0.9428571428571428), ('z25,13', 0.05714285714285716), ('z26,14', 0.5428571428571428), ('z26,15', 0.4571428571428572), ('z27,15', 0.42857142857142805), ('z27,16', 0.571428571428572), ('z28,16', 0.42857142857142805), ('z29,17', 1.0), ('z30,18', 0.3428571428571425), ('z31,20', 1.0), ('z32,22', 0.8857142857142852), ('z32,15', 0.11428571428571477), ('z33,24', 0.11428571428571477), ('z35,19', 0.05714285714285716), ('z36,21', 0.8857142857142856), ('z37,21', 0.05714285714285716), ('z38,22', 0.11428571428571477), ('z38,23', 0.8857142857142852), ('z39,23', 0.11428571428571477), ('z39,24', 0.3428571428571425), ('z40,24', 0.5428571428571427), ('z41,26', 0.05714285714285716), ('z41,19', 0.9428571428571428), ('z42,21', 0.05714285714285716), ('z43,30', 0.9428571428571428), ('z45,25', 1.0), ('z46,26', 0.9428571428571428), ('z46,27', 0.05714285714285716), ('z47,27', 0.9428571428571428), ('z47,28', 0.05714285714285716), ('z48,28', 0.9428571428571428), ('z48,29', 0.05714285714285716), ('z49,29', 0.9428571428571428), ('z50,30', 0.05714285714285716)]
Objective value:  53.0
Default row names c1, c2 ... being created.
Finding a cutting plane...
Found incumbent of value 0.000000 after 0.00 sec. (0.01 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 1 rows and 120 columns.
Reduced MIP has 93 rows, 283 columns, and 496 nonzeros.
Reduced MIP has 0 binaries, 93 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.39 ticks)
Tried aggregator 1 time.
Reduced MIP has 93 rows, 283 columns, and 496 nonzeros.
Reduced MIP has 0 binaries, 93 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.23 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.00 sec. (0.25 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      202.0000              --- 
      0     0        0.9900    39        0.0000        0.9900      120     --- 
      0     0        0.9900    10        0.0000     Cuts: 117      146     --- 
      0     0        0.9900    10        0.0000   MIRcuts: 15      156     --- 
      0     0        0.9900    13        0.0000   MIRcuts: 18      164     --- 
      0     2        0.9900    13        0.0000        0.9900      164     --- 
Elapsed time = 0.03 sec. (10.08 ticks, tree = 0.01 MB, solutions = 1)
*   160+   93                            0.4571        0.9900           116.56%
   4283  2673        0.9888     7        0.4571        0.9900    10212  116.56%
   4936   293        0.9226    10        0.4571        0.9900    13060  116.56%
   6755  1818        0.9023    15        0.4571        0.9900    16687  116.56%
  14817  6708        0.9717    11        0.4571        0.9900    31960  116.56%
  27858 14346    infeasible              0.4571        0.9900    52340  116.56%
  39613 23235        0.5316     5        0.4571        0.9900    76698  116.56%
  54447 32235        0.6466     8        0.4571        0.9900   102481  116.56%
  69068 44061        0.5021     1        0.4571        0.9900   135846  116.56%
  83198 54092        0.4893     1        0.4571        0.9900   164878  116.56%

Mixed integer rounding cuts applied:  23
Gomory fractional cuts applied:  17

Root node processing (before b&c):
  Real time             =    0.03 sec. (9.98 ticks)
Parallel b&c, 4 threads:
  Real time             =    6.05 sec. (2624.86 ticks)
  Sync time (average)   =    0.40 sec.
  Wait time (average)   =    0.24 sec.
                          ------------
Total (root+branch&cut) =    6.08 sec. (2634.84 ticks)
Variables that need flooring, and amount to floor: [('x7', 0.009999999999999787), ('x9', 0.010000000000000009), ('x12', 0.020000000000000018), ('x16', 0.010000000000000009), ('x26', 0.47499999999999964), ('x27', 0.4949999999999999), ('x29', 0.97), ('x31', 0.9699999999999998), ('x32', 0.99), ('x38', 0.99), ('x45', 0.9699999999999998), ('z1,2', 2.220446049250313e-16), ('z1,31', 0.9700000000000002), ('z2,31', 0.99), ('z4,31', 0.99), ('z5,1', 0.98), ('z6,3', 0.98), ('z8,5', 0.99), ('z11,8', 0.99), ('z12,3', 0.010000000000000009), ('z13,5', 0.99), ('z14,31', 0.010000000000000009), ('z15,8', 0.010000000000000009), ('z16,9', 0.505), ('z17,10', 0.495), ('z18,10', 0.99), ('z20,31', 0.99), ('z22,16', 0.525), ('z23,11', 0.5150000000000001), ('z24,31', 0.5149999999999999), ('z25,14', 0.5249999999999999), ('z28,17', 0.010000000000000009), ('z29,18', 0.485), ('z30,31', 0.505), ('z31,13', 0.4750000000000001), ('z33,17', 0.020000000000000018), ('z34,31', 0.020000000000000018), ('z35,20', 0.030000000000000027), ('z36,20', 0.030000000000000027), ('z37,22', 0.030000000000000027), ('z40,31', 0.020000000000000018), ('z43,23', 0.030000000000000027), ('z44,25', 0.030000000000000027), ('z44,31', 0.020000000000000018), ('z45,26', 0.97), ('z50,31', 0.020000000000000018), ('z51,25', 0.030000000000000027), ('z51,31', 0.020000000000000018), ('z52,31', 0.020000000000000018), ('z53,31', 0.020000000000000018)]
Found cutting plane:  [('x1', 2), ('x2', 2), ('x3', 1), ('x4', 1), ('x5', 2), ('x6', 2), ('x7', 2), ('x8', 2), ('x11', 1), ('x12', 1), ('x13', 1), ('x14', -1), ('x16', 1), ('x18', 1), ('x19', 2), ('x20', 1), ('x22', 1), ('x24', 2), ('x25', 2), ('x26', 2), ('x28', -1), ('x29', 1), ('x30', 2), ('x31', 2), ('x33', -1), ('x34', 2), ('x35', 2), ('x36', 2), ('x37', 2), ('x40', 2), ('x41', 2), ('x42', 2), ('x43', 2), ('x44', 2), ('x45', 2), ('x46', 2), ('x47', 2), ('x48', 2), ('x49', 2), ('x50', 2), ('x51', 2), ('x52', 1), ('x53', 2), ('z5,1', -1), ('z7,3', 1), ('z14,7', -1), ('z14,31', -1), ('z16,9', -1), ('z17,9', -1), ('z17,10', -1), ('z21,14', -1), ('z21,7', -1), ('z22,16', -1), ('z23,18', -1), ('z23,11', -2), ('z26,14', 1), ('z28,16', -1), ('z29,17', 1), ('z31,20', 1), ('z32,22', 1), ('z33,24', -1), ('z33,17', -1), ('z36,21', 1), ('z37,21', 1), ('z38,22', 1), ('z38,23', 1), ('z41,26', 1), ('z42,28', 1), ('z42,21', 1), ('z45,25', 1), ('z45,26', 1), ('z46,26', 1), ('z46,27', 1), ('z47,27', 1), ('z47,28', 1), ('z48,28', 1), ('z52,31', -1)]
Found cutting plane: <= 38.0
Linear combination is: 
0.9700000000000002 * [('x1', 1), ('z1,2', 1), ('z1,31', 1)])+
0.99 * [('x2', 1), ('z2,4', 1), ('z2,31', 1)])+
0.99 * [('x4', 1), ('z4,1', 1), ('z4,31', 1)])+
0.97 * [('x5', 1), ('z5,1', 1), ('z5,2', 1)])+
0.97 * [('x6', 1), ('z6,2', 1), ('z6,3', 1)])+
0.99 * [('x7', 1), ('z7,3', 1), ('z7,4', 1)])+
0.99 * [('x8', 1), ('z8,4', 1), ('z8,5', 1)])+
0.99 * [('x11', 1), ('z11,8', 1), ('z11,1', 1)])+
0.99 * [('x13', 1), ('z13,12', 1), ('z13,5', 1)])+
0.99 * [('x14', -1), ('z14,7', -1), ('z14,31', -1)])+
0.010000000000000009 * [('x15', 1), ('z15,7', 1), ('z15,8', 1)])+
0.505 * [('x17', -1), ('z17,9', -1), ('z17,10', -1)])+
0.99 * [('x18', 1), ('z18,10', 1), ('z18,11', 1)])+
0.99 * [('x19', 1), ('z19,11', 1), ('z19,12', 1)])+
0.99 * [('x20', 1), ('z20,12', 1), ('z20,31', 1)])+
0.99 * [('x21', -1), ('z21,14', -1), ('z21,7', -1)])+
0.515 * [('x22', 1), ('z22,16', 1), ('z22,9', 1)])+
0.495 * [('x23', -1), ('z23,18', -1), ('z23,11', -1)])+
0.5149999999999999 * [('x24', 1), ('z24,13', 1), ('z24,31', 1)])+
0.5149999999999999 * [('x25', 1), ('z25,13', 1), ('z25,14', 1)])+
0.99 * [('x26', 1), ('z26,14', 1), ('z26,15', 1)])+
0.99 * [('x27', 1), ('z27,15', 1), ('z27,16', 1)])+
0.99 * [('x29', 1), ('z29,17', 1), ('z29,18', 1)])+
0.505 * [('x30', 1), ('z30,18', 1), ('z30,31', 1)])+
0.99 * [('x31', 1), ('z31,20', 1), ('z31,13', 1)])+
0.99 * [('x32', 1), ('z32,22', 1), ('z32,15', 1)])+
0.99 * [('x33', -1), ('z33,24', -1), ('z33,17', -1)])+
0.020000000000000018 * [('x34', 1), ('z34,19', 1), ('z34,31', 1)])+
0.020000000000000018 * [('x35', 1), ('z35,19', 1), ('z35,20', 1)])+
0.020000000000000018 * [('x36', 1), ('z36,20', 1), ('z36,21', 1)])+
0.020000000000000018 * [('x37', 1), ('z37,21', 1), ('z37,22', 1)])+
0.99 * [('x38', 1), ('z38,22', 1), ('z38,23', 1)])+
0.020000000000000018 * [('x40', 1), ('z40,24', 1), ('z40,31', 1)])+
0.020000000000000018 * [('x41', 1), ('z41,26', 1), ('z41,19', 1)])+
0.020000000000000018 * [('x42', 1), ('z42,28', 1), ('z42,21', 1)])+
0.020000000000000018 * [('x43', 1), ('z43,30', 1), ('z43,23', 1)])+
0.020000000000000018 * [('x44', 1), ('z44,25', 1), ('z44,31', 1)])+
0.99 * [('x45', 1), ('z45,25', 1), ('z45,26', 1)])+
0.020000000000000018 * [('x46', 1), ('z46,26', 1), ('z46,27', 1)])+
0.020000000000000018 * [('x47', 1), ('z47,27', 1), ('z47,28', 1)])+
0.020000000000000018 * [('x48', 1), ('z48,28', 1), ('z48,29', 1)])+
0.020000000000000018 * [('x49', 1), ('z49,29', 1), ('z49,30', 1)])+
0.020000000000000018 * [('x50', 1), ('z50,30', 1), ('z50,31', 1)])+
0.020000000000000018 * [('x51', 1), ('z51,25', 1), ('z51,31', 1)])+
0.98 * [('x52', -1), ('z52,27', -1), ('z52,31', -1)])+
0.020000000000000018 * [('x53', 1), ('z53,29', 1), ('z53,31', 1)])+
0.99 * [('z4,1', -1), ('z5,1', -1), ('z11,1', -1)])+
0.97 * [('z1,2', -1), ('z5,2', -1), ('z6,2', -1)])+
0.010000000000000009 * [('z6,3', 1), ('z7,3', 1), ('z12,3', 1)])+
0.99 * [('z2,4', -1), ('z7,4', -1), ('z8,4', -1)])+
0.010000000000000009 * [('z14,7', -1), ('z15,7', -1), ('z21,7', -1)])+
0.495 * [('z16,9', -1), ('z17,9', -1), ('z22,9', -1)])+
0.99 * [('z18,11', -1), ('z19,11', -1), ('z23,11', -1)])+
0.99 * [('z13,12', -1), ('z19,12', -1), ('z20,12', -1)])+
0.5149999999999999 * [('z24,13', -1), ('z25,13', -1), ('z31,13', -1)])+
0.010000000000000009 * [('z21,14', 1), ('z25,14', 1), ('z26,14', 1)])+
0.99 * [('z26,15', -1), ('z27,15', -1), ('z32,15', -1)])+
0.99 * [('z22,16', -1), ('z27,16', -1), ('z28,16', -1)])+
0.010000000000000009 * [('z28,17', 1), ('z29,17', 1), ('z33,17', 1)])+
0.505 * [('z23,18', -1), ('z29,18', -1), ('z30,18', -1)])+
0.020000000000000018 * [('z34,19', -1), ('z35,19', -1), ('z41,19', -1)])+
0.010000000000000009 * [('z31,20', 1), ('z35,20', 1), ('z36,20', 1)])+
0.98 * [('z36,21', 1), ('z37,21', 1), ('z42,21', 1)])+
0.010000000000000009 * [('z32,22', 1), ('z37,22', 1), ('z38,22', 1)])+
0.010000000000000009 * [('z38,23', 1), ('z39,23', 1), ('z43,23', 1)])+
0.010000000000000009 * [('z44,25', 1), ('z45,25', 1), ('z51,25', 1)])+
0.98 * [('z41,26', 1), ('z45,26', 1), ('z46,26', 1)])+
0.98 * [('z46,27', 1), ('z47,27', 1), ('z52,27', 1)])+
0.98 * [('z42,28', 1), ('z47,28', 1), ('z48,28', 1)])+
0.020000000000000018 * [('z48,29', -1), ('z49,29', -1), ('z53,29', -1)])+
0.020000000000000018 * [('z43,30', -1), ('z49,30', -1), ('z50,30', -1)])+
0.5149999999999999 * [('x1', 1), ('x4', 1), ('x5', 1)])+
0.5149999999999999 * [('x1', 1), ('x2', 1), ('x6', 1), ('x7', 1)])+
0.505 * [('x2', 1), ('x3', 1), ('x8', 1), ('x9', 1)])+
0.495 * [('x3', 1), ('x10', 1)])+
0.505 * [('x4', -1), ('x11', -1), ('x14', -1), ('x15', -1)])+
0.515 * [('x5', 1), ('x6', 1), ('x11', 1), ('x12', 1), ('x16', 1), ('x17', 1)])+
0.505 * [('x7', 1), ('x8', 1), ('x12', 1), ('x13', 1), ('x18', 1), ('x19', 1)])+
0.495 * [('x9', -1), ('x10', -1), ('x13', -1), ('x20', -1)])+
0.495 * [('x14', 1), ('x21', 1), ('x24', 1), ('x25', 1)])+
0.495 * [('x15', 1), ('x16', 1), ('x21', 1), ('x22', 1), ('x26', 1), ('x27', 1)])+
0.010000000000000009 * [('x17', -1), ('x18', -1), ('x22', -1), ('x23', -1), ('x28', -1), ('x29', -1)])+
0.505 * [('x19', 1), ('x20', 1), ('x23', 1), ('x30', 1)])+
0.99 * [('x24', 1), ('x31', 1), ('x34', 1), ('x35', 1)])+
0.99 * [('x25', 1), ('x26', 1), ('x31', 1), ('x32', 1), ('x36', 1), ('x37', 1)])+
0.99 * [('x27', -1), ('x28', -1), ('x32', -1), ('x33', -1), ('x38', -1), ('x39', -1)])+
0.99 * [('x29', 1), ('x30', 1), ('x33', 1), ('x40', 1)])+
0.99 * [('x34', 1), ('x41', 1), ('x44', 1), ('x45', 1)])+
0.99 * [('x35', 1), ('x36', 1), ('x41', 1), ('x42', 1), ('x46', 1), ('x47', 1)])+
0.99 * [('x37', 1), ('x38', 1), ('x42', 1), ('x43', 1), ('x48', 1), ('x49', 1)])+
0.99 * [('x39', 1), ('x40', 1), ('x43', 1), ('x50', 1)])+
0.99 * [('x44', 1), ('x51', 1)])+
0.99 * [('x45', 1), ('x46', 1), ('x51', 1), ('x52', 1)])+
0.99 * [('x47', 1), ('x48', 1), ('x52', 1), ('x53', 1)])+
0.99 * [('x49', 1), ('x50', 1), ('x53', 1)])Default row names c1, c2 ... being created.

Violation: 0.4571428571428626

Iteration log . . .
Iteration:     1   Dual objective     =            53.000000
Perturbation started.
Iteration:    51   Dual objective     =            53.000000
Removing perturbation.
New point to separate:  [('x1', 1.0), ('x2', 0.95), ('x3', 1.0), ('x4', 0.050000000000000044), ('x5', 0.95), ('x7', 0.050000000000000044), ('x8', 0.050000000000000044), ('x10', 1.0), ('x11', 0.95), ('x13', 0.8999999999999999), ('x14', 0.8499999999999996), ('x15', 0.15000000000000036), ('x17', 0.10000000000000003), ('x18', 0.10000000000000009), ('x19', 0.8999999999999999), ('x20', 0.10000000000000009), ('x21', 0.55), ('x22', 0.8999999999999999), ('x25', 0.6000000000000003), ('x26', 0.3999999999999997), ('x28', 0.8999999999999999), ('x30', 1.0), ('x33', 0.55), ('x34', 1.0), ('x35', 1.0), ('x37', 1.0), ('x39', 0.55), ('x40', 0.44999999999999996), ('x42', 1.0), ('x44', 1.0), ('x50', 1.0), ('x51', 1.0), ('x52', 1.0), ('x53', 1.0), ('z2,4', 0.050000000000000044), ('z4,1', 0.95), ('z5,2', 0.050000000000000044), ('z6,2', 0.95), ('z6,3', 0.050000000000000044), ('z7,3', 0.95), ('z8,4', 0.95), ('z9,5', 1.0), ('z11,1', 0.050000000000000044), ('z12,10', 1.0), ('z13,12', 0.10000000000000009), ('z14,7', 0.15000000000000036), ('z15,7', 0.8499999999999996), ('z16,8', 1.0), ('z17,9', 0.8999999999999999), ('z18,11', 0.8999999999999999), ('z19,11', 0.10000000000000009), ('z20,12', 0.8999999999999999), ('z21,14', 0.44999999999999996), ('z22,9', 0.10000000000000009), ('z23,18', 1.0), ('z24,13', 1.0), ('z25,14', 0.3999999999999997), ('z26,14', 0.15000000000000036), ('z26,15', 0.44999999999999996), ('z27,15', 0.10000000000000009), ('z27,16', 0.8999999999999999), ('z28,16', 0.10000000000000009), ('z29,17', 1.0), ('z31,20', 1.0), ('z32,22', 0.55), ('z32,15', 0.44999999999999996), ('z33,24', 0.44999999999999996), ('z36,21', 1.0), ('z38,22', 0.44999999999999996), ('z38,23', 0.55), ('z39,23', 0.44999999999999996), ('z40,24', 0.55), ('z41,19', 1.0), ('z43,30', 1.0), ('z45,25', 1.0), ('z46,26', 1.0), ('z47,27', 1.0), ('z48,28', 1.0), ('z49,29', 1.0)]
Objective value:  53.0
Default row names c1, c2 ... being created.
Finding a cutting plane...
Found incumbent of value 0.000000 after 0.00 sec. (0.01 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 1 rows and 129 columns.
Reduced MIP has 80 rows, 249 columns, and 424 nonzeros.
Reduced MIP has 0 binaries, 80 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.35 ticks)
Tried aggregator 1 time.
Reduced MIP has 80 rows, 249 columns, and 424 nonzeros.
Reduced MIP has 0 binaries, 80 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.20 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.00 sec. (0.22 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      202.0000              --- 
      0     0        0.9900    31        0.0000        0.9900       99     --- 
      0     0        0.9900    10        0.0000      Cuts: 93      124     --- 
      0     0        0.9900     4        0.0000   MIRcuts: 14      131     --- 
      0     0        0.9900     5        0.0000    MIRcuts: 6      134     --- 
      0     0        0.9900     4        0.0000   MIRcuts: 10      135     --- 
      0     2        0.9900     4        0.0000        0.9900      135     --- 
Elapsed time = 0.02 sec. (6.94 ticks, tree = 0.01 MB, solutions = 1)
*   624+  456                            0.5000        0.9900            98.00%
   4835  4115        0.9900    33        0.5000        0.9900     9844   98.00%
   6135   741        0.9900    15        0.5000        0.9900    11945   98.00%
  10390  2590        0.5890    10        0.5000        0.9900    18416   98.00%
  24323  8949        0.9373    14        0.5000        0.9900    48131   98.00%
  37038 15677        0.9900    15        0.5000        0.9900    78467   98.00%
  53038 23018        cutoff              0.5000        0.9900   113054   98.00%
  68459 32194        cutoff              0.5000        0.9900   153650   98.00%
  83485 38040        0.5860     9        0.5000        0.9900   182466   98.00%
  97757 44347        0.5602    10        0.5000        0.9900   214506   98.00%

Mixed integer rounding cuts applied:  1
Gomory fractional cuts applied:  20

Root node processing (before b&c):
  Real time             =    0.02 sec. (6.86 ticks)
Parallel b&c, 4 threads:
  Real time             =    6.10 sec. (2421.45 ticks)
  Sync time (average)   =    0.33 sec.
  Wait time (average)   =    0.29 sec.
                          ------------
Total (root+branch&cut) =    6.13 sec. (2428.30 ticks)
Variables that need flooring, and amount to floor: [('x6', 0.4950000000000019), ('x9', 0.05999999999999339), ('x12', 0.46500000000000163), ('x16', 0.9900000000000029), ('x23', 0.020000000000000018), ('x24', 0.49500000000000144), ('x27', 0.48500000000000143), ('x31', 0.48500000000000143), ('x32', 0.4850000000000012), ('x36', 0.5050000000000014), ('x38', 0.9699999999999998), ('x41', 0.9699999999999998), ('x45', 0.99), ('x46', 0.99), ('x47', 0.9699999999999998), ('x48', 0.9699999999999998), ('x49', 0.99), ('z1,2', 0.9600000000000029), ('z1,31', 0.99), ('z2,31', 0.99), ('z4,31', 0.010000000000000009), ('z5,1', 0.01999999999999713), ('z7,4', 0.04999999999999383), ('z8,5', 0.9800000000000033), ('z11,8', 0.010000000000000009), ('z12,3', 0.9600000000000029), ('z13,5', 0.9800000000000033), ('z14,31', 0.99), ('z15,8', 0.99), ('z16,9', 0.5250000000000015), ('z17,10', 0.5049999999999986), ('z19,12', 0.039999999999996705), ('z20,31', 0.9800000000000033), ('z21,7', 0.9999999999999971), ('z22,16', 0.48499999999999854), ('z23,11', 0.020000000000000018), ('z25,13', 0.9899999999999971), ('z29,18', 0.98), ('z30,18', 0.010000000000000009), ('z30,31', 0.020000000000000018), ('z31,13', 0.99), ('z33,17', 0.030000000000000027), ('z34,19', 0.030000000000000027), ('z34,31', 0.020000000000000018), ('z35,19', 0.030000000000000027), ('z35,20', 0.030000000000000027), ('z36,20', 0.020000000000000018), ('z37,21', 0.49499999999999855), ('z37,22', 0.5149999999999986), ('z40,31', 0.99), ('z41,26', 0.98), ('z42,28', 0.030000000000000027), ('z42,21', 0.010000000000000009), ('z44,25', 0.010000000000000009), ('z44,31', 0.020000000000000018), ('z46,27', 0.020000000000000018), ('z48,29', 0.98), ('z49,30', 0.020000000000000018), ('z50,31', 0.99), ('z51,25', 0.010000000000000009), ('z51,31', 0.020000000000000018), ('z52,27', 0.030000000000000027), ('z52,31', 0.020000000000000018), ('z53,29', 0.010000000000000009), ('z53,31', 0.020000000000000018)]
Found cutting plane:  [('x1', 2), ('x2', 2), ('x4', 1), ('x6', 1), ('x7', 2), ('x8', 2), ('x9', -1), ('x10', -1), ('x12', 2), ('x13', 1), ('x14', 2), ('x15', 1), ('x17', 1), ('x18', 2), ('x19', 2), ('x20', 1), ('x21', 2), ('x22', 1), ('x23', 1), ('x24', 1), ('x25', 2), ('x26', 2), ('x27', 1), ('x28', 2), ('x29', 1), ('x30', 2), ('x31', 1), ('x32', 2), ('x33', 2), ('x34', 2), ('x35', 1), ('x37', 2), ('x38', 2), ('x39', 2), ('x40', 2), ('x41', 2), ('x42', 2), ('x43', 2), ('x44', 2), ('x45', 1), ('x46', 1), ('x47', 2), ('x48', 2), ('x50', 2), ('x51', 2), ('x52', 2), ('x53', 1), ('z5,1', -1), ('z5,2', -1), ('z7,4', -1), ('z11,8', -1), ('z11,1', -1), ('z12,10', 1), ('z13,12', 1), ('z14,7', 1), ('z15,8', -1), ('z16,9', -1), ('z18,10', 1), ('z18,11', 1), ('z20,12', 1), ('z21,14', 1), ('z22,16', -1), ('z23,18', 1), ('z25,14', 1), ('z26,14', 1), ('z27,15', -1), ('z27,16', -1), ('z29,17', -1), ('z30,18', 1), ('z31,20', -1), ('z31,13', -1), ('z33,24', -1), ('z33,17', -1), ('z35,19', -1), ('z35,20', -2), ('z36,20', -2), ('z36,21', -1), ('z37,22', -1), ('z38,23', 1), ('z39,23', 1), ('z41,26', 1), ('z41,19', 1), ('z43,30', 1), ('z43,23', 1), ('z44,25', 1), ('z45,25', 1), ('z45,26', 1), ('z46,26', 1), ('z47,27', 1), ('z47,28', 1), ('z48,28', 1), ('z49,29', -1), ('z49,30', -1), ('z50,30', 1), ('z51,25', 1), ('z53,29', -1), ('z53,31', -1)]
Found cutting plane: <= 41.0
Linear combination is: 
0.99 * [('x1', 1), ('z1,2', 1), ('z1,31', 1)])+
0.99 * [('x2', 1), ('z2,4', 1), ('z2,31', 1)])+
0.010000000000000009 * [('x4', 1), ('z4,1', 1), ('z4,31', 1)])+
0.9700000000000029 * [('x5', -1), ('z5,1', -1), ('z5,2', -1)])+
0.02999999999999714 * [('x6', 1), ('z6,2', 1), ('z6,3', 1)])+
0.029999999999996696 * [('x7', 1), ('z7,3', 1), ('z7,4', 1)])+
0.9800000000000033 * [('x8', 1), ('z8,4', 1), ('z8,5', 1)])+
0.99 * [('x11', -1), ('z11,8', -1), ('z11,1', -1)])+
0.99 * [('x12', 1), ('z12,10', 1), ('z12,3', 1)])+
0.9800000000000033 * [('x13', 1), ('z13,12', 1), ('z13,5', 1)])+
0.99 * [('x14', 1), ('z14,7', 1), ('z14,31', 1)])+
0.010000000000000009 * [('x15', -1), ('z15,7', -1), ('z15,8', -1)])+
0.49499999999999855 * [('x17', 1), ('z17,9', 1), ('z17,10', 1)])+
0.99 * [('x18', 1), ('z18,10', 1), ('z18,11', 1)])+
0.020000000000000018 * [('x19', 1), ('z19,11', 1), ('z19,12', 1)])+
0.9800000000000033 * [('x20', 1), ('z20,12', 1), ('z20,31', 1)])+
0.9899999999999971 * [('x21', 1), ('z21,14', 1), ('z21,7', 1)])+
0.47499999999999853 * [('x22', 1), ('z22,16', 1), ('z22,9', 1)])+
0.010000000000000009 * [('x23', 1), ('z23,18', 1), ('z23,11', 1)])+
0.9899999999999971 * [('x25', 1), ('z25,13', 1), ('z25,14', 1)])+
0.99 * [('x26', 1), ('z26,14', 1), ('z26,15', 1)])+
0.010000000000000009 * [('x27', -1), ('z27,15', -1), ('z27,16', -1)])+
0.99 * [('x28', 1), ('z28,16', 1), ('z28,17', 1)])+
0.010000000000000009 * [('x29', -1), ('z29,17', -1), ('z29,18', -1)])+
0.020000000000000018 * [('x30', 1), ('z30,18', 1), ('z30,31', 1)])+
0.010000000000000009 * [('x31', -1), ('z31,20', -1), ('z31,13', -1)])+
0.99 * [('x32', 1), ('z32,22', 1), ('z32,15', 1)])+
0.020000000000000018 * [('x33', 1), ('z33,24', 1), ('z33,17', 1)])+
0.020000000000000018 * [('x34', 1), ('z34,19', 1), ('z34,31', 1)])+
0.98 * [('x35', -1), ('z35,19', -1), ('z35,20', -1)])+
0.99 * [('x36', -1), ('z36,20', -1), ('z36,21', -1)])+
0.5049999999999986 * [('x37', 1), ('z37,21', 1), ('z37,22', 1)])+
0.99 * [('x38', 1), ('z38,22', 1), ('z38,23', 1)])+
0.99 * [('x39', 1), ('z39,23', 1), ('z39,24', 1)])+
0.99 * [('x40', 1), ('z40,24', 1), ('z40,31', 1)])+
0.99 * [('x41', 1), ('z41,26', 1), ('z41,19', 1)])+
0.020000000000000018 * [('x42', 1), ('z42,28', 1), ('z42,21', 1)])+
0.99 * [('x43', 1), ('z43,30', 1), ('z43,23', 1)])+
0.020000000000000018 * [('x44', 1), ('z44,25', 1), ('z44,31', 1)])+
0.010000000000000009 * [('x45', 1), ('z45,25', 1), ('z45,26', 1)])+
0.010000000000000009 * [('x46', 1), ('z46,26', 1), ('z46,27', 1)])+
0.99 * [('x47', 1), ('z47,27', 1), ('z47,28', 1)])+
0.99 * [('x48', 1), ('z48,28', 1), ('z48,29', 1)])+
0.99 * [('x49', -1), ('z49,29', -1), ('z49,30', -1)])+
0.99 * [('x50', 1), ('z50,30', 1), ('z50,31', 1)])+
0.020000000000000018 * [('x51', 1), ('z51,25', 1), ('z51,31', 1)])+
0.020000000000000018 * [('x52', 1), ('z52,27', 1), ('z52,31', 1)])+
0.98 * [('x53', -1), ('z53,29', -1), ('z53,31', -1)])+
0.010000000000000009 * [('z4,1', -1), ('z5,1', -1), ('z11,1', -1)])+
0.02999999999999714 * [('z1,2', -1), ('z5,2', -1), ('z6,2', -1)])+
0.02999999999999714 * [('z6,3', -1), ('z7,3', -1), ('z12,3', -1)])+
0.9800000000000029 * [('z2,4', -1), ('z7,4', -1), ('z8,4', -1)])+
0.010000000000000009 * [('z14,7', 1), ('z15,7', 1), ('z21,7', 1)])+
0.47499999999999853 * [('z16,9', -1), ('z17,9', -1), ('z22,9', -1)])+
0.010000000000000009 * [('z12,10', 1), ('z17,10', 1), ('z18,10', 1)])+
0.010000000000000009 * [('z18,11', 1), ('z19,11', 1), ('z23,11', 1)])+
0.019999999999996687 * [('z13,12', 1), ('z19,12', 1), ('z20,12', 1)])+
0.010000000000002895 * [('z21,14', 1), ('z25,14', 1), ('z26,14', 1)])+
0.99 * [('z26,15', -1), ('z27,15', -1), ('z32,15', -1)])+
0.99 * [('z22,16', -1), ('z27,16', -1), ('z28,16', -1)])+
0.99 * [('z28,17', -1), ('z29,17', -1), ('z33,17', -1)])+
0.99 * [('z23,18', 1), ('z29,18', 1), ('z30,18', 1)])+
0.010000000000000009 * [('z34,19', 1), ('z35,19', 1), ('z41,19', 1)])+
0.99 * [('z31,20', -1), ('z35,20', -1), ('z36,20', -1)])+
0.010000000000000009 * [('z36,21', -1), ('z37,21', -1), ('z42,21', -1)])+
0.99 * [('z32,22', -1), ('z37,22', -1), ('z38,22', -1)])+
0.010000000000000009 * [('z38,23', 1), ('z39,23', 1), ('z43,23', 1)])+
0.99 * [('z33,24', -1), ('z39,24', -1), ('z40,24', -1)])+
0.99 * [('z44,25', 1), ('z45,25', 1), ('z51,25', 1)])+
0.99 * [('z41,26', 1), ('z45,26', 1), ('z46,26', 1)])+
0.010000000000000009 * [('z46,27', 1), ('z47,27', 1), ('z52,27', 1)])+
0.010000000000000009 * [('z42,28', 1), ('z47,28', 1), ('z48,28', 1)])+
0.010000000000000009 * [('z48,29', -1), ('z49,29', -1), ('z53,29', -1)])+
0.010000000000000009 * [('z43,30', 1), ('z49,30', 1), ('z50,30', 1)])+
0.48500000000000143 * [('x1', 1), ('x4', 1), ('x5', 1)])+
0.9800000000000033 * [('x1', 1), ('x2', 1), ('x6', 1), ('x7', 1)])+
0.029999999999996696 * [('x2', 1), ('x3', 1), ('x8', 1), ('x9', 1)])+
0.029999999999996696 * [('x3', -1), ('x10', -1)])+
0.5049999999999986 * [('x4', 1), ('x11', 1), ('x14', 1), ('x15', 1)])+
0.48500000000000143 * [('x5', 1), ('x6', 1), ('x11', 1), ('x12', 1), ('x16', 1), ('x17', 1)])+
0.99 * [('x7', 1), ('x8', 1), ('x12', 1), ('x13', 1), ('x18', 1), ('x19', 1)])+
0.9700000000000033 * [('x9', -1), ('x10', -1), ('x13', -1), ('x20', -1)])+
0.5050000000000014 * [('x14', 1), ('x21', 1), ('x24', 1), ('x25', 1)])+
0.5050000000000014 * [('x15', 1), ('x16', 1), ('x21', 1), ('x22', 1), ('x26', 1), ('x27', 1)])+
0.020000000000000018 * [('x17', 1), ('x18', 1), ('x22', 1), ('x23', 1), ('x28', 1), ('x29', 1)])+
0.99 * [('x19', 1), ('x20', 1), ('x23', 1), ('x30', 1)])+
0.99 * [('x24', 1), ('x31', 1), ('x34', 1), ('x35', 1)])+
0.5050000000000014 * [('x25', 1), ('x26', 1), ('x31', 1), ('x32', 1), ('x36', 1), ('x37', 1)])+
0.99 * [('x27', 1), ('x28', 1), ('x32', 1), ('x33', 1), ('x38', 1), ('x39', 1)])+
0.99 * [('x29', 1), ('x30', 1), ('x33', 1), ('x40', 1)])+
0.99 * [('x34', 1), ('x41', 1), ('x44', 1), ('x45', 1)])+
0.99 * [('x35', 1), ('x36', 1), ('x41', 1), ('x42', 1), ('x46', 1), ('x47', 1)])+
0.99 * [('x37', 1), ('x38', 1), ('x42', 1), ('x43', 1), ('x48', 1), ('x49', 1)])+
0.020000000000000018 * [('x39', 1), ('x40', 1), ('x43', 1), ('x50', 1)])+
0.99 * [('x44', 1), ('x51', 1)])+
0.99 * [('x45', 1), ('x46', 1), ('x51', 1), ('x52', 1)])+
0.99 * [('x47', 1), ('x48', 1), ('x52', 1), ('x53', 1)])+
0.99 * [('x49', 1), ('x50', 1), ('x53', 1)])Default row names c1, c2 ... being created.

Violation: 0.5

Iteration log . . .
Iteration:     1   Dual objective     =            53.000000
New point to separate:  [('x1', 1.0), ('x2', 1.0), ('x3', 1.0), ('x5', 1.0), ('x10', 1.0), ('x11', 1.0), ('x13', 1.0), ('x14', 1.0), ('x19', 1.0), ('x21', 0.375), ('x22', 1.0), ('x24', 0.125), ('x25', 0.5), ('x26', 0.625), ('x28', 1.0), ('x30', 1.0), ('x33', 0.5), ('x34', 1.0), ('x35', 0.875), ('x37', 0.875), ('x39', 0.5), ('x40', 0.5), ('x42', 1.0), ('x43', 0.0625), ('x44', 1.0), ('x46', 0.0625), ('x47', 0.0625), ('x49', 0.0625), ('x50', 0.9375), ('x51', 1.0), ('x52', 0.9375), ('x53', 1.0), ('z4,1', 1.0), ('z6,2', 1.0), ('z7,3', 1.0), ('z8,4', 1.0), ('z9,5', 1.0), ('z12,10', 1.0), ('z15,7', 1.0), ('z16,8', 1.0), ('z17,9', 1.0), ('z18,11', 1.0), ('z20,12', 1.0), ('z21,14', 0.625), ('z23,18', 1.0), ('z24,13', 0.875), ('z25,13', 0.125), ('z25,14', 0.375), ('z26,15', 0.375), ('z27,16', 1.0), ('z29,17', 1.0), ('z31,20', 1.0), ('z32,22', 0.375), ('z32,15', 0.625), ('z33,24', 0.5), ('z35,19', 0.125), ('z36,21', 1.0), ('z37,22', 0.125), ('z38,22', 0.5), ('z38,23', 0.5), ('z39,23', 0.5), ('z40,24', 0.5), ('z41,26', 0.125), ('z41,19', 0.875), ('z43,30', 0.9375), ('z45,25', 1.0), ('z46,26', 0.875), ('z46,27', 0.0625), ('z47,27', 0.875), ('z47,28', 0.0625), ('z48,28', 0.9375), ('z48,29', 0.0625), ('z49,29', 0.9375), ('z50,30', 0.0625), ('z52,27', 0.0625)]
Objective value:  53.0
Default row names c1, c2 ... being created.
Finding a cutting plane...
Found incumbent of value 0.000000 after 0.00 sec. (0.01 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 1 rows and 132 columns.
Reduced MIP has 76 rows, 239 columns, and 402 nonzeros.
Reduced MIP has 0 binaries, 76 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.35 ticks)
Tried aggregator 1 time.
Reduced MIP has 76 rows, 239 columns, and 402 nonzeros.
Reduced MIP has 0 binaries, 76 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.19 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.00 sec. (0.22 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      202.0000              --- 
      0     0        0.9900    23        0.0000        0.9900       98     --- 
      0     0        0.9900     8        0.0000      Cuts: 69      119     --- 
      0     0        0.9900     5        0.0000   MIRcuts: 15      124     --- 
      0     0        0.9900     3        0.0000    MIRcuts: 7      129     --- 
      0     0        0.9900     4        0.0000    MIRcuts: 4      132     --- 
      0     2        0.9900     4        0.0000        0.9900      132     --- 
Elapsed time = 0.02 sec. (6.64 ticks, tree = 0.01 MB, solutions = 1)
*    37+    3                            0.5000        0.9900            98.00%
   3148  2723        0.9900    32        0.5625        0.9900     6486   76.00%
   4832  1180        0.9600    10        0.5625        0.9900    10020   76.00%
   9525  3101        0.9897     8        0.5625        0.9900    17606   76.00%
  23223 10803        0.9898     9        0.5625        0.9900    50835   76.00%
  35171 18612        0.9900     8        0.5625        0.9900    85776   76.00%
  46759 22610        0.9487     9        0.5625        0.9900   105059   76.00%
  61980 31630        0.9600    10        0.5625        0.9900   148924   76.00%
  76715 39712        0.9600     9        0.5625        0.9900   188007   76.00%
  90981 45591        0.8006     9        0.5625        0.9900   215151   76.00%

Mixed integer rounding cuts applied:  16
Gomory fractional cuts applied:  18

Root node processing (before b&c):
  Real time             =    0.02 sec. (6.57 ticks)
Parallel b&c, 4 threads:
  Real time             =    6.35 sec. (2479.71 ticks)
  Sync time (average)   =    0.39 sec.
  Wait time (average)   =    0.24 sec.
                          ------------
Total (root+branch&cut) =    6.37 sec. (2486.28 ticks)
Variables that need flooring, and amount to floor: [('x4', 0.98), ('x6', 0.99), ('x7', 0.9699999999999998), ('x8', 0.98), ('x9', 0.99), ('x12', 0.99), ('x15', 0.97), ('x16', 0.97), ('x17', 0.99), ('x18', 0.99), ('x20', 0.99), ('x23', 0.99), ('x27', 0.7475), ('x29', 0.97), ('x31', 0.99), ('x32', 0.24250000000000016), ('x36', 0.99), ('x38', 0.7575000000000001), ('x48', 0.4850000000000003), ('z1,2', 0.010000000000000009), ('z1,31', 0.020000000000000018), ('z2,4', 0.020000000000000018), ('z2,31', 0.020000000000000018), ('z5,1', 0.020000000000000018), ('z5,2', 0.010000000000000009), ('z6,3', 0.020000000000000018), ('z7,4', 0.99), ('z8,5', 0.99), ('z9,6', 0.010000000000000009), ('z11,8', 0.030000000000000027), ('z11,1', 0.020000000000000018), ('z12,3', 0.020000000000000018), ('z13,12', 0.010000000000000009), ('z13,5', 0.010000000000000009), ('z14,7', 0.030000000000000027), ('z14,31', 0.020000000000000018), ('z16,9', 0.98), ('z19,11', 0.010000000000000009), ('z19,12', 0.010000000000000009), ('z20,31', 0.010000000000000009), ('z21,7', 0.030000000000000027), ('z22,16', 0.010000000000000009), ('z22,9', 0.010000000000000009), ('z24,31', 0.020000000000000018), ('z27,15', 0.505), ('z28,16', 0.25249999999999995), ('z28,17', 0.27249999999999996), ('z29,18', 0.98), ('z30,18', 0.010000000000000009), ('z30,31', 0.020000000000000018), ('z31,13', 0.99), ('z33,17', 0.27249999999999996), ('z34,31', 0.020000000000000018), ('z35,20', 0.010000000000000009), ('z37,21', 0.4950000000000001), ('z39,24', 0.24249999999999994), ('z40,31', 0.26249999999999996), ('z42,28', 0.515), ('z42,21', 0.4950000000000001), ('z43,23', 0.24250000000000016), ('z44,25', 0.030000000000000027), ('z44,31', 0.020000000000000018), ('z49,30', 0.24249999999999994), ('z50,31', 0.7475), ('z51,31', 0.99), ('z52,31', 0.99), ('z53,29', 0.515), ('z53,31', 0.505)]
Found cutting plane:  [('x1', 2), ('x2', 2), ('x4', 1), ('x5', 2), ('x7', 2), ('x8', 1), ('x11', 2), ('x12', 1), ('x13', 2), ('x14', 2), ('x15', 1), ('x16', 1), ('x19', 2), ('x21', 2), ('x22', 2), ('x23', 1), ('x24', 2), ('x25', 2), ('x26', 2), ('x27', 1), ('x28', 2), ('x29', 1), ('x30', 2), ('x32', 1), ('x33', 2), ('x34', 2), ('x35', 2), ('x36', 1), ('x37', 2), ('x39', 2), ('x40', 2), ('x41', 2), ('x42', 2), ('x43', 2), ('x44', 2), ('x45', 2), ('x46', 2), ('x47', 2), ('x48', 2), ('x49', 2), ('x50', 1), ('x51', 2), ('x52', 2), ('x53', 2), ('z6,2', -1), ('z6,3', -1), ('z7,3', 1), ('z8,5', -1), ('z9,5', -1), ('z9,6', -1), ('z11,8', -1), ('z12,10', 1), ('z14,7', -1), ('z15,7', -1), ('z15,8', -1), ('z16,8', -1), ('z16,9', -1), ('z17,9', -1), ('z18,11', -1), ('z20,12', -1), ('z20,31', -1), ('z21,14', 1), ('z21,7', -1), ('z22,16', 1), ('z23,18', 1), ('z24,13', 1), ('z25,13', 1), ('z25,14', 1), ('z26,14', 1), ('z26,15', -1), ('z27,15', -1), ('z27,16', 1), ('z28,16', 1), ('z28,17', -1), ('z29,17', -1), ('z30,18', 1), ('z31,20', -1), ('z31,13', -1), ('z32,22', -1), ('z32,15', -1), ('z33,24', 1), ('z33,17', -1), ('z34,19', 1), ('z35,19', 1), ('z36,21', 1), ('z37,21', 1), ('z38,22', -1), ('z39,23', 1), ('z39,24', 1), ('z40,24', 1), ('z41,19', 1), ('z42,21', 1), ('z43,30', 1), ('z43,23', 1), ('z45,25', 1), ('z45,26', 1), ('z46,26', 1), ('z46,27', 1), ('z48,28', 1), ('z48,29', 1), ('z49,29', 1), ('z49,30', 1), ('z50,31', -1), ('z51,25', 1), ('z52,27', 1)]
Found cutting plane: <= 46.0
Linear combination is: 
0.020000000000000018 * [('x1', 1), ('z1,2', 1), ('z1,31', 1)])+
0.020000000000000018 * [('x2', 1), ('z2,4', 1), ('z2,31', 1)])+
0.020000000000000018 * [('x5', 1), ('z5,1', 1), ('z5,2', 1)])+
0.99 * [('x6', -1), ('z6,2', -1), ('z6,3', -1)])+
0.99 * [('x7', 1), ('z7,3', 1), ('z7,4', 1)])+
0.99 * [('x9', -1), ('z9,5', -1), ('z9,6', -1)])+
0.020000000000000018 * [('x11', 1), ('z11,8', 1), ('z11,1', 1)])+
0.010000000000000009 * [('x12', 1), ('z12,10', 1), ('z12,3', 1)])+
0.020000000000000018 * [('x13', 1), ('z13,12', 1), ('z13,5', 1)])+
0.020000000000000018 * [('x14', 1), ('z14,7', 1), ('z14,31', 1)])+
0.010000000000000009 * [('x15', -1), ('z15,7', -1), ('z15,8', -1)])+
0.010000000000000009 * [('x16', -1), ('z16,8', -1), ('z16,9', -1)])+
0.99 * [('x17', -1), ('z17,9', -1), ('z17,10', -1)])+
0.99 * [('x18', -1), ('z18,10', -1), ('z18,11', -1)])+
0.020000000000000018 * [('x19', 1), ('z19,11', 1), ('z19,12', 1)])+
0.99 * [('x20', -1), ('z20,12', -1), ('z20,31', -1)])+
0.020000000000000018 * [('x21', 1), ('z21,14', 1), ('z21,7', 1)])+
0.020000000000000018 * [('x22', 1), ('z22,16', 1), ('z22,9', 1)])+
0.010000000000000009 * [('x23', 1), ('z23,18', 1), ('z23,11', 1)])+
0.020000000000000018 * [('x24', 1), ('z24,13', 1), ('z24,31', 1)])+
0.020000000000000018 * [('x25', 1), ('z25,13', 1), ('z25,14', 1)])+
0.020000000000000018 * [('x26', 1), ('z26,14', 1), ('z26,15', 1)])+
0.010000000000000009 * [('x27', 1), ('z27,15', 1), ('z27,16', 1)])+
0.26249999999999996 * [('x28', 1), ('z28,16', 1), ('z28,17', 1)])+
0.010000000000000009 * [('x29', -1), ('z29,17', -1), ('z29,18', -1)])+
0.020000000000000018 * [('x30', 1), ('z30,18', 1), ('z30,31', 1)])+
0.99 * [('x31', -1), ('z31,20', -1), ('z31,13', -1)])+
0.495 * [('x32', -1), ('z32,22', -1), ('z32,15', -1)])+
0.26249999999999996 * [('x33', 1), ('z33,24', 1), ('z33,17', 1)])+
0.020000000000000018 * [('x34', 1), ('z34,19', 1), ('z34,31', 1)])+
0.020000000000000018 * [('x35', 1), ('z35,19', 1), ('z35,20', 1)])+
0.010000000000000009 * [('x36', 1), ('z36,20', 1), ('z36,21', 1)])+
0.505 * [('x37', 1), ('z37,21', 1), ('z37,22', 1)])+
0.495 * [('x38', -1), ('z38,22', -1), ('z38,23', -1)])+
0.5049999999999999 * [('x39', 1), ('z39,23', 1), ('z39,24', 1)])+
0.26249999999999996 * [('x40', 1), ('z40,24', 1), ('z40,31', 1)])+
0.020000000000000018 * [('x41', 1), ('z41,26', 1), ('z41,19', 1)])+
0.505 * [('x42', 1), ('z42,28', 1), ('z42,21', 1)])+
0.7475 * [('x43', 1), ('z43,30', 1), ('z43,23', 1)])+
0.020000000000000018 * [('x44', 1), ('z44,25', 1), ('z44,31', 1)])+
0.99 * [('x45', 1), ('z45,25', 1), ('z45,26', 1)])+
0.99 * [('x46', 1), ('z46,26', 1), ('z46,27', 1)])+
0.020000000000000018 * [('x47', 1), ('z47,27', 1), ('z47,28', 1)])+
0.99 * [('x48', 1), ('z48,28', 1), ('z48,29', 1)])+
0.99 * [('x49', 1), ('z49,29', 1), ('z49,30', 1)])+
0.2525 * [('x50', -1), ('z50,30', -1), ('z50,31', -1)])+
0.99 * [('x51', 1), ('z51,25', 1), ('z51,31', 1)])+
0.99 * [('x52', 1), ('z52,27', 1), ('z52,31', 1)])+
0.505 * [('x53', 1), ('z53,29', 1), ('z53,31', 1)])+
0.010000000000000009 * [('z1,2', -1), ('z5,2', -1), ('z6,2', -1)])+
0.010000000000000009 * [('z6,3', 1), ('z7,3', 1), ('z12,3', 1)])+
0.010000000000000009 * [('z8,5', -1), ('z9,5', -1), ('z13,5', -1)])+
0.99 * [('z14,7', -1), ('z15,7', -1), ('z21,7', -1)])+
0.99 * [('z11,8', -1), ('z15,8', -1), ('z16,8', -1)])+
0.010000000000000009 * [('z16,9', -1), ('z17,9', -1), ('z22,9', -1)])+
0.99 * [('z12,10', 1), ('z17,10', 1), ('z18,10', 1)])+
0.010000000000000009 * [('z18,11', -1), ('z19,11', -1), ('z23,11', -1)])+
0.010000000000000009 * [('z13,12', -1), ('z19,12', -1), ('z20,12', -1)])+
0.98 * [('z24,13', 1), ('z25,13', 1), ('z31,13', 1)])+
0.98 * [('z21,14', 1), ('z25,14', 1), ('z26,14', 1)])+
0.505 * [('z26,15', -1), ('z27,15', -1), ('z32,15', -1)])+
0.99 * [('z22,16', 1), ('z27,16', 1), ('z28,16', 1)])+
0.99 * [('z28,17', -1), ('z29,17', -1), ('z33,17', -1)])+
0.99 * [('z23,18', 1), ('z29,18', 1), ('z30,18', 1)])+
0.98 * [('z34,19', 1), ('z35,19', 1), ('z41,19', 1)])+
0.010000000000000009 * [('z31,20', -1), ('z35,20', -1), ('z36,20', -1)])+
0.99 * [('z36,21', 1), ('z37,21', 1), ('z42,21', 1)])+
0.505 * [('z32,22', -1), ('z37,22', -1), ('z38,22', -1)])+
0.495 * [('z38,23', 1), ('z39,23', 1), ('z43,23', 1)])+
0.7375 * [('z33,24', 1), ('z39,24', 1), ('z40,24', 1)])+
0.010000000000000009 * [('z44,25', 1), ('z45,25', 1), ('z51,25', 1)])+
0.010000000000000009 * [('z41,26', 1), ('z45,26', 1), ('z46,26', 1)])+
0.010000000000000009 * [('z46,27', 1), ('z47,27', 1), ('z52,27', 1)])+
0.010000000000000009 * [('z42,28', 1), ('z47,28', 1), ('z48,28', 1)])+
0.010000000000000009 * [('z48,29', 1), ('z49,29', 1), ('z53,29', 1)])+
0.25249999999999995 * [('z43,30', 1), ('z49,30', 1), ('z50,30', 1)])+
0.99 * [('x1', 1), ('x4', 1), ('x5', 1)])+
0.99 * [('x1', 1), ('x2', 1), ('x6', 1), ('x7', 1)])+
0.99 * [('x2', 1), ('x3', 1), ('x8', 1), ('x9', 1)])+
0.99 * [('x3', -1), ('x10', -1)])+
0.99 * [('x4', 1), ('x11', 1), ('x14', 1), ('x15', 1)])+
0.99 * [('x5', 1), ('x6', 1), ('x11', 1), ('x12', 1), ('x16', 1), ('x17', 1)])+
0.99 * [('x7', 1), ('x8', 1), ('x12', 1), ('x13', 1), ('x18', 1), ('x19', 1)])+
0.99 * [('x9', 1), ('x10', 1), ('x13', 1), ('x20', 1)])+
0.99 * [('x14', 1), ('x21', 1), ('x24', 1), ('x25', 1)])+
0.99 * [('x15', 1), ('x16', 1), ('x21', 1), ('x22', 1), ('x26', 1), ('x27', 1)])+
0.99 * [('x17', 1), ('x18', 1), ('x22', 1), ('x23', 1), ('x28', 1), ('x29', 1)])+
0.99 * [('x19', 1), ('x20', 1), ('x23', 1), ('x30', 1)])+
0.99 * [('x24', 1), ('x31', 1), ('x34', 1), ('x35', 1)])+
0.99 * [('x25', 1), ('x26', 1), ('x31', 1), ('x32', 1), ('x36', 1), ('x37', 1)])+
0.7475 * [('x27', 1), ('x28', 1), ('x32', 1), ('x33', 1), ('x38', 1), ('x39', 1)])+
0.99 * [('x29', 1), ('x30', 1), ('x33', 1), ('x40', 1)])+
0.99 * [('x34', 1), ('x41', 1), ('x44', 1), ('x45', 1)])+
0.99 * [('x35', 1), ('x36', 1), ('x41', 1), ('x42', 1), ('x46', 1), ('x47', 1)])+
0.505 * [('x37', 1), ('x38', 1), ('x42', 1), ('x43', 1), ('x48', 1), ('x49', 1)])+
0.7475 * [('x39', 1), ('x40', 1), ('x43', 1), ('x50', 1)])+
0.99 * [('x44', 1), ('x51', 1)])+
0.020000000000000018 * [('x45', 1), ('x46', 1), ('x51', 1), ('x52', 1)])+
0.99 * [('x47', 1), ('x48', 1), ('x52', 1), ('x53', 1)])+
0.505 * [('x49', 1), ('x50', 1), ('x53', 1)])Default row names c1, c2 ... being created.

Violation: 0.5625

Iteration log . . .
Iteration:     1   Dual objective     =            53.000000
New point to separate:  [('x1', 1.0), ('x2', 0.9713541666666667), ('x3', 1.0), ('x4', 0.02864583333333337), ('x5', 0.9713541666666666), ('x7', 0.02864583333333326), ('x8', 0.028645833333333315), ('x10', 1.0), ('x11', 0.9713541666666666), ('x12', 0.05729166666666674), ('x13', 0.8854166666666666), ('x14', 0.8567708333333333), ('x15', 0.14322916666666674), ('x18', 0.11458333333333337), ('x19', 0.8854166666666666), ('x20', 0.11458333333333337), ('x21', 0.44010416666666663), ('x22', 0.9427083333333333), ('x24', 0.08854166666666667), ('x25', 0.6145833333333334), ('x26', 0.47395833333333337), ('x28', 0.9427083333333333), ('x30', 1.0), ('x33', 0.5286458333333334), ('x34', 1.0), ('x35', 0.9114583333333334), ('x37', 0.9114583333333334), ('x39', 0.5286458333333334), ('x40', 0.47135416666666663), ('x42', 1.0), ('x43', 0.044270833333333336), ('x44', 1.0), ('x46', 0.044270833333333336), ('x47', 0.04427083333333337), ('x49', 0.04427083333333337), ('x50', 0.9557291666666666), ('x51', 1.0), ('x52', 0.9557291666666666), ('x53', 1.0), ('z2,4', 0.02864583333333326), ('z4,1', 0.9713541666666666), ('z5,2', 0.02864583333333337), ('z6,2', 0.9713541666666666), ('z6,3', 0.02864583333333337), ('z7,3', 0.9713541666666666), ('z8,4', 0.9713541666666667), ('z9,5', 1.0), ('z11,1', 0.02864583333333337), ('z12,10', 0.9427083333333333), ('z13,12', 0.11458333333333337), ('z14,7', 0.14322916666666674), ('z15,7', 0.8567708333333333), ('z16,8', 1.0), ('z17,9', 0.9427083333333333), ('z17,10', 0.05729166666666674), ('z18,11', 0.8854166666666666), ('z19,11', 0.11458333333333337), ('z20,12', 0.8854166666666666), ('z21,14', 0.5598958333333334), ('z22,9', 0.05729166666666674), ('z23,18', 1.0), ('z24,13', 0.9114583333333334), ('z25,13', 0.08854166666666667), ('z25,14', 0.296875), ('z26,14', 0.14322916666666663), ('z26,15', 0.38281249999999994), ('z27,15', 0.05729166666666674), ('z27,16', 0.9427083333333333), ('z28,16', 0.05729166666666674), ('z29,17', 1.0), ('z31,20', 1.0), ('z32,22', 0.4401041666666667), ('z32,15', 0.5598958333333333), ('z33,24', 0.47135416666666663), ('z35,19', 0.08854166666666667), ('z36,21', 1.0), ('z37,22', 0.08854166666666663), ('z38,22', 0.47135416666666663), ('z38,23', 0.5286458333333334), ('z39,23', 0.47135416666666663), ('z40,24', 0.5286458333333334), ('z41,26', 0.08854166666666667), ('z41,19', 0.9114583333333334), ('z43,30', 0.9557291666666666), ('z45,25', 1.0), ('z46,26', 0.9114583333333334), ('z46,27', 0.044270833333333336), ('z47,27', 0.9114583333333334), ('z47,28', 0.04427083333333337), ('z48,28', 0.9557291666666666), ('z48,29', 0.04427083333333337), ('z49,29', 0.9557291666666666), ('z50,30', 0.044270833333333336), ('z52,27', 0.044270833333333336)]
Objective value:  53.0
Default row names c1, c2 ... being created.
Finding a cutting plane...
Found incumbent of value 0.000000 after 0.00 sec. (0.01 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 1 rows and 123 columns.
Reduced MIP has 95 rows, 287 columns, and 505 nonzeros.
Reduced MIP has 0 binaries, 95 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.42 ticks)
Tried aggregator 1 time.
Reduced MIP has 95 rows, 287 columns, and 505 nonzeros.
Reduced MIP has 0 binaries, 95 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.24 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.00 sec. (0.25 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      202.0000              --- 
      0     0        0.9900    43        0.0000        0.9900      115     --- 
      0     0        0.9900    17        0.0000     Cuts: 123      145     --- 
      0     0        0.9900    15        0.0000   MIRcuts: 40      162     --- 
      0     0        0.9900    18        0.0000   MIRcuts: 41      176     --- 
      0     0        0.9900    13        0.0000   MIRcuts: 24      183     --- 
      0     0        0.9900    10        0.0000   MIRcuts: 17      188     --- 
      0     2        0.9900    10        0.0000        0.9900      188     --- 
Elapsed time = 0.03 sec. (14.03 ticks, tree = 0.01 MB, solutions = 1)
*   204+  151                            0.0286        0.9900              --- 
*   589+  375                            0.4427        0.9900           123.62%
*   659+  391                            0.4714        0.9900           110.03%
*   784   582      integral     0        0.5000        0.9900     1919   98.00%
*  1293   951      integral     0        0.5156        0.9900     3607   92.00%
*  1780+ 1086                            0.5286        0.9900            87.27%
*  3092+ 2034                            0.5443        0.9900            81.89%
   4035  3254        0.9900    22        0.5443        0.9900    11167   81.89%
   4715   469        0.9176    13        0.5443        0.9900    12322   81.89%
   6257  1734        0.5847     6        0.5443        0.9900    16154   81.89%
  12604  6013        0.9898    10        0.5443        0.9900    35693   81.89%
  22696 11729        cutoff              0.5443        0.9900    63287   81.89%
  32754 20912        0.8207    10        0.5443        0.9900   106549   81.89%
  39354 25551        0.9900    11        0.5443        0.9900   128386   81.89%
  84263 57781        0.7202    10        0.5443        0.9900   275192   81.89%
Elapsed time = 6.29 sec. (2822.77 ticks, tree = 19.30 MB, solutions = 16)

Mixed integer rounding cuts applied:  21
Gomory fractional cuts applied:  31

Root node processing (before b&c):
  Real time             =    0.03 sec. (13.94 ticks)
Parallel b&c, 4 threads:
  Real time             =    7.55 sec. (3295.65 ticks)
  Sync time (average)   =    0.48 sec.
  Wait time (average)   =    0.18 sec.
                          ------------
Total (root+branch&cut) =    7.58 sec. (3309.59 ticks)
Variables that need flooring, and amount to floor: [('x6', 0.5000000000000002), ('x9', 0.0499999999999996), ('x16', 0.9799999999999995), ('x17', 0.010000000000000453), ('x23', 0.9900000000000004), ('x27', 0.31666666666666643), ('x29', 0.4900000000000002), ('x31', 0.9499999999999993), ('x32', 0.31666666666666643), ('x36', 0.8516666666666667), ('x38', 0.6833333333333338), ('x41', 0.010000000000000675), ('x45', 0.99), ('x48', 0.48499999999999976), ('z1,2', 0.6183333333333247), ('z1,31', 0.6383333333333248), ('z2,31', 0.99), ('z4,31', 0.020000000000000018), ('z7,4', 0.030000000000000027), ('z8,5', 0.9800000000000004), ('z9,6', 0.010000000000000009), ('z11,8', 0.010000000000000009), ('z12,3', 0.5000000000000002), ('z13,5', 0.9800000000000004), ('z14,31', 0.03000000000000047), ('z15,8', 0.020000000000000462), ('z16,9', 0.48999999999999977), ('z18,10', 0.48999999999999977), ('z19,12', 0.03000000000000047), ('z20,31', 0.98), ('z21,7', 0.010000000000000453), ('z22,16', 0.8466666666666665), ('z23,11', 0.98), ('z24,31', 0.040000000000000924), ('z28,17', 0.8366666666666667), ('z29,18', 0.010000000000000009), ('z30,18', 0.5199999999999998), ('z30,31', 0.5099999999999998), ('z31,13', 0.9499999999999991), ('z33,17', 0.3466666666666669), ('z34,19', 0.8716666666666671), ('z34,31', 0.03000000000000047), ('z35,20', 0.16833333333333333), ('z36,20', 0.020000000000000018), ('z37,21', 0.6633333333333338), ('z39,24', 0.3266666666666669), ('z40,31', 0.3466666666666669), ('z42,28', 0.4849999999999999), ('z42,21', 0.7816666666666658), ('z43,23', 0.3166666666666662), ('z44,31', 0.99), ('z45,26', 0.8316666666666666), ('z49,30', 0.3166666666666662), ('z50,31', 0.99), ('z51,25', 0.020000000000000018), ('z51,31', 0.010000000000000009), ('z52,31', 0.15833333333333333), ('z53,29', 0.5150000000000003), ('z53,31', 0.8216666666666665)]
Found cutting plane:  [('x1', 2), ('x2', 2), ('x4', 2), ('x5', 1), ('x8', 2), ('x9', 1), ('x11', 1), ('x13', 2), ('x14', 1), ('x15', 2), ('x18', -1), ('x20', 2), ('x21', 2), ('x22', 1), ('x24', 2), ('x25', 2), ('x26', 2), ('x27', 2), ('x30', 2), ('x31', 2), ('x32', 2), ('x33', 2), ('x34', 2), ('x37', 2), ('x38', 1), ('x39', 1), ('x40', 1), ('x41', 1), ('x42', 1), ('x43', 1), ('x44', 1), ('x46', -1), ('x48', -1), ('x49', 1), ('x51', -3), ('x52', -2), ('x53', 1), ('z1,2', 1), ('z4,1', 1), ('z5,1', 1), ('z5,2', 1), ('z6,2', 1), ('z6,3', 1), ('z7,4', -2), ('z8,5', 1), ('z9,5', 1), ('z11,8', 1), ('z11,1', 1), ('z12,10', -1), ('z13,5', 1), ('z14,31', -1), ('z15,7', 1), ('z15,8', 1), ('z16,8', 1), ('z16,9', -1), ('z18,10', -2), ('z19,12', -2), ('z21,7', 1), ('z22,16', -1), ('z23,18', 1), ('z23,11', 1), ('z27,15', 1), ('z28,16', -1), ('z28,17', -1), ('z31,20', 1), ('z32,22', 1), ('z32,15', 1), ('z34,19', -1), ('z35,19', -1), ('z35,20', -1), ('z36,21', 1), ('z37,21', 1), ('z37,22', 1), ('z38,22', 1), ('z38,23', 1), ('z39,23', 1), ('z41,26', 1), ('z42,28', 1), ('z42,21', 1), ('z43,23', 1), ('z44,25', 1), ('z45,25', 1), ('z45,26', 1), ('z46,26', 1), ('z46,27', 1), ('z47,27', 1), ('z47,28', 1), ('z49,29', 1), ('z49,30', -1), ('z50,30', -1), ('z50,31', -1), ('z51,25', -1), ('z51,31', -1), ('z52,31', -1), ('z53,29', 1)]
Found cutting plane: <= 32.0
Linear combination is: 
0.6383333333333248 * [('x1', 1), ('z1,2', 1), ('z1,31', 1)])+
0.99 * [('x2', 1), ('z2,4', 1), ('z2,31', 1)])+
0.020000000000000018 * [('x4', 1), ('z4,1', 1), ('z4,31', 1)])+
0.020000000000000018 * [('x5', 1), ('z5,1', 1), ('z5,2', 1)])+
0.020000000000000018 * [('x6', 1), ('z6,2', 1), ('z6,3', 1)])+
0.98 * [('x7', -1), ('z7,3', -1), ('z7,4', -1)])+
0.9900000000000004 * [('x8', 1), ('z8,4', 1), ('z8,5', 1)])+
0.010000000000000009 * [('x9', 1), ('z9,5', 1), ('z9,6', 1)])+
0.020000000000000018 * [('x11', 1), ('z11,8', 1), ('z11,1', 1)])+
0.47999999999999976 * [('x12', -1), ('z12,10', -1), ('z12,3', -1)])+
0.9900000000000004 * [('x13', 1), ('z13,12', 1), ('z13,5', 1)])+
0.9699999999999995 * [('x14', -1), ('z14,7', -1), ('z14,31', -1)])+
0.03000000000000047 * [('x15', 1), ('z15,7', 1), ('z15,8', 1)])+
0.010000000000000009 * [('x16', 1), ('z16,8', 1), ('z16,9', 1)])+
0.5200000000000002 * [('x17', 1), ('z17,9', 1), ('z17,10', 1)])+
0.99 * [('x18', -1), ('z18,10', -1), ('z18,11', -1)])+
0.99 * [('x19', -1), ('z19,11', -1), ('z19,12', -1)])+
0.98 * [('x20', 1), ('z20,12', 1), ('z20,31', 1)])+
0.040000000000000924 * [('x21', 1), ('z21,14', 1), ('z21,7', 1)])+
0.5200000000000002 * [('x22', 1), ('z22,16', 1), ('z22,9', 1)])+
0.99 * [('x23', 1), ('z23,18', 1), ('z23,11', 1)])+
0.040000000000000924 * [('x24', 1), ('z24,13', 1), ('z24,31', 1)])+
0.040000000000000924 * [('x25', 1), ('z25,13', 1), ('z25,14', 1)])+
0.040000000000000924 * [('x26', 1), ('z26,14', 1), ('z26,15', 1)])+
0.6733333333333338 * [('x27', 1), ('z27,15', 1), ('z27,16', 1)])+
0.16333333333333333 * [('x28', -1), ('z28,16', -1), ('z28,17', -1)])+
0.5099999999999998 * [('x30', 1), ('z30,18', 1), ('z30,31', 1)])+
0.99 * [('x31', 1), ('z31,20', 1), ('z31,13', 1)])+
0.6733333333333338 * [('x32', 1), ('z32,22', 1), ('z32,15', 1)])+
0.3466666666666669 * [('x33', 1), ('z33,24', 1), ('z33,17', 1)])+
0.03000000000000047 * [('x34', 1), ('z34,19', 1), ('z34,31', 1)])+
0.8416666666666667 * [('x35', -1), ('z35,19', -1), ('z35,20', -1)])+
0.010000000000000009 * [('x36', 1), ('z36,20', 1), ('z36,21', 1)])+
0.6733333333333338 * [('x37', 1), ('z37,21', 1), ('z37,22', 1)])+
0.6733333333333338 * [('x38', 1), ('z38,22', 1), ('z38,23', 1)])+
0.6733333333333338 * [('x39', 1), ('z39,23', 1), ('z39,24', 1)])+
0.3466666666666669 * [('x40', 1), ('z40,24', 1), ('z40,31', 1)])+
0.15833333333333333 * [('x41', 1), ('z41,26', 1), ('z41,19', 1)])+
0.791666666666666 * [('x42', 1), ('z42,28', 1), ('z42,21', 1)])+
0.99 * [('x43', 1), ('z43,30', 1), ('z43,23', 1)])+
0.99 * [('x44', 1), ('z44,25', 1), ('z44,31', 1)])+
0.99 * [('x45', 1), ('z45,25', 1), ('z45,26', 1)])+
0.15833333333333333 * [('x46', 1), ('z46,26', 1), ('z46,27', 1)])+
0.3066666666666662 * [('x47', 1), ('z47,27', 1), ('z47,28', 1)])+
0.6933333333333338 * [('x48', -1), ('z48,28', -1), ('z48,29', -1)])+
0.3066666666666662 * [('x49', 1), ('z49,29', 1), ('z49,30', 1)])+
0.010000000000000009 * [('x50', -1), ('z50,30', -1), ('z50,31', -1)])+
0.99 * [('x51', -1), ('z51,25', -1), ('z51,31', -1)])+
0.8416666666666667 * [('x52', -1), ('z52,27', -1), ('z52,31', -1)])+
0.8216666666666665 * [('x53', 1), ('z53,29', 1), ('z53,31', 1)])+
0.98 * [('z4,1', 1), ('z5,1', 1), ('z11,1', 1)])+
0.98 * [('z1,2', 1), ('z5,2', 1), ('z6,2', 1)])+
0.98 * [('z6,3', 1), ('z7,3', 1), ('z12,3', 1)])+
0.99 * [('z2,4', -1), ('z7,4', -1), ('z8,4', -1)])+
0.99 * [('z8,5', 1), ('z9,5', 1), ('z13,5', 1)])+
0.9699999999999995 * [('z14,7', 1), ('z15,7', 1), ('z21,7', 1)])+
0.99 * [('z11,8', 1), ('z15,8', 1), ('z16,8', 1)])+
0.5200000000000002 * [('z16,9', -1), ('z17,9', -1), ('z22,9', -1)])+
0.5200000000000002 * [('z12,10', -1), ('z17,10', -1), ('z18,10', -1)])+
0.99 * [('z18,11', 1), ('z19,11', 1), ('z23,11', 1)])+
0.9799999999999995 * [('z13,12', -1), ('z19,12', -1), ('z20,12', -1)])+
0.040000000000000924 * [('z24,13', -1), ('z25,13', -1), ('z31,13', -1)])+
0.040000000000000924 * [('z21,14', -1), ('z25,14', -1), ('z26,14', -1)])+
0.3266666666666662 * [('z26,15', 1), ('z27,15', 1), ('z32,15', 1)])+
0.6733333333333338 * [('z22,16', -1), ('z27,16', -1), ('z28,16', -1)])+
0.010000000000000009 * [('z23,18', 1), ('z29,18', 1), ('z30,18', 1)])+
0.15833333333333333 * [('z34,19', -1), ('z35,19', -1), ('z41,19', -1)])+
0.010000000000000009 * [('z31,20', 1), ('z35,20', 1), ('z36,20', 1)])+
0.99 * [('z36,21', 1), ('z37,21', 1), ('z42,21', 1)])+
0.3266666666666662 * [('z32,22', 1), ('z37,22', 1), ('z38,22', 1)])+
0.3266666666666662 * [('z38,23', 1), ('z39,23', 1), ('z43,23', 1)])+
0.3466666666666669 * [('z33,24', -1), ('z39,24', -1), ('z40,24', -1)])+
0.010000000000000009 * [('z44,25', 1), ('z45,25', 1), ('z51,25', 1)])+
0.8416666666666667 * [('z41,26', 1), ('z45,26', 1), ('z46,26', 1)])+
0.8416666666666667 * [('z46,27', 1), ('z47,27', 1), ('z52,27', 1)])+
0.6933333333333338 * [('z42,28', 1), ('z47,28', 1), ('z48,28', 1)])+
0.6933333333333338 * [('z48,29', 1), ('z49,29', 1), ('z53,29', 1)])+
0.99 * [('z43,30', -1), ('z49,30', -1), ('z50,30', -1)])+
0.99 * [('x1', 1), ('x4', 1), ('x5', 1)])+
0.4900000000000002 * [('x1', 1), ('x2', 1), ('x6', 1), ('x7', 1)])+
0.5199999999999998 * [('x2', 1), ('x3', 1), ('x8', 1), ('x9', 1)])+
0.5199999999999998 * [('x3', -1), ('x10', -1)])+
0.99 * [('x4', 1), ('x11', 1), ('x14', 1), ('x15', 1)])+
0.010000000000000009 * [('x5', -1), ('x6', -1), ('x11', -1), ('x12', -1), ('x16', -1), ('x17', -1)])+
0.48999999999999977 * [('x7', 1), ('x8', 1), ('x12', 1), ('x13', 1), ('x18', 1), ('x19', 1)])+
0.5199999999999998 * [('x9', 1), ('x10', 1), ('x13', 1), ('x20', 1)])+
0.9799999999999995 * [('x14', 1), ('x21', 1), ('x24', 1), ('x25', 1)])+
0.9799999999999995 * [('x15', 1), ('x16', 1), ('x21', 1), ('x22', 1), ('x26', 1), ('x27', 1)])+
0.4999999999999998 * [('x17', -1), ('x18', -1), ('x22', -1), ('x23', -1), ('x28', -1), ('x29', -1)])+
0.5000000000000002 * [('x19', 1), ('x20', 1), ('x23', 1), ('x30', 1)])+
0.9799999999999995 * [('x24', 1), ('x31', 1), ('x34', 1), ('x35', 1)])+
0.9799999999999995 * [('x25', 1), ('x26', 1), ('x31', 1), ('x32', 1), ('x36', 1), ('x37', 1)])+
0.6633333333333331 * [('x27', 1), ('x28', 1), ('x32', 1), ('x33', 1), ('x38', 1), ('x39', 1)])+
0.99 * [('x29', 1), ('x30', 1), ('x33', 1), ('x40', 1)])+
0.99 * [('x34', 1), ('x41', 1), ('x44', 1), ('x45', 1)])+
0.13833333333333286 * [('x35', -1), ('x36', -1), ('x41', -1), ('x42', -1), ('x46', -1), ('x47', -1)])+
0.3466666666666669 * [('x37', 1), ('x38', 1), ('x42', 1), ('x43', 1), ('x48', 1), ('x49', 1)])+
0.3366666666666669 * [('x39', -1), ('x40', -1), ('x43', -1), ('x50', -1)])+
0.98 * [('x44', -1), ('x51', -1)])+
0.99 * [('x45', -1), ('x46', -1), ('x51', -1), ('x52', -1)])+
0.16833333333333333 * [('x47', -1), ('x48', -1), ('x52', -1), ('x53', -1)])+
0.3466666666666669 * [('x49', 1), ('x50', 1), ('x53', 1)])Default row names c1, c2 ... being created.

Violation: 0.5442708333333286

Iteration log . . .
Iteration:     1   Dual objective     =            53.000000
Perturbation started.
Iteration:    51   Dual objective     =            53.000000
Removing perturbation.
New point to separate:  [('x1', 1.0), ('x2', 1.0), ('x3', 1.0), ('x5', 1.0), ('x10', 1.0), ('x11', 1.0), ('x13', 0.75), ('x14', 1.0), ('x18', 0.25), ('x19', 1.0), ('x20', 0.25), ('x21', 0.4375), ('x22', 1.0), ('x24', 0.125), ('x25', 0.4375), ('x26', 0.5625), ('x28', 0.75), ('x30', 0.75), ('x33', 0.75), ('x34', 1.0), ('x35', 0.875), ('x37', 1.0), ('x39', 0.5), ('x40', 0.5), ('x42', 1.0), ('x44', 1.0), ('x46', 0.0625), ('x47', 0.0625), ('x50', 1.0), ('x51', 1.0), ('x52', 0.9375), ('x53', 1.0), ('z4,1', 1.0), ('z6,2', 1.0), ('z7,3', 1.0), ('z8,4', 1.0), ('z9,5', 1.0), ('z12,10', 1.0), ('z13,12', 0.25), ('z15,7', 1.0), ('z16,8', 1.0), ('z17,9', 1.0), ('z18,11', 0.75), ('z20,12', 0.75), ('z21,14', 0.5625), ('z23,18', 0.75), ('z23,11', 0.25), ('z24,13', 0.875), ('z25,13', 0.125), ('z25,14', 0.4375), ('z26,15', 0.4375), ('z27,15', 0.25), ('z27,16', 0.75), ('z28,16', 0.25), ('z29,17', 1.0), ('z30,18', 0.25), ('z31,20', 1.0), ('z32,22', 0.6875), ('z32,15', 0.3125), ('z33,24', 0.25), ('z35,19', 0.125), ('z36,21', 1.0), ('z38,22', 0.3125), ('z38,23', 0.6875), ('z39,23', 0.25), ('z39,24', 0.25), ('z40,24', 0.5), ('z41,26', 0.125), ('z41,19', 0.875), ('z43,30', 0.9375), ('z43,23', 0.0625), ('z45,25', 1.0), ('z46,26', 0.875), ('z46,27', 0.0625), ('z47,27', 0.875), ('z47,28', 0.0625), ('z48,28', 0.9375), ('z48,29', 0.0625), ('z49,29', 0.9375), ('z49,30', 0.0625), ('z52,27', 0.0625)]
Objective value:  53.0
Default row names c1, c2 ... being created.
Finding a cutting plane...
Found incumbent of value 0.000000 after 0.00 sec. (0.01 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 1 rows and 130 columns.
Reduced MIP has 82 rows, 255 columns, and 434 nonzeros.
Reduced MIP has 0 binaries, 82 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.38 ticks)
Tried aggregator 1 time.
Reduced MIP has 82 rows, 255 columns, and 434 nonzeros.
Reduced MIP has 0 binaries, 82 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.20 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.00 sec. (0.22 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      202.0000              --- 
      0     0        0.9900    27        0.0000        0.9900      104     --- 
      0     0        0.9900    15        0.0000      Cuts: 81      132     --- 
      0     0        0.9900     8        0.0000   MIRcuts: 26      144     --- 
      0     0        0.9900     9        0.0000   MIRcuts: 20      156     --- 
      0     0        0.9900     9        0.0000    MIRcuts: 5      159     --- 
      0     2        0.9900     9        0.0000        0.9900      159     --- 
Elapsed time = 0.06 sec. (10.11 ticks, tree = 0.01 MB, solutions = 1)
*   267+  200                            0.5000        0.9900            98.00%
   4416  3294        0.9900    22        0.5000        0.9900    15087   98.00%
   6116  1032        0.9838    10        0.5000        0.9900    17952   98.00%
  12145  5106        0.9600     4        0.5000        0.9900    28937   98.00%
  25239 13884        0.9900     6        0.5000        0.9900    55918   98.00%
  37525 23983        0.9669     3        0.5000        0.9900    88780   98.00%
  52806 32379        0.9750     5        0.5000        0.9900   117020   98.00%
  68085 46360        0.9313    10        0.5000        0.9900   165247   98.00%
  82311 55633        0.9712     5        0.5000        0.9900   196364   98.00%
  95715 66693        0.9712     5        0.5000        0.9900   233121   98.00%

Mixed integer rounding cuts applied:  21
Gomory fractional cuts applied:  14

Root node processing (before b&c):
  Real time             =    0.03 sec. (10.03 ticks)
Parallel b&c, 4 threads:
  Real time             =    6.90 sec. (2479.55 ticks)
  Sync time (average)   =    0.67 sec.
  Wait time (average)   =    0.37 sec.
                          ------------
Total (root+branch&cut) =    6.94 sec. (2489.58 ticks)
Variables that need flooring, and amount to floor: [('x4', 0.97), ('x6', 0.99), ('x7', 0.97), ('x8', 0.99), ('x9', 0.99), ('x12', 0.99), ('x15', 0.4849999999999999), ('x16', 0.5049999999999999), ('x17', 0.99), ('x23', 0.99), ('x27', 0.5150000000000001), ('x29', 0.99), ('x31', 0.02000000000000013), ('x32', 0.5150000000000001), ('x41', 0.4849999999999999), ('x43', 0.9699999999999998), ('x45', 0.5050000000000001), ('x48', 0.4850000000000003), ('x49', 0.97), ('z1,2', 0.010000000000000009), ('z1,31', 0.020000000000000018), ('z2,4', 0.010000000000000009), ('z2,31', 0.020000000000000018), ('z4,31', 0.99), ('z5,1', 0.030000000000000027), ('z5,2', 0.010000000000000009), ('z6,3', 0.020000000000000018), ('z7,4', 0.98), ('z9,6', 0.010000000000000009), ('z11,8', 0.010000000000000009), ('z11,1', 0.030000000000000027), ('z12,3', 0.020000000000000018), ('z13,5', 0.010000000000000009), ('z14,7', 0.030000000000000027), ('z14,31', 0.020000000000000018), ('z15,8', 0.98), ('z18,10', 0.010000000000000009), ('z19,11', 0.010000000000000009), ('z20,31', 0.020000000000000018), ('z21,7', 0.515), ('z22,16', 0.515), ('z22,9', 0.495), ('z24,31', 0.505), ('z26,14', 0.4849999999999999), ('z28,17', 0.98), ('z30,31', 0.020000000000000018), ('z31,13', 0.505), ('z33,17', 0.98), ('z34,19', 0.5149999999999999), ('z34,31', 0.5049999999999999), ('z35,20', 0.98), ('z36,20', 0.98), ('z37,21', 0.515), ('z37,22', 0.515), ('z40,31', 0.020000000000000018), ('z42,28', 0.515), ('z42,21', 0.515), ('z44,25', 0.010000000000000009), ('z44,31', 0.020000000000000018), ('z45,26', 0.020000000000000018), ('z50,30', 0.030000000000000027), ('z50,31', 0.020000000000000018), ('z51,25', 0.4949999999999999), ('z51,31', 0.5049999999999999), ('z52,31', 0.99), ('z53,29', 0.5149999999999999), ('z53,31', 0.5049999999999999)]
Found cutting plane:  [('x1', 2), ('x2', 2), ('x4', 1), ('x5', 2), ('x7', 1), ('x11', 2), ('x13', 2), ('x14', 2), ('x15', 1), ('x16', 1), ('x18', 2), ('x19', 2), ('x20', 2), ('x21', 2), ('x22', 2), ('x24', 2), ('x25', 2), ('x26', 2), ('x27', 1), ('x28', 2), ('x30', 2), ('x32', 1), ('x33', 2), ('x34', 2), ('x35', 2), ('x36', 1), ('x37', 2), ('x38', 2), ('x39', 2), ('x40', 2), ('x41', 2), ('x42', 2), ('x43', 2), ('x44', 2), ('x46', 2), ('x47', 2), ('x48', 2), ('x49', 1), ('x50', 2), ('x51', 2), ('x52', 2), ('x53', 2), ('z4,1', -1), ('z4,31', -1), ('z5,1', -1), ('z6,2', -1), ('z6,3', -2), ('z7,3', -1), ('z7,4', -1), ('z8,4', -1), ('z8,5', -1), ('z9,5', -1), ('z9,6', -1), ('z11,8', 1), ('z11,1', -1), ('z12,10', -1), ('z12,3', -2), ('z13,12', 1), ('z14,7', -1), ('z15,7', -1), ('z16,8', 1), ('z17,9', -1), ('z17,10', -1), ('z18,11', 1), ('z19,11', 1), ('z19,12', 1), ('z20,12', 1), ('z21,14', 1), ('z21,7', -1), ('z23,18', -1), ('z24,13', 1), ('z25,13', 1), ('z25,14', 1), ('z26,14', 1), ('z26,15', 1), ('z27,15', 1), ('z27,16', 1), ('z28,16', 1), ('z29,17', -1), ('z29,18', -1), ('z31,20', -1), ('z31,13', -1), ('z32,22', 1), ('z32,15', 1), ('z35,19', 1), ('z36,20', -1), ('z36,21', -1), ('z37,21', -1), ('z38,22', 1), ('z40,24', -1), ('z41,26', 1), ('z41,19', 1), ('z42,21', -1), ('z45,25', -1), ('z45,26', -1), ('z46,26', 1), ('z46,27', 1), ('z47,27', 1), ('z47,28', 1), ('z48,28', 1), ('z48,29', 1), ('z49,30', -1), ('z50,30', -1), ('z52,27', 1)]
Found cutting plane: <= 42.0
Linear combination is: 
0.020000000000000018 * [('x1', 1), ('z1,2', 1), ('z1,31', 1)])+
0.020000000000000018 * [('x2', 1), ('z2,4', 1), ('z2,31', 1)])+
0.010000000000000009 * [('x4', -1), ('z4,1', -1), ('z4,31', -1)])+
0.020000000000000018 * [('x5', 1), ('z5,1', 1), ('z5,2', 1)])+
0.99 * [('x6', -1), ('z6,2', -1), ('z6,3', -1)])+
0.010000000000000009 * [('x7', -1), ('z7,3', -1), ('z7,4', -1)])+
0.99 * [('x8', -1), ('z8,4', -1), ('z8,5', -1)])+
0.99 * [('x9', -1), ('z9,5', -1), ('z9,6', -1)])+
0.020000000000000018 * [('x11', 1), ('z11,8', 1), ('z11,1', 1)])+
0.99 * [('x12', -1), ('z12,10', -1), ('z12,3', -1)])+
0.020000000000000018 * [('x13', 1), ('z13,12', 1), ('z13,5', 1)])+
0.020000000000000018 * [('x14', 1), ('z14,7', 1), ('z14,31', 1)])+
0.010000000000000009 * [('x15', -1), ('z15,7', -1), ('z15,8', -1)])+
0.010000000000000009 * [('x16', 1), ('z16,8', 1), ('z16,9', 1)])+
0.99 * [('x17', -1), ('z17,9', -1), ('z17,10', -1)])+
0.020000000000000018 * [('x18', 1), ('z18,10', 1), ('z18,11', 1)])+
0.020000000000000018 * [('x19', 1), ('z19,11', 1), ('z19,12', 1)])+
0.020000000000000018 * [('x20', 1), ('z20,12', 1), ('z20,31', 1)])+
0.505 * [('x21', 1), ('z21,14', 1), ('z21,7', 1)])+
0.505 * [('x22', 1), ('z22,16', 1), ('z22,9', 1)])+
0.99 * [('x23', -1), ('z23,18', -1), ('z23,11', -1)])+
0.505 * [('x24', 1), ('z24,13', 1), ('z24,31', 1)])+
0.505 * [('x25', 1), ('z25,13', 1), ('z25,14', 1)])+
0.99 * [('x26', 1), ('z26,14', 1), ('z26,15', 1)])+
0.99 * [('x27', 1), ('z27,15', 1), ('z27,16', 1)])+
0.99 * [('x28', 1), ('z28,16', 1), ('z28,17', 1)])+
0.99 * [('x29', -1), ('z29,17', -1), ('z29,18', -1)])+
0.020000000000000018 * [('x30', 1), ('z30,18', 1), ('z30,31', 1)])+
0.99 * [('x31', -1), ('z31,20', -1), ('z31,13', -1)])+
0.99 * [('x32', 1), ('z32,22', 1), ('z32,15', 1)])+
0.99 * [('x33', 1), ('z33,24', 1), ('z33,17', 1)])+
0.5049999999999999 * [('x34', 1), ('z34,19', 1), ('z34,31', 1)])+
0.99 * [('x35', 1), ('z35,19', 1), ('z35,20', 1)])+
0.010000000000000009 * [('x36', -1), ('z36,20', -1), ('z36,21', -1)])+
0.505 * [('x37', 1), ('z37,21', 1), ('z37,22', 1)])+
0.99 * [('x38', 1), ('z38,22', 1), ('z38,23', 1)])+
0.99 * [('x39', 1), ('z39,23', 1), ('z39,24', 1)])+
0.020000000000000018 * [('x40', 1), ('z40,24', 1), ('z40,31', 1)])+
0.99 * [('x41', 1), ('z41,26', 1), ('z41,19', 1)])+
0.505 * [('x42', 1), ('z42,28', 1), ('z42,21', 1)])+
0.99 * [('x43', 1), ('z43,30', 1), ('z43,23', 1)])+
0.020000000000000018 * [('x44', 1), ('z44,25', 1), ('z44,31', 1)])+
0.99 * [('x45', -1), ('z45,25', -1), ('z45,26', -1)])+
0.99 * [('x46', 1), ('z46,26', 1), ('z46,27', 1)])+
0.99 * [('x47', 1), ('z47,27', 1), ('z47,28', 1)])+
0.99 * [('x48', 1), ('z48,28', 1), ('z48,29', 1)])+
0.010000000000000009 * [('x49', -1), ('z49,29', -1), ('z49,30', -1)])+
0.020000000000000018 * [('x50', 1), ('z50,30', 1), ('z50,31', 1)])+
0.5049999999999999 * [('x51', 1), ('z51,25', 1), ('z51,31', 1)])+
0.99 * [('x52', 1), ('z52,27', 1), ('z52,31', 1)])+
0.5049999999999999 * [('x53', 1), ('z53,29', 1), ('z53,31', 1)])+
0.99 * [('z4,1', -1), ('z5,1', -1), ('z11,1', -1)])+
0.010000000000000009 * [('z1,2', -1), ('z5,2', -1), ('z6,2', -1)])+
0.99 * [('z6,3', -1), ('z7,3', -1), ('z12,3', -1)])+
0.010000000000000009 * [('z2,4', -1), ('z7,4', -1), ('z8,4', -1)])+
0.010000000000000009 * [('z8,5', -1), ('z9,5', -1), ('z13,5', -1)])+
0.99 * [('z14,7', -1), ('z15,7', -1), ('z21,7', -1)])+
0.99 * [('z11,8', 1), ('z15,8', 1), ('z16,8', 1)])+
0.010000000000000009 * [('z16,9', -1), ('z17,9', -1), ('z22,9', -1)])+
0.010000000000000009 * [('z12,10', -1), ('z17,10', -1), ('z18,10', -1)])+
0.99 * [('z18,11', 1), ('z19,11', 1), ('z23,11', 1)])+
0.98 * [('z13,12', 1), ('z19,12', 1), ('z20,12', 1)])+
0.495 * [('z24,13', 1), ('z25,13', 1), ('z31,13', 1)])+
0.495 * [('z21,14', 1), ('z25,14', 1), ('z26,14', 1)])+
0.010000000000000009 * [('z26,15', 1), ('z27,15', 1), ('z32,15', 1)])+
0.010000000000000009 * [('z22,16', 1), ('z27,16', 1), ('z28,16', 1)])+
0.010000000000000009 * [('z28,17', -1), ('z29,17', -1), ('z33,17', -1)])+
0.010000000000000009 * [('z23,18', -1), ('z29,18', -1), ('z30,18', -1)])+
0.010000000000000009 * [('z34,19', 1), ('z35,19', 1), ('z41,19', 1)])+
0.010000000000000009 * [('z31,20', -1), ('z35,20', -1), ('z36,20', -1)])+
0.99 * [('z36,21', -1), ('z37,21', -1), ('z42,21', -1)])+
0.010000000000000009 * [('z32,22', 1), ('z37,22', 1), ('z38,22', 1)])+
0.99 * [('z38,23', -1), ('z39,23', -1), ('z43,23', -1)])+
0.99 * [('z33,24', -1), ('z39,24', -1), ('z40,24', -1)])+
0.010000000000000009 * [('z44,25', -1), ('z45,25', -1), ('z51,25', -1)])+
0.010000000000000009 * [('z41,26', 1), ('z45,26', 1), ('z46,26', 1)])+
0.010000000000000009 * [('z46,27', 1), ('z47,27', 1), ('z52,27', 1)])+
0.010000000000000009 * [('z42,28', 1), ('z47,28', 1), ('z48,28', 1)])+
0.010000000000000009 * [('z48,29', 1), ('z49,29', 1), ('z53,29', 1)])+
0.99 * [('z43,30', -1), ('z49,30', -1), ('z50,30', -1)])+
0.99 * [('x1', 1), ('x4', 1), ('x5', 1)])+
0.99 * [('x1', 1), ('x2', 1), ('x6', 1), ('x7', 1)])+
0.99 * [('x2', 1), ('x3', 1), ('x8', 1), ('x9', 1)])+
0.99 * [('x3', -1), ('x10', -1)])+
0.99 * [('x4', 1), ('x11', 1), ('x14', 1), ('x15', 1)])+
0.99 * [('x5', 1), ('x6', 1), ('x11', 1), ('x12', 1), ('x16', 1), ('x17', 1)])+
0.99 * [('x7', 1), ('x8', 1), ('x12', 1), ('x13', 1), ('x18', 1), ('x19', 1)])+
0.99 * [('x9', 1), ('x10', 1), ('x13', 1), ('x20', 1)])+
0.99 * [('x14', 1), ('x21', 1), ('x24', 1), ('x25', 1)])+
0.505 * [('x15', 1), ('x16', 1), ('x21', 1), ('x22', 1), ('x26', 1), ('x27', 1)])+
0.99 * [('x17', 1), ('x18', 1), ('x22', 1), ('x23', 1), ('x28', 1), ('x29', 1)])+
0.99 * [('x19', 1), ('x20', 1), ('x23', 1), ('x30', 1)])+
0.5050000000000001 * [('x24', 1), ('x31', 1), ('x34', 1), ('x35', 1)])+
0.505 * [('x25', 1), ('x26', 1), ('x31', 1), ('x32', 1), ('x36', 1), ('x37', 1)])+
0.020000000000000018 * [('x27', 1), ('x28', 1), ('x32', 1), ('x33', 1), ('x38', 1), ('x39', 1)])+
0.99 * [('x29', 1), ('x30', 1), ('x33', 1), ('x40', 1)])+
0.99 * [('x34', 1), ('x41', 1), ('x44', 1), ('x45', 1)])+
0.505 * [('x35', 1), ('x36', 1), ('x41', 1), ('x42', 1), ('x46', 1), ('x47', 1)])+
0.99 * [('x37', 1), ('x38', 1), ('x42', 1), ('x43', 1), ('x48', 1), ('x49', 1)])+
0.99 * [('x39', 1), ('x40', 1), ('x43', 1), ('x50', 1)])+
0.99 * [('x44', 1), ('x51', 1)])+
0.5050000000000001 * [('x45', 1), ('x46', 1), ('x51', 1), ('x52', 1)])+
0.5050000000000001 * [('x47', 1), ('x48', 1), ('x52', 1), ('x53', 1)])+
0.99 * [('x49', 1), ('x50', 1), ('x53', 1)])Default row names c1, c2 ... being created.

Violation: 0.5

Iteration log . . .
Iteration:     1   Dual objective     =            53.000000
Perturbation started.
Iteration:    51   Dual objective     =            53.000000
Removing perturbation.
New point to separate:  [('x1', 1.0), ('x2', 1.0), ('x3', 1.0), ('x5', 1.0), ('x10', 1.0), ('x11', 1.0), ('x13', 1.0), ('x14', 0.9285714285714286), ('x15', 0.0714285714285714), ('x19', 1.0), ('x21', 0.4285714285714286), ('x22', 1.0), ('x23', 0.1428571428571428), ('x24', 0.14285714285714285), ('x25', 0.49999999999999994), ('x26', 0.5), ('x28', 0.8571428571428572), ('x30', 0.8571428571428572), ('x33', 0.6428571428571428), ('x34', 0.9285714285714286), ('x35', 0.9285714285714286), ('x37', 1.0), ('x39', 0.5), ('x40', 0.5), ('x41', 0.07142857142857142), ('x42', 0.9285714285714286), ('x44', 1.0), ('x47', 0.0714285714285714), ('x49', 0.0714285714285714), ('x50', 1.0), ('x51', 1.0), ('x52', 1.0), ('x53', 0.9285714285714286), ('z4,1', 1.0), ('z6,2', 1.0), ('z7,3', 1.0), ('z8,4', 1.0), ('z9,5', 1.0), ('z12,10', 1.0), ('z14,7', 0.0714285714285714), ('z15,7', 0.9285714285714286), ('z16,8', 1.0), ('z17,9', 1.0), ('z18,11', 1.0), ('z20,12', 1.0), ('z21,14', 0.5714285714285714), ('z23,18', 0.8571428571428572), ('z24,13', 0.8571428571428572), ('z25,13', 0.07142857142857145), ('z25,14', 0.4285714285714286), ('z26,15', 0.5), ('z27,15', 0.1428571428571428), ('z27,16', 0.8571428571428572), ('z28,16', 0.1428571428571428), ('z29,17', 1.0), ('z30,18', 0.1428571428571428), ('z31,20', 0.9285714285714286), ('z31,13', 0.07142857142857134), ('z32,22', 0.6428571428571428), ('z32,15', 0.3571428571428572), ('z33,24', 0.3571428571428572), ('z34,19', 0.0714285714285714), ('z35,19', 0.07142857142857144), ('z36,20', 0.0714285714285714), ('z36,21', 0.9285714285714286), ('z38,22', 0.3571428571428572), ('z38,23', 0.6428571428571428), ('z39,23', 0.3571428571428572), ('z39,24', 0.1428571428571428), ('z40,24', 0.5), ('z41,26', 0.0714285714285714), ('z41,19', 0.8571428571428572), ('z42,21', 0.0714285714285714), ('z43,30', 1.0), ('z45,25', 1.0), ('z46,26', 0.9285714285714286), ('z46,27', 0.0714285714285714), ('z47,27', 0.9285714285714286), ('z48,28', 1.0), ('z49,29', 0.9285714285714286), ('z53,29', 0.0714285714285714)]
Objective value:  53.0
Default row names c1, c2 ... being created.
Finding a cutting plane...
Found incumbent of value 0.000000 after 0.00 sec. (0.01 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 1 rows and 132 columns.
Reduced MIP has 82 rows, 254 columns, and 433 nonzeros.
Reduced MIP has 0 binaries, 82 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.39 ticks)
Tried aggregator 1 time.
Reduced MIP has 82 rows, 254 columns, and 433 nonzeros.
Reduced MIP has 0 binaries, 82 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.20 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.00 sec. (0.23 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      202.0000              --- 
      0     0        0.9900    36        0.0000        0.9900      107     --- 
      0     0        0.9900    11        0.0000     Cuts: 108      139     --- 
      0     0        0.9900     7        0.0000   MIRcuts: 17      144     --- 
      0     0        0.9900     1        0.0000    MIRcuts: 8      146     --- 
      0     2        0.9900     1        0.0000        0.9900      146     --- 
Elapsed time = 0.02 sec. (8.85 ticks, tree = 0.01 MB, solutions = 1)
*    10+    1                            0.5000        0.9900            98.00%
   3400  2896        0.9900    16        0.5000        0.9900     7441   98.00%
   4837  1058        0.9824    11        0.5000        0.9900    10639   98.00%
   8805  3259        0.9729     8        0.5000        0.9900    17260   98.00%
  21548 12137        0.7871    10        0.5000        0.9900    44577   98.00%
  33609 19290        0.9643    10        0.5000        0.9900    66933   98.00%
  47894 29375        0.9643     9        0.5000        0.9900   100681   98.00%
  62356 41359        0.9500     8        0.5000        0.9900   142379   98.00%
  76231 50628        0.9500     7        0.5000        0.9900   174058   98.00%
  89056 61523    infeasible              0.5000        0.9900   213393   98.00%

Mixed integer rounding cuts applied:  12
Gomory fractional cuts applied:  31

Root node processing (before b&c):
  Real time             =    0.02 sec. (8.75 ticks)
Parallel b&c, 4 threads:
  Real time             =    6.22 sec. (2540.03 ticks)
  Sync time (average)   =    0.39 sec.
  Wait time (average)   =    0.25 sec.
                          ------------
Total (root+branch&cut) =    6.24 sec. (2548.78 ticks)
Variables that need flooring, and amount to floor: [('x4', 0.97), ('x6', 0.99), ('x7', 0.97), ('x9', 0.050000000000000044), ('x12', 0.99), ('x16', 0.9699999999999998), ('x17', 0.505), ('x18', 0.4849999999999999), ('x27', 0.4849999999999999), ('x31', 0.030000000000000027), ('x32', 0.5150000000000001), ('x36', 0.030000000000000027), ('x38', 0.48499999999997945), ('x43', 0.484999999999979), ('x45', 0.9699999999999998), ('x48', 0.9899999999999585), ('z1,2', 0.010000000000000009), ('z1,31', 0.020000000000000018), ('z2,31', 0.99), ('z4,31', 0.99), ('z5,1', 0.030000000000000027), ('z5,2', 0.010000000000000009), ('z6,3', 0.020000000000000018), ('z8,5', 0.98), ('z9,6', 0.010000000000000009), ('z11,8', 0.030000000000000027), ('z11,1', 0.030000000000000027), ('z12,3', 0.020000000000000018), ('z13,5', 0.98), ('z14,31', 0.020000000000000018), ('z15,8', 0.030000000000000027), ('z16,9', 0.98), ('z18,10', 0.98), ('z19,11', 0.030000000000000027), ('z19,12', 0.030000000000000027), ('z20,31', 0.99), ('z22,16', 0.515), ('z22,9', 0.495), ('z23,11', 0.515), ('z24,31', 0.020000000000000018), ('z26,14', 0.97), ('z29,18', 0.485), ('z30,31', 0.505), ('z34,31', 0.020000000000000018), ('z37,21', 0.9700000000000207), ('z37,22', 2.0761170560490427e-14), ('z40,31', 0.99), ('z42,28', 0.010000000000020659), ('z44,25', 0.030000000000000027), ('z44,31', 0.020000000000000018), ('z45,26', 0.97), ('z47,28', 0.010000000000020659), ('z48,29', 0.9899999999999792), ('z49,30', 0.030000000000020788), ('z50,30', 0.515), ('z50,31', 0.505), ('z51,25', 0.030000000000000027), ('z51,31', 0.020000000000000018), ('z52,31', 0.02000000000002078), ('z53,31', 0.02000000000002078)]
Found cutting plane:  [('x1', 1), ('x2', 2), ('x3', 1), ('x4', 1), ('x5', 2), ('x6', 1), ('x7', 1), ('x8', 1), ('x9', -2), ('x11', 2), ('x13', 1), ('x14', 2), ('x15', 2), ('x16', 2), ('x18', 2), ('x19', 1), ('x20', 1), ('x21', 2), ('x22', 2), ('x23', 2), ('x24', 2), ('x25', 1), ('x26', 2), ('x27', 2), ('x28', 2), ('x29', 2), ('x30', 2), ('x32', 1), ('x33', 2), ('x34', 2), ('x35', 2), ('x36', 1), ('x37', 1), ('x38', 2), ('x39', 2), ('x40', 2), ('x41', 2), ('x42', 2), ('x43', 2), ('x44', 2), ('x45', 2), ('x46', 2), ('x47', 2), ('x48', 1), ('x49', 2), ('x50', 1), ('x51', 2), ('x52', 1), ('x53', 2), ('z1,31', -1), ('z4,1', -1), ('z4,31', -1), ('z5,1', -1), ('z5,2', 1), ('z6,2', 1), ('z6,3', -1), ('z7,3', -1), ('z7,4', -1), ('z8,4', -1), ('z8,5', -1), ('z9,5', -1), ('z9,6', -1), ('z11,1', -1), ('z12,10', -1), ('z12,3', -2), ('z13,12', 1), ('z16,8', 1), ('z17,9', -1), ('z17,10', -1), ('z18,11', 1), ('z19,11', -1), ('z19,12', -1), ('z20,12', 1), ('z22,16', -1), ('z24,13', 1), ('z25,13', 1), ('z26,15', 1), ('z27,15', 1), ('z28,17', 1), ('z29,17', 1), ('z32,15', 1), ('z33,17', 1), ('z35,20', 1), ('z36,20', 1), ('z37,21', -1), ('z37,22', -1), ('z38,23', 1), ('z39,23', 1), ('z41,26', 1), ('z42,28', 1), ('z43,30', 1), ('z43,23', 1), ('z45,25', 1), ('z45,26', 1), ('z46,26', 1), ('z47,28', 1), ('z48,28', 1), ('z48,29', -1), ('z50,30', -1), ('z50,31', -1), ('z52,27', -1), ('z52,31', -1)]
Found cutting plane: <= 44.0
Linear combination is: 
0.98 * [('x1', -1), ('z1,2', -1), ('z1,31', -1)])+
0.99 * [('x2', 1), ('z2,4', 1), ('z2,31', 1)])+
0.010000000000000009 * [('x4', -1), ('z4,1', -1), ('z4,31', -1)])+
0.020000000000000018 * [('x5', 1), ('z5,1', 1), ('z5,2', 1)])+
0.010000000000000009 * [('x6', 1), ('z6,2', 1), ('z6,3', 1)])+
0.010000000000000009 * [('x7', -1), ('z7,3', -1), ('z7,4', -1)])+
0.010000000000000009 * [('x8', -1), ('z8,4', -1), ('z8,5', -1)])+
0.99 * [('x9', -1), ('z9,5', -1), ('z9,6', -1)])+
0.020000000000000018 * [('x11', 1), ('z11,8', 1), ('z11,1', 1)])+
0.99 * [('x12', -1), ('z12,10', -1), ('z12,3', -1)])+
0.99 * [('x13', 1), ('z13,12', 1), ('z13,5', 1)])+
0.020000000000000018 * [('x14', 1), ('z14,7', 1), ('z14,31', 1)])+
0.020000000000000018 * [('x15', 1), ('z15,7', 1), ('z15,8', 1)])+
0.99 * [('x16', 1), ('z16,8', 1), ('z16,9', 1)])+
0.99 * [('x17', -1), ('z17,9', -1), ('z17,10', -1)])+
0.99 * [('x18', 1), ('z18,10', 1), ('z18,11', 1)])+
0.98 * [('x19', -1), ('z19,11', -1), ('z19,12', -1)])+
0.99 * [('x20', 1), ('z20,12', 1), ('z20,31', 1)])+
0.020000000000000018 * [('x21', 1), ('z21,14', 1), ('z21,7', 1)])+
0.505 * [('x22', 1), ('z22,16', 1), ('z22,9', 1)])+
0.505 * [('x23', 1), ('z23,18', 1), ('z23,11', 1)])+
0.020000000000000018 * [('x24', 1), ('z24,13', 1), ('z24,31', 1)])+
0.020000000000000018 * [('x25', 1), ('z25,13', 1), ('z25,14', 1)])+
0.99 * [('x26', 1), ('z26,14', 1), ('z26,15', 1)])+
0.99 * [('x27', 1), ('z27,15', 1), ('z27,16', 1)])+
0.99 * [('x28', 1), ('z28,16', 1), ('z28,17', 1)])+
0.99 * [('x29', 1), ('z29,17', 1), ('z29,18', 1)])+
0.505 * [('x30', 1), ('z30,18', 1), ('z30,31', 1)])+
0.98 * [('x31', -1), ('z31,20', -1), ('z31,13', -1)])+
0.99 * [('x32', 1), ('z32,22', 1), ('z32,15', 1)])+
0.9900000000000001 * [('x33', 1), ('z33,24', 1), ('z33,17', 1)])+
0.020000000000000018 * [('x34', 1), ('z34,19', 1), ('z34,31', 1)])+
0.020000000000000018 * [('x35', 1), ('z35,19', 1), ('z35,20', 1)])+
0.020000000000000018 * [('x36', 1), ('z36,20', 1), ('z36,21', 1)])+
0.009999999999979248 * [('x37', -1), ('z37,21', -1), ('z37,22', -1)])+
0.99 * [('x38', 1), ('z38,22', 1), ('z38,23', 1)])+
0.99 * [('x39', 1), ('z39,23', 1), ('z39,24', 1)])+
0.99 * [('x40', 1), ('z40,24', 1), ('z40,31', 1)])+
0.020000000000000018 * [('x41', 1), ('z41,26', 1), ('z41,19', 1)])+
0.02000000000002078 * [('x42', 1), ('z42,28', 1), ('z42,21', 1)])+
0.99 * [('x43', 1), ('z43,30', 1), ('z43,23', 1)])+
0.020000000000000018 * [('x44', 1), ('z44,25', 1), ('z44,31', 1)])+
0.99 * [('x45', 1), ('z45,25', 1), ('z45,26', 1)])+
0.020000000000000018 * [('x46', 1), ('z46,26', 1), ('z46,27', 1)])+
0.02000000000002078 * [('x47', 1), ('z47,27', 1), ('z47,28', 1)])+
0.010000000000000009 * [('x48', 1), ('z48,28', 1), ('z48,29', 1)])+
0.02000000000002078 * [('x49', 1), ('z49,29', 1), ('z49,30', 1)])+
0.495 * [('x50', -1), ('z50,30', -1), ('z50,31', -1)])+
0.020000000000000018 * [('x51', 1), ('z51,25', 1), ('z51,31', 1)])+
0.9799999999999792 * [('x52', -1), ('z52,27', -1), ('z52,31', -1)])+
0.02000000000002078 * [('x53', 1), ('z53,29', 1), ('z53,31', 1)])+
0.99 * [('z4,1', -1), ('z5,1', -1), ('z11,1', -1)])+
0.99 * [('z1,2', 1), ('z5,2', 1), ('z6,2', 1)])+
0.99 * [('z6,3', -1), ('z7,3', -1), ('z12,3', -1)])+
0.99 * [('z2,4', -1), ('z7,4', -1), ('z8,4', -1)])+
0.010000000000000009 * [('z8,5', -1), ('z9,5', -1), ('z13,5', -1)])+
0.020000000000000018 * [('z14,7', -1), ('z15,7', -1), ('z21,7', -1)])+
0.010000000000000009 * [('z11,8', 1), ('z15,8', 1), ('z16,8', 1)])+
0.010000000000000009 * [('z16,9', -1), ('z17,9', -1), ('z22,9', -1)])+
0.010000000000000009 * [('z12,10', -1), ('z17,10', -1), ('z18,10', -1)])+
0.010000000000000009 * [('z18,11', 1), ('z19,11', 1), ('z23,11', 1)])+
0.010000000000000009 * [('z13,12', 1), ('z19,12', 1), ('z20,12', 1)])+
0.98 * [('z24,13', 1), ('z25,13', 1), ('z31,13', 1)])+
0.020000000000000018 * [('z21,14', -1), ('z25,14', -1), ('z26,14', -1)])+
0.010000000000000009 * [('z26,15', 1), ('z27,15', 1), ('z32,15', 1)])+
0.99 * [('z22,16', -1), ('z27,16', -1), ('z28,16', -1)])+
0.010000000000000009 * [('z28,17', 1), ('z29,17', 1), ('z33,17', 1)])+
0.505 * [('z23,18', -1), ('z29,18', -1), ('z30,18', -1)])+
0.020000000000000018 * [('z34,19', -1), ('z35,19', -1), ('z41,19', -1)])+
0.98 * [('z31,20', 1), ('z35,20', 1), ('z36,20', 1)])+
0.020000000000000018 * [('z36,21', -1), ('z37,21', -1), ('z42,21', -1)])+
0.99 * [('z32,22', -1), ('z37,22', -1), ('z38,22', -1)])+
0.010000000000000009 * [('z38,23', 1), ('z39,23', 1), ('z43,23', 1)])+
0.99 * [('z33,24', -1), ('z39,24', -1), ('z40,24', -1)])+
0.010000000000000009 * [('z44,25', 1), ('z45,25', 1), ('z51,25', 1)])+
0.98 * [('z41,26', 1), ('z45,26', 1), ('z46,26', 1)])+
0.02000000000002078 * [('z46,27', -1), ('z47,27', -1), ('z52,27', -1)])+
0.99 * [('z42,28', 1), ('z47,28', 1), ('z48,28', 1)])+
0.02000000000002078 * [('z48,29', -1), ('z49,29', -1), ('z53,29', -1)])+
0.010000000000000009 * [('z43,30', 1), ('z49,30', 1), ('z50,30', 1)])+
0.99 * [('x1', 1), ('x4', 1), ('x5', 1)])+
0.99 * [('x1', 1), ('x2', 1), ('x6', 1), ('x7', 1)])+
0.020000000000000018 * [('x2', 1), ('x3', 1), ('x8', 1), ('x9', 1)])+
0.98 * [('x3', 1), ('x10', 1)])+
0.99 * [('x4', 1), ('x11', 1), ('x14', 1), ('x15', 1)])+
0.99 * [('x5', 1), ('x6', 1), ('x11', 1), ('x12', 1), ('x16', 1), ('x17', 1)])+
0.99 * [('x7', 1), ('x8', 1), ('x12', 1), ('x13', 1), ('x18', 1), ('x19', 1)])+
0.98 * [('x9', -1), ('x10', -1), ('x13', -1), ('x20', -1)])+
0.99 * [('x14', 1), ('x21', 1), ('x24', 1), ('x25', 1)])+
0.99 * [('x15', 1), ('x16', 1), ('x21', 1), ('x22', 1), ('x26', 1), ('x27', 1)])+
0.505 * [('x17', 1), ('x18', 1), ('x22', 1), ('x23', 1), ('x28', 1), ('x29', 1)])+
0.99 * [('x19', 1), ('x20', 1), ('x23', 1), ('x30', 1)])+
0.99 * [('x24', 1), ('x31', 1), ('x34', 1), ('x35', 1)])+
0.020000000000000018 * [('x25', 1), ('x26', 1), ('x31', 1), ('x32', 1), ('x36', 1), ('x37', 1)])+
0.505 * [('x27', 1), ('x28', 1), ('x32', 1), ('x33', 1), ('x38', 1), ('x39', 1)])+
0.505 * [('x29', 1), ('x30', 1), ('x33', 1), ('x40', 1)])+
0.99 * [('x34', 1), ('x41', 1), ('x44', 1), ('x45', 1)])+
0.99 * [('x35', 1), ('x36', 1), ('x41', 1), ('x42', 1), ('x46', 1), ('x47', 1)])+
0.9899999999999792 * [('x37', 1), ('x38', 1), ('x42', 1), ('x43', 1), ('x48', 1), ('x49', 1)])+
0.505 * [('x39', 1), ('x40', 1), ('x43', 1), ('x50', 1)])+
0.99 * [('x44', 1), ('x51', 1)])+
0.99 * [('x45', 1), ('x46', 1), ('x51', 1), ('x52', 1)])+
0.9899999999999792 * [('x47', 1), ('x48', 1), ('x52', 1), ('x53', 1)])+
0.99 * [('x49', 1), ('x50', 1), ('x53', 1)])Default row names c1, c2 ... being created.

Violation: 0.5

Iteration log . . .
Iteration:     1   Dual objective     =            53.000000
New point to separate:  [('x1', 1.0), ('x2', 1.0), ('x3', 1.0), ('x5', 1.0), ('x10', 1.0), ('x11', 1.0), ('x13', 1.0), ('x14', 1.000000000000001), ('x19', 1.0), ('x21', 0.3333333333333344), ('x22', 1.0), ('x24', 0.6666666666666656), ('x26', 0.6666666666666667), ('x28', 1.0), ('x30', 1.0), ('x33', 0.6666666666666667), ('x34', 1.0), ('x35', 0.3333333333333344), ('x36', 0.33333333333333337), ('x37', 1.0), ('x39', 0.3333333333333333), ('x40', 0.33333333333333326), ('x42', 0.6666666666666666), ('x43', 0.33333333333333337), ('x44', 1.0), ('x46', 0.3333333333333328), ('x47', 0.3333333333333328), ('x50', 1.0), ('x51', 1.0), ('x52', 0.6666666666666672), ('x53', 1.0), ('z4,1', 1.0), ('z6,2', 1.0), ('z7,3', 1.0), ('z8,4', 1.0), ('z9,5', 1.0), ('z12,10', 1.0), ('z15,7', 1.000000000000001), ('z16,8', 1.0), ('z17,9', 1.0), ('z18,11', 1.0), ('z20,12', 1.0), ('z21,14', 0.6666666666666656), ('z23,18', 1.0), ('z24,13', 0.33333333333333437), ('z25,13', 0.6666666666666656), ('z25,14', 0.33333333333333437), ('z26,15', 0.33333333333333326), ('z27,16', 1.0), ('z29,17', 1.0), ('z31,20', 1.0), ('z32,22', 0.33333333333333326), ('z32,15', 0.6666666666666667), ('z33,24', 0.33333333333333326), ('z35,19', 0.6666666666666656), ('z36,21', 0.6666666666666666), ('z38,22', 0.6666666666666667), ('z38,23', 0.33333333333333326), ('z39,23', 0.6666666666666667), ('z40,24', 0.6666666666666667), ('z41,26', 0.6666666666666656), ('z41,19', 0.33333333333333437), ('z42,21', 0.33333333333333337), ('z43,30', 0.6666666666666666), ('z45,25', 1.0), ('z46,26', 0.3333333333333344), ('z46,27', 0.3333333333333328), ('z47,27', 0.3333333333333338), ('z47,28', 0.33333333333333337), ('z48,28', 0.6666666666666666), ('z48,29', 0.33333333333333337), ('z49,29', 0.6666666666666666), ('z49,30', 0.33333333333333337), ('z52,27', 0.3333333333333328)]
Objective value:  53.0
Default row names c1, c2 ... being created.
Finding a cutting plane...
Found incumbent of value 0.000000 after 0.00 sec. (0.01 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 1 rows and 135 columns.
Reduced MIP has 75 rows, 238 columns, and 399 nonzeros.
Reduced MIP has 0 binaries, 75 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.38 ticks)
Tried aggregator 1 time.
Reduced MIP has 75 rows, 238 columns, and 399 nonzeros.
Reduced MIP has 0 binaries, 75 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.19 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.00 sec. (0.21 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      202.0000              --- 
      0     0        0.9900    28        0.0000        0.9900       94     --- 
      0     0        0.9900     8        0.0000      Cuts: 84      120     --- 
      0     0        0.9900     6        0.0000   MIRcuts: 16      126     --- 
      0     0        0.9900     6        0.0000    MIRcuts: 9      131     --- 
      0     0        0.9900     7        0.0000    MIRcuts: 1      132     --- 
      0     2        0.9900     7        0.0000        0.9900      132     --- 
Elapsed time = 0.02 sec. (7.67 ticks, tree = 0.01 MB, solutions = 1)
*   410+  179                            0.6667        0.9900            48.50%

Mixed integer rounding cuts applied:  66
Gomory fractional cuts applied:  22

Root node processing (before b&c):
  Real time             =    0.02 sec. (7.59 ticks)
Parallel b&c, 4 threads:
  Real time             =    0.05 sec. (24.89 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.07 sec. (32.48 ticks)
Variables that need flooring, and amount to floor: [('x4', 0.99), ('x6', 0.99), ('x7', 0.97), ('x8', 0.98), ('x9', 0.98), ('x12', 0.97), ('x15', 0.98), ('x16', 0.97), ('x17', 0.010000000000000009), ('x20', 0.99), ('x23', 0.010000000000000009), ('x25', 0.5150000000000001), ('x27', 0.7375), ('x29', 0.010000000000000009), ('x31', 0.5049999999999999), ('x32', 0.7575000000000001), ('x38', 0.7575000000000001), ('x45', 0.98), ('x48', 0.505), ('x49', 0.505), ('z1,2', 0.010000000000000009), ('z1,31', 0.020000000000000018), ('z2,4', 0.020000000000000018), ('z2,31', 0.020000000000000018), ('z4,31', 0.010000000000000009), ('z5,1', 0.010000000000000009), ('z5,2', 0.010000000000000009), ('z6,3', 0.020000000000000018), ('z7,4', 0.99), ('z11,8', 0.030000000000000027), ('z11,1', 0.010000000000000009), ('z13,12', 0.010000000000000009), ('z13,5', 0.020000000000000018), ('z14,7', 0.020000000000000018), ('z14,31', 0.020000000000000018), ('z15,8', 0.010000000000000009), ('z16,9', 0.99), ('z17,10', 0.010000000000000009), ('z19,11', 0.030000000000000027), ('z19,12', 0.010000000000000009), ('z20,31', 0.010000000000000009), ('z21,7', 0.020000000000000018), ('z22,16', 0.99), ('z22,9', 0.99), ('z23,11', 0.010000000000000009), ('z24,31', 0.020000000000000018), ('z26,14', 0.485), ('z27,15', 0.495), ('z28,16', 0.23249999999999993), ('z28,17', 0.23249999999999993), ('z30,18', 0.020000000000000018), ('z30,31', 0.020000000000000018), ('z31,13', 0.99), ('z33,17', 0.26249999999999996), ('z34,31', 0.020000000000000018), ('z35,20', 0.010000000000000009), ('z36,20', 0.4950000000000001), ('z37,21', 0.4849999999999999), ('z37,22', 0.4849999999999999), ('z39,24', 0.24250000000000016), ('z40,31', 0.26249999999999996), ('z42,28', 0.4950000000000001), ('z43,23', 0.24250000000000005), ('z44,25', 0.020000000000000018), ('z44,31', 0.020000000000000018), ('z45,26', 0.98), ('z50,30', 0.5149999999999999), ('z50,31', 0.26249999999999996), ('z51,25', 0.020000000000000018), ('z51,31', 0.020000000000000018), ('z52,31', 0.020000000000000018), ('z53,29', 0.010000000000000009), ('z53,31', 0.020000000000000018)]
Found cutting plane:  [('x1', 2), ('x2', 2), ('x5', 1), ('x6', 1), ('x7', 1), ('x8', 1), ('x9', 1), ('x11', 2), ('x12', 1), ('x13', 2), ('x14', 1), ('x15', 1), ('x16', 1), ('x17', 1), ('x18', 2), ('x19', 2), ('x20', 1), ('x21', 2), ('x22', 2), ('x23', 1), ('x24', 2), ('x25', 1), ('x26', 2), ('x29', 1), ('x30', 2), ('x31', 1), ('x33', 1), ('x34', 2), ('x35', 2), ('x36', 2), ('x37', 2), ('x39', 1), ('x40', 2), ('x41', 2), ('x42', 2), ('x43', 2), ('x44', 2), ('x45', 1), ('x46', 2), ('x47', 2), ('x50', 1), ('x51', 2), ('x52', 2), ('x53', 2), ('z1,2', 1), ('z4,1', -1), ('z4,31', -1), ('z5,1', -1), ('z6,2', 1), ('z6,3', -1), ('z7,3', -1), ('z7,4', -1), ('z11,8', -1), ('z12,10', -1), ('z12,3', -1), ('z13,12', 1), ('z14,7', -1), ('z14,31', -1), ('z15,8', -1), ('z16,8', -1), ('z16,9', -1), ('z17,10', -1), ('z18,11', 1), ('z19,12', 1), ('z20,12', 1), ('z24,13', 1), ('z25,13', 1), ('z27,15', -1), ('z31,20', 1), ('z32,22', 1), ('z33,24', 1), ('z34,19', 1), ('z35,19', 1), ('z35,20', 1), ('z36,20', 1), ('z36,21', 1), ('z37,21', 1), ('z37,22', 1), ('z38,22', 1), ('z39,24', 1), ('z40,24', 1), ('z41,26', 1), ('z41,19', 1), ('z42,28', 1), ('z42,21', 1), ('z43,30', 1), ('z46,26', 1), ('z46,27', -1), ('z47,27', -1), ('z47,28', 1), ('z49,30', -1), ('z50,30', -1), ('z50,31', -1), ('z52,27', -1), ('z53,29', 1)]
Found cutting plane: <= 43.0
Linear combination is: 
0.020000000000000018 * [('x1', 1), ('z1,2', 1), ('z1,31', 1)])+
0.020000000000000018 * [('x2', 1), ('z2,4', 1), ('z2,31', 1)])+
0.99 * [('x4', -1), ('z4,1', -1), ('z4,31', -1)])+
0.98 * [('x5', -1), ('z5,1', -1), ('z5,2', -1)])+
0.010000000000000009 * [('x6', 1), ('z6,2', 1), ('z6,3', 1)])+
0.010000000000000009 * [('x7', -1), ('z7,3', -1), ('z7,4', -1)])+
0.020000000000000018 * [('x11', 1), ('z11,8', 1), ('z11,1', 1)])+
0.010000000000000009 * [('x12', -1), ('z12,10', -1), ('z12,3', -1)])+
0.020000000000000018 * [('x13', 1), ('z13,12', 1), ('z13,5', 1)])+
0.98 * [('x14', -1), ('z14,7', -1), ('z14,31', -1)])+
0.010000000000000009 * [('x16', -1), ('z16,8', -1), ('z16,9', -1)])+
0.99 * [('x18', 1), ('z18,10', 1), ('z18,11', 1)])+
0.020000000000000018 * [('x19', 1), ('z19,11', 1), ('z19,12', 1)])+
0.010000000000000009 * [('x20', 1), ('z20,12', 1), ('z20,31', 1)])+
0.020000000000000018 * [('x21', 1), ('z21,14', 1), ('z21,7', 1)])+
0.99 * [('x22', 1), ('z22,16', 1), ('z22,9', 1)])+
0.020000000000000018 * [('x24', 1), ('z24,13', 1), ('z24,31', 1)])+
0.020000000000000018 * [('x25', 1), ('z25,13', 1), ('z25,14', 1)])+
0.505 * [('x26', 1), ('z26,14', 1), ('z26,15', 1)])+
0.23249999999999993 * [('x28', 1), ('z28,16', 1), ('z28,17', 1)])+
0.020000000000000018 * [('x30', 1), ('z30,18', 1), ('z30,31', 1)])+
0.010000000000000009 * [('x31', 1), ('z31,20', 1), ('z31,13', 1)])+
0.505 * [('x32', 1), ('z32,22', 1), ('z32,15', 1)])+
0.26249999999999996 * [('x33', 1), ('z33,24', 1), ('z33,17', 1)])+
0.020000000000000018 * [('x34', 1), ('z34,19', 1), ('z34,31', 1)])+
0.020000000000000018 * [('x35', 1), ('z35,19', 1), ('z35,20', 1)])+
0.505 * [('x36', 1), ('z36,20', 1), ('z36,21', 1)])+
0.99 * [('x37', 1), ('z37,21', 1), ('z37,22', 1)])+
0.505 * [('x38', 1), ('z38,22', 1), ('z38,23', 1)])+
0.505 * [('x39', 1), ('z39,23', 1), ('z39,24', 1)])+
0.26249999999999996 * [('x40', 1), ('z40,24', 1), ('z40,31', 1)])+
0.020000000000000018 * [('x41', 1), ('z41,26', 1), ('z41,19', 1)])+
0.505 * [('x42', 1), ('z42,28', 1), ('z42,21', 1)])+
0.7475 * [('x43', 1), ('z43,30', 1), ('z43,23', 1)])+
0.020000000000000018 * [('x44', 1), ('z44,25', 1), ('z44,31', 1)])+
0.020000000000000018 * [('x46', 1), ('z46,26', 1), ('z46,27', 1)])+
0.020000000000000018 * [('x47', 1), ('z47,27', 1), ('z47,28', 1)])+
0.99 * [('x48', -1), ('z48,28', -1), ('z48,29', -1)])+
0.99 * [('x49', -1), ('z49,29', -1), ('z49,30', -1)])+
0.7375 * [('x50', -1), ('z50,30', -1), ('z50,31', -1)])+
0.020000000000000018 * [('x51', 1), ('z51,25', 1), ('z51,31', 1)])+
0.020000000000000018 * [('x52', 1), ('z52,27', 1), ('z52,31', 1)])+
0.020000000000000018 * [('x53', 1), ('z53,29', 1), ('z53,31', 1)])+
0.010000000000000009 * [('z4,1', -1), ('z5,1', -1), ('z11,1', -1)])+
0.99 * [('z1,2', 1), ('z5,2', 1), ('z6,2', 1)])+
0.99 * [('z6,3', -1), ('z7,3', -1), ('z12,3', -1)])+
0.99 * [('z11,8', -1), ('z15,8', -1), ('z16,8', -1)])+
0.99 * [('z12,10', -1), ('z17,10', -1), ('z18,10', -1)])+
0.010000000000000009 * [('z18,11', 1), ('z19,11', 1), ('z23,11', 1)])+
0.99 * [('z13,12', 1), ('z19,12', 1), ('z20,12', 1)])+
0.98 * [('z24,13', 1), ('z25,13', 1), ('z31,13', 1)])+
0.020000000000000018 * [('z21,14', -1), ('z25,14', -1), ('z26,14', -1)])+
0.505 * [('z26,15', -1), ('z27,15', -1), ('z32,15', -1)])+
0.98 * [('z34,19', 1), ('z35,19', 1), ('z41,19', 1)])+
0.99 * [('z31,20', 1), ('z35,20', 1), ('z36,20', 1)])+
0.495 * [('z36,21', 1), ('z37,21', 1), ('z42,21', 1)])+
0.495 * [('z32,22', 1), ('z37,22', 1), ('z38,22', 1)])+
0.505 * [('z38,23', -1), ('z39,23', -1), ('z43,23', -1)])+
0.7375 * [('z33,24', 1), ('z39,24', 1), ('z40,24', 1)])+
0.98 * [('z41,26', 1), ('z45,26', 1), ('z46,26', 1)])+
0.99 * [('z46,27', -1), ('z47,27', -1), ('z52,27', -1)])+
0.99 * [('z42,28', 1), ('z47,28', 1), ('z48,28', 1)])+
0.99 * [('z48,29', 1), ('z49,29', 1), ('z53,29', 1)])+
0.25249999999999995 * [('z43,30', 1), ('z49,30', 1), ('z50,30', 1)])+
0.99 * [('x1', 1), ('x4', 1), ('x5', 1)])+
0.99 * [('x1', 1), ('x2', 1), ('x6', 1), ('x7', 1)])+
0.99 * [('x2', 1), ('x3', 1), ('x8', 1), ('x9', 1)])+
0.99 * [('x3', -1), ('x10', -1)])+
0.99 * [('x4', 1), ('x11', 1), ('x14', 1), ('x15', 1)])+
0.99 * [('x5', 1), ('x6', 1), ('x11', 1), ('x12', 1), ('x16', 1), ('x17', 1)])+
0.99 * [('x7', 1), ('x8', 1), ('x12', 1), ('x13', 1), ('x18', 1), ('x19', 1)])+
0.99 * [('x9', 1), ('x10', 1), ('x13', 1), ('x20', 1)])+
0.99 * [('x14', 1), ('x21', 1), ('x24', 1), ('x25', 1)])+
0.99 * [('x15', 1), ('x16', 1), ('x21', 1), ('x22', 1), ('x26', 1), ('x27', 1)])+
0.020000000000000018 * [('x17', 1), ('x18', 1), ('x22', 1), ('x23', 1), ('x28', 1), ('x29', 1)])+
0.99 * [('x19', 1), ('x20', 1), ('x23', 1), ('x30', 1)])+
0.99 * [('x24', 1), ('x31', 1), ('x34', 1), ('x35', 1)])+
0.505 * [('x25', 1), ('x26', 1), ('x31', 1), ('x32', 1), ('x36', 1), ('x37', 1)])+
0.25249999999999995 * [('x27', -1), ('x28', -1), ('x32', -1), ('x33', -1), ('x38', -1), ('x39', -1)])+
0.99 * [('x29', 1), ('x30', 1), ('x33', 1), ('x40', 1)])+
0.99 * [('x34', 1), ('x41', 1), ('x44', 1), ('x45', 1)])+
0.99 * [('x35', 1), ('x36', 1), ('x41', 1), ('x42', 1), ('x46', 1), ('x47', 1)])+
0.505 * [('x37', 1), ('x38', 1), ('x42', 1), ('x43', 1), ('x48', 1), ('x49', 1)])+
0.7475 * [('x39', 1), ('x40', 1), ('x43', 1), ('x50', 1)])+
0.99 * [('x44', 1), ('x51', 1)])+
0.99 * [('x45', 1), ('x46', 1), ('x51', 1), ('x52', 1)])+
0.99 * [('x47', 1), ('x48', 1), ('x52', 1), ('x53', 1)])+
0.99 * [('x49', 1), ('x50', 1), ('x53', 1)])Default row names c1, c2 ... being created.

Violation: 0.6666666666666643

Iteration log . . .
Iteration:     1   Dual objective     =            53.000000
New point to separate:  [('x1', 1.0), ('x2', 1.0), ('x3', 1.0), ('x5', 1.0), ('x10', 1.0), ('x11', 1.0), ('x13', 1.0), ('x14', 1.0), ('x19', 1.0), ('x22', 1.0), ('x24', 1.0), ('x26', 1.0), ('x28', 1.0), ('x30', 1.0), ('x33', 1.0), ('x34', 1.0), ('x36', 1.0), ('x42', 1.0), ('x43', 1.0), ('x44', 1.0), ('x50', 1.0), ('x51', 1.0), ('x52', 1.0), ('x53', 1.0), ('z4,1', 1.0), ('z6,2', 1.0), ('z7,3', 1.0), ('z8,4', 1.0), ('z9,5', 1.0), ('z12,10', 1.0), ('z15,7', 1.0), ('z16,8', 1.0), ('z17,9', 1.0), ('z18,11', 1.0), ('z20,12', 1.0), ('z21,14', 1.0), ('z23,18', 1.0), ('z25,13', 1.0), ('z27,16', 1.0), ('z29,17', 1.0), ('z31,20', 1.0), ('z32,15', 1.0), ('z35,19', 1.0), ('z37,21', 1.0), ('z38,22', 1.0), ('z39,23', 1.0), ('z40,24', 1.0), ('z41,26', 1.0), ('z45,25', 1.0), ('z46,27', 1.0), ('z47,28', 1.0), ('z48,29', 1.0), ('z49,30', 1.0)]
Objective value:  53.0
Default row names c1, c2 ... being created.
Finding a cutting plane...
Found incumbent of value 0.000000 after 0.00 sec. (0.01 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 1 rows and 149 columns.
Reduced MIP has 54 rows, 183 columns, and 282 nonzeros.
Reduced MIP has 0 binaries, 54 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.30 ticks)
Tried aggregator 1 time.
Reduced MIP has 54 rows, 183 columns, and 282 nonzeros.
Reduced MIP has 0 binaries, 54 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.14 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.00 sec. (0.15 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            0.0000      202.0000              --- 
      0     0        0.9900    22        0.0000        0.9900       55     --- 
      0     0        cutoff              0.0000        0.9900       55     --- 
Elapsed time = 0.00 sec. (0.82 ticks, tree = 0.01 MB, solutions = 1)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.82 ticks)
Parallel b&c, 4 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.82 ticks)
Variables that need flooring, and amount to floor: []
Done
